{"query":{},"url":"/api-reference/class/Part.json","lang":{"relative_url_prefix":"/","code":"en-us","url":"/api-reference/class/Part.json"},"content_type":"class_landing_page","entry":{"title":"Part","url":"/api-reference/class/Part","modular_blocks":[{"api_class_section":{"current_class":[{"title":"Part","category":"Building","code_sample":[{"title":"Create a Part in a Script","url":"/code-samples/using-a-script-to-create-a-part","display_title":"Create a Part in a Script","duration":"","date":null,"sequence_number":null,"tutorial_category":[],"thumbnail_image":null,"summary":"","short_description":"","code_summary":"The script below spawns a new `Part` instance and sets several of the part's properties. \n\nMost notably, the script sets the `Part/Shape` property to `Enum/PartType|Enum.PartType.Ball`. It also names the part *JurrasicPart* (hehe), anchors it, makes it a child of *Workspace*, and sets its color to white.","start_line_number":"","code_sample":"local part = Instance.new(\"Part\")\t\t-- Create a new part\n\npart.Name = \"JurrasicPart\"\t\t\t-- Name the part... hehe\npart.Anchored = true\t\t\t\t-- Anchor the part\npart.Parent = game.Workspace\t\t-- Put the part into the Workspace\npart.Shape = Enum.PartType.Ball\t\t-- Give the part a ball shape\npart.Color = Color3.new(1, 1, 1)\t\t-- Set the color to black","expected_output":"","validated_in_version":"","comments_issues":"","tags":[],"locale":"en-us","uid":"bltacc4b368740b125e","created_by":"bltb3147545f90dee1b","updated_by":"bltb3147545f90dee1b","created_at":"2018-08-09T01:29:47.449Z","updated_at":"2018-08-09T01:45:39.766Z","_version":3,"published_at":"2019-06-15T00:23:44.519Z"}],"roblox_api_tags":[],"summary":"The Part object is a physical object, commonly known as a **brick**","description":"## What is a Part\nThe Part object is a physical object. When it is in the `Workspace`, it will move and interact with other Parts. It can have bonds formed with other Parts, so that the two Parts stay in the same relative position.\n\nParts are the basic building blocks of any Roblox place. Commonly known as **bricks**, you'll see these the most often of any other objects as almost every place is built out of these. It is possible to stretch a Part to very large sizes and use them for baseplates, or make them very small and use them to create cool looking `Tool`.\n\n## How can I edit a Part\nThe Part object can be edited using the various studio tools. It is available via either the insert menu, or the *Object Insert menu*. It can also be created using the function:\n``` lua\nInstance.new(\"Part\")\n```\n\n## How do I create different shaped Parts\nUsing the Mesh objects, such as `SpecialMesh`, `BlockMesh`, or `CylinderMesh` objects you can change the shape of them. Using the `Decal` or `Texture` objects, you can place pictures on top of the bricks.\n\n## Changing Parts using scripts\nThere are many scripting opportunities using the Part object. Many of the other scripting objects, such as `BodyForce` objects operate inside of a Part or other physics based objects. Editing the Part's properties through a script can result in a lot of fun opportunities.","deprecation_message":"","wikitext":"{{APIClassPage|Description=\n\nThe Part object is a physical object. When it is in the [[API:Class/Workspace|Workspace]], it will move and interact with other Parts. It can have bonds formed with other Parts, so that the two Parts stay in the same relative position.\n\nParts are the basic building blocks of any Roblox place. Commonly known as \"bricks\", you'll see these the most often of any other objects as almost every place is built out of these. It is possible to stretch a Part to very large sizes and use them for baseplates, or make them very small and use them to create cool looking [[API:Class/Tool|Tools]].\n\nThe Part object can be edited using the various [[studio]] tools. It is available via either the [[insert]] menu, or the ''Object Insert menu''. It can also be created using the 'Instance.new()' function.\n\nUsing the Mesh objects, such as [[API:Class/SpecialMesh|SpecialMesh]], [[API:Class/BlockMesh|BlockMesh]], or [[API:Class/CylinderMesh|CylinderMesh]] objects you can change the shape of them. Using the [[API:Class/Decal|Decal]] or [[API:Class/Texture|Texture]] objects, you can place pictures on top of the bricks.\n\nThere are many scripting opportunities using the Part object. Many of the other scripting objects, such as [[API:Class/BodyForce|BodyForce]] objects operate inside of a Part or other physics based objects. Editing the Part's properties through a script can result in a lot of fun opportunities.\n}}","property":[{"title":"Part.Shape","type":"PartType","locale":"en-us","tags":[],"summary":"Sets the type of shape the object has.","description":"The Shape property sets the type of shape the object has.\n\nThe `Enum/PartType` enum controls the shape value, and has three possible shapes:\n| Shape/Value | Description                           |\n|-------------|---------------------------------------|\n| Ball        | A spherical shape, like a basketball. |\n| Cylinder    | A rod-like shape, like a tin can.     |\n| Block       | The default, brick shape.             |\n\nTo obtain custom part shapes, you can use a `MeshPart` instead of a `Part`.","code_sample":[{"title":"Create a Part in a Script","url":"/code-samples/using-a-script-to-create-a-part","display_title":"Create a Part in a Script","duration":"","date":null,"sequence_number":null,"tutorial_category":[],"thumbnail_image":null,"summary":"","short_description":"","code_summary":"The script below spawns a new `Part` instance and sets several of the part's properties. \n\nMost notably, the script sets the `Part/Shape` property to `Enum/PartType|Enum.PartType.Ball`. It also names the part *JurrasicPart* (hehe), anchors it, makes it a child of *Workspace*, and sets its color to white.","start_line_number":"","code_sample":"local part = Instance.new(\"Part\")\t\t-- Create a new part\n\npart.Name = \"JurrasicPart\"\t\t\t-- Name the part... hehe\npart.Anchored = true\t\t\t\t-- Anchor the part\npart.Parent = game.Workspace\t\t-- Put the part into the Workspace\npart.Shape = Enum.PartType.Ball\t\t-- Give the part a ball shape\npart.Color = Color3.new(1, 1, 1)\t\t-- Set the color to black","expected_output":"","validated_in_version":"","comments_issues":"","tags":[],"locale":"en-us","uid":"bltacc4b368740b125e","created_by":"bltb3147545f90dee1b","updated_by":"bltb3147545f90dee1b","created_at":"2018-08-09T01:29:47.449Z","updated_at":"2018-08-09T01:45:39.766Z","_version":3,"published_at":"2019-06-15T00:23:44.519Z"}],"serialization":{"can_save":false,"can_load":true},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"","api_property_url":"/api-reference/property/Part/Shape","roblox_api_tags":["NotReplicated"],"studio_category":"Part ","script_editor_context":[],"wiki_text_reference":"{{APIMemberPage\n|ClassName=Part\n|MemberType=Property\n|Description=Sets the type of shape the object has.\n}}","uid":"blta17add6367439107","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt0d2e21c80087f7ec0b18bbac","created_at":"2018-06-05T12:19:22.104Z","updated_at":"2018-08-23T11:55:47.249Z","_version":15,"display_title":"Shape","api_dump_signature":"9941e47b59251d198385dda8a32aba4e1ff32e47_v2","url":"/api-reference/property/Part/Shape","type_category":"Enum","fast_flags":[],"published_at":"2019-06-14T22:53:18.538Z"}],"function":[],"event":[],"callback":[],"locale":"en-us","tags":[],"uid":"blte7a6acce9367697e","created_by":"blt056181872171cff69cfbc0c3","updated_by":"bltb3147545f90dee1b","created_at":"2018-06-05T12:37:45.837Z","updated_at":"2019-04-19T02:31:02.524Z","_version":20,"deprecated_property":[],"deprecated_function":[],"deprecated_event":[],"deprecated_callback":[],"class_url":"/api-reference/class/Part","url":"/api-reference/class/Part","api_dump_signature":"22a9e93ec0de31c9aa4ae0f54b8bb3c865557084_v2","fast_flags":[],"published_at":"2019-06-14T21:20:44.176Z"}],"inherited_class":[{"title":"Seat","category":"Gameplay","code_sample":[{"title":"Seat Occupant","display_title":"Detecting Seat Occupant","code_summary":"This code sample includes a demonstration of how the `Seat/Occupant` property can be used to track which player is sitting in a seat and when they sit down or sit up.","code_sample":"    local Players = game:GetService(\"Players\")\n    \n    local seat = Instance.new(\"Seat\")\n    seat.Anchored = true \n    seat.Position = Vector3.new(0, 1, 0)\n    seat.Parent = workspace \n    \n    local currentPlayer = nil\n    \n    seat:GetPropertyChangedSignal(\"Occupant\"):Connect(function()\n    \tlocal humanoid = seat.Occupant \n    \tif humanoid then \n    \t\tlocal character = humanoid.Parent\n    \t\tlocal player = Players:GetPlayerFromCharacter(character)\n    \t\tif player then \n    \t\t\tprint(player.Name..\" has sat down\")\n    \t\t\tcurrentPlayer = player\n    \t\t\treturn\n    \t\tend\t\n    \tend\n    \tif currentPlayer then \n    \t\tprint(currentPlayer.Name..\" has got up\")\n    \t\tcurrentPlayer = nil\n    \tend\n    end)","validated_in_version":"","comments_issues":"","tags":[],"locale":"en-us","uid":"blt181f24eafcb7aee3","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:09:04.049Z","updated_at":"2018-06-26T18:08:37.303Z","url":"/code-sample/Seat-Occupant","_version":10,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[{"title":"Gameplay","url":"/learn-roblox/gameplay","tags":["gameplay"],"locale":"en-us","uid":"blt5af3dbfaf8b943b1","created_by":"blta2e338f6e324b43c","updated_by":"blt61d7b6b13aecbf76","created_at":"2018-06-14T17:00:36.233Z","updated_at":"2018-06-19T16:57:56.153Z","_version":4,"show_in_sidebar":true,"published_at":"2019-06-14T23:38:53.320Z"}],"published_at":"2019-06-15T00:37:20.613Z"}],"roblox_api_tags":[],"summary":"A type of `BasePart` that characters can 'sit' in. When a character touches an enabled Seat object, it will be attached to the part by a `Weld` and the default character scripts will play a sitting animation.  ","description":"A type of `BasePart` that a player character can 'sit' in. When a character touches an enabled Seat object, it will be attached to the part by a `Weld` and the default character scripts will play a sitting animation.  \n\n## How do Seats work?\n\nWhen a model containing a `Humanoid` and a `BasePart` called 'HumanoidRootPart' (generally a player character) touches a seat, a `Weld` is created between the seat and the part. The `JointInstance/C0|C0` and `JointInstance/C1|C1` properties are configured so that the character is welded 2 studs above the seat. This weld is named 'SeatWeld' and parented to the seat. \n\nWhen sitting the `Seat/Occupant` property is set to the `Humanoid` that is 'sitting' in the seat. Furthermore the `Humanoid/SeatPart` property of the humanoid is set to the seat.\n\nA character can also be forced to sit in a seat using the `Seat/Sit` function.\n\nThere are two ways for a character to get out of a seat. When a player jumps, they are removed from the seat. However this can also be done manually by destroying the seat weld, for example:\n\n    seat:FindFirstChild(\"SeatWeld\"):Destroy()\n\nNote seats have a cooldown (currently 3 seconds) that is on a per-character per-seat basis. This means once a character has gotten out of a seat they cannot sit back on the same seat for 3 seconds. This cooldown behavior may change and should not be relied upon by developers.\n\n## What can Seats be used for?\n\nSeats have a diverse range of uses, ranging from the obvious to the more unconventional.\n\n - Creating chairs or benches without the need for any programming\n - Allowing characters to 'sit' in moving objects such as vehicles without getting flung around\n - Creating interfaces that are controlled by the character in the seat using the `Seat/Occupant` property\n\n","deprecation_message":"","wikitext":"{{APIClassPage\n|Description=\nThe Seat object creates a brick that when touched by a player will anchor their torso to the brick and move their arms and legs forward, in a sitting position just above the brick. This allows for the creation of vehicles that players can sit in and not be flung about the cabin/deck of the vehicle.\n<br>\nThe Seat object is very useful for letting people sit. Be it a park bench, a roller coaster, a seat on a bus or a plane, anything where you want someone to sit down and not move. When a player sits on the seat a Weld constraint is created, so they are 'attached' to the seat and can't move until that weld is broken. It can be removed by hitting the spacebar, when the player jumps to exit the seat.\n}}","property":[{"title":"Seat.Disabled","type":"bool","locale":"en-us","tags":[],"summary":"Whether or not the seat is usable. If set to true, the seat will act as a normal part.","description":"Whether or not the seat is usable. If set to true, the seat will act as a normal part.","code_sample":[],"serialization":{"can_save":true,"can_load":true},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"","api_property_url":"/api-reference/property/Seat/Disabled","roblox_api_tags":[],"studio_category":"Control","script_editor_context":[],"wiki_text_reference":"{{APIMemberPage\n|MemberType=Property\n|ClassName=Seat\n|Description=Whether or not the seat is usable. If set to true, the seat will act as a normal part. \n}}","uid":"blt4d2f9b4873af0ce4","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T12:19:19.337Z","updated_at":"2018-07-24T01:14:33.582Z","_version":10,"display_title":"Disabled","api_dump_signature":"e5d10867b2a089d9c8be659603bd979f07099743_v2","url":"/api-reference/property/Seat/Disabled","type_category":"Primitive","published_at":"2019-06-14T23:12:37.853Z"},{"title":"Seat.Occupant","type":"Humanoid","locale":"en-us","tags":[],"summary":"The humanoid that is sitting in the seat","description":"The humanoid that is sitting in the seat","code_sample":[],"serialization":{"can_save":false,"can_load":false},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"","api_property_url":"/api-reference/property/Seat/Occupant","roblox_api_tags":["ReadOnly","NotReplicated"],"studio_category":"Control","script_editor_context":[],"wiki_text_reference":"{{API:Class/VehicleSeat/Occupant}}","uid":"blt4a5b6e8cbc732c72","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T12:19:39.482Z","updated_at":"2018-07-24T01:14:37.429Z","_version":10,"display_title":"Occupant","api_dump_signature":"18d4da10b1a74a21f943950820122910a737a619_v2","url":"/api-reference/property/Seat/Occupant","type_category":"Class","published_at":"2019-06-14T23:12:35.807Z"}],"function":[{"title":"Seat:Sit","url":"/api-reference/function/Seat/Sit","locale":"en-us","tags":[],"summary":"Forces the character with the specified <a href=\"/api-reference/class/Humanoid\" class=\"mw-redirect\" title=\"Humanoid\">Humanoid</a> to sit in the Seat.","description":"Forces the character with the specified <a href=\"/api-reference/class/Humanoid\" class=\"mw-redirect\" title=\"Humanoid\">Humanoid</a> to sit in the Seat.","code_sample":[],"roblox_api_tags":[],"returns":[{"return_type":"void","return_category":"Primitive"}],"argument":[{"type":"Instance","category":"Class","name":"humanoid","default":""}],"deprecation_message":"","wikitext":"{{APIMemberPage\n|Description=Forces the character with the specified [[Humanoid]] to sit in the Seat.\n}}","security":"None","uid":"blt4b461c8faf695a5d","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:47:16.408Z","updated_at":"2018-08-22T20:12:46.214Z","_version":13,"display_title":"Sit","api_dump_signature":"7ec9d1ddab01d2ce1f38bb7398f165bc6bec180d_v2","published_at":"2019-06-14T22:19:50.635Z"}],"event":[],"callback":[],"locale":"en-us","tags":[],"uid":"blt5dfad677860633e6","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T12:39:19.685Z","updated_at":"2018-07-24T01:14:29.617Z","_version":13,"deprecated_property":[],"deprecated_function":[],"deprecated_event":[],"deprecated_callback":[],"class_url":"/api-reference/class/Seat","url":"/api-reference/class/Seat","api_dump_signature":"5b268967e656a72e82f4ec0ee8a19583b1b1e9c9_v2","published_at":"2019-06-14T21:29:45.423Z"},{"title":"SkateboardPlatform","category":null,"code_sample":[],"roblox_api_tags":["Deprecated"],"summary":"A SkateboardPlatform can be used to create a skateboard. When characters get on a skateboard, they are stuck to it until they press the escape key. Until then, the character uses skateboard animations and travels faster than a walking character.","description":"A SkateboardPlatform can be used to create a skateboard. When characters get on a skateboard, they are stuck to it until they press the escape key. Until then, the character uses skateboard animations and travels faster than a walking character.","deprecation_message":"The SkateboardPlatform object has been deprecated and is no longer supported by Roblox. Developers looking to create skateboards or similar vehicles are advised to program their own systems. Additionally, the `VehicleSeat` object can be used to quickly create simple vehicles.\n\n","wikitext":"{{APIClassPage\n|Description=A SkateboardPlatform can be used to create a skateboard. When characters get on a skateboard, they are stuck to it until they press the escape key. Until then, the character uses skateboard animations and travels faster than a walking character.\n|Notes=\nWhen a humanoid touches a SkateboardPlatform, the parent of the SkateboardPlatform is parented to the Humanoid. Because of this, you should create SkateboardPlatforms inside Model objects.\n\n{{tree|\n\t{{tree/node|Model|Skateboard|\n\t\t{{tree/node|SkateboardPlatform|SkateboardPlatform|}}\n\t}}\n}}\n|BlockMember : BasePart/ReceiveAge\n|BlockMember : BasePart/DraggingV1\n|BlockMember : BasePart/Friction\n|BlockMember : BasePart/Elasticity\n}}","property":[{"title":"SkateboardPlatform.Controller","type":"SkateboardController","locale":"en-us","tags":["deprecated"],"summary":"The SkateboardPlatform's active SkateboardController.","description":"The SkateboardPlatform's active SkateboardController.","code_sample":[],"serialization":{"can_save":false,"can_load":false},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"The SkateboardPlatform object has been deprecated and is no longer supported by Roblox. Developers looking to create skateboards or similar vehicles are advised to program their own systems. Additionally, the `VehicleSeat` object can be used to quickly create simple vehicles.","api_property_url":"/api-reference/property/SkateboardPlatform/Controller","roblox_api_tags":["ReadOnly","NotReplicated"],"studio_category":"Control","script_editor_context":[],"wiki_text_reference":"{{APIMemberPage\n|Description=The SkateboardPlatform's active SkateboardController.\n|TypeArgs.value=Class/SkateboardController\n}}","uid":"blt47c8e8bb182db6fc","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T12:08:26.385Z","updated_at":"2018-07-24T01:14:48.819Z","_version":9,"display_title":"Controller","api_dump_signature":"73571c33881b7286015372e2cd9604b4c2bbd596_v2","url":"/api-reference/property/SkateboardPlatform/Controller","type_category":"Class","published_at":"2019-06-14T23:12:33.597Z"},{"title":"SkateboardPlatform.ControllingHumanoid","type":"Humanoid","locale":"en-us","tags":["deprecated"],"summary":"The `/Humanoid` that is controlling the SkateboardPlatform.","description":"The `/Humanoid` that is controlling the SkateboardPlatform.","code_sample":[],"serialization":{"can_save":false,"can_load":false},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"The SkateboardPlatform object has been deprecated and is no longer supported by Roblox. Developers looking to create skateboards or similar vehicles are advised to program their own systems. Additionally, the `VehicleSeat` object can be used to quickly create simple vehicles.","api_property_url":"/api-reference/property/SkateboardPlatform/ControllingHumanoid","roblox_api_tags":["ReadOnly","NotReplicated"],"studio_category":"Control","script_editor_context":[],"wiki_text_reference":"{{APIMemberPage\n|MemberType=Property\n|TypeArgs.value=Class/Humanoid\n|Description=The [[API:Class/Humanoid|Humanoid]] that is controlling the SkateboardPlatform.\n}}","uid":"blt03ed4fd5b579c460","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T12:08:35.886Z","updated_at":"2018-07-24T01:14:52.502Z","_version":9,"display_title":"ControllingHumanoid","api_dump_signature":"f37ca061f648a46e2ca2c7fd56ea179f11f1bbe3_v2","url":"/api-reference/property/SkateboardPlatform/ControllingHumanoid","type_category":"Class","published_at":"2019-06-14T23:12:31.438Z"},{"title":"SkateboardPlatform.Steer","type":"int","locale":"en-us","tags":["deprecated"],"summary":"The direction of movement, tied to the keys A and D. Must be 1 (right), 0 (straight), or -1 (left). Will refresh back to 0 unless constantly set.","description":"The direction of movement, tied to the keys A and D. Must be 1 (right), 0 (straight), or -1 (left). Will refresh back to 0 unless constantly set.","code_sample":[],"serialization":{"can_save":true,"can_load":true},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"The SkateboardPlatform object has been deprecated and is no longer supported by Roblox. Developers looking to create skateboards or similar vehicles are advised to program their own systems. Additionally, the `VehicleSeat` object can be used to quickly create simple vehicles.","api_property_url":"/api-reference/property/SkateboardPlatform/Steer","roblox_api_tags":[],"studio_category":"Control","script_editor_context":[],"wiki_text_reference":"{{APIMemberPage\n|MemberType=Property\n|Description=The direction of movement, tied to the keys A and D. Must be 1 (right), 0 (straight), or -1 (left). Will refresh back to 0 unless constantly set.\n}}","uid":"blt4538c8bec823cf2c","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T12:08:06.783Z","updated_at":"2018-07-24T01:14:56.386Z","_version":9,"display_title":"Steer","api_dump_signature":"de293860119f2d7f057c9d93a1f400e6431ec3e1_v2","url":"/api-reference/property/SkateboardPlatform/Steer","type_category":"Primitive","published_at":"2019-06-14T23:12:28.328Z"},{"title":"SkateboardPlatform.StickyWheels","type":"bool","locale":"en-us","tags":["deprecated"],"summary":"If true, wheels won't roll without user input.","description":"If true, wheels won't roll without user input.","code_sample":[],"serialization":{"can_save":true,"can_load":true},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"The SkateboardPlatform object has been deprecated and is no longer supported by Roblox. Developers looking to create skateboards or similar vehicles are advised to program their own systems. Additionally, the `VehicleSeat` object can be used to quickly create simple vehicles.","api_property_url":"/api-reference/property/SkateboardPlatform/StickyWheels","roblox_api_tags":[],"studio_category":"Control","script_editor_context":[],"wiki_text_reference":"{{APIMemberPage\n|MemberType=Property\n|Description=If true, wheels won't roll without user input.\n}}","uid":"blt876d1ba950a6531b","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T12:08:01.080Z","updated_at":"2018-07-24T01:14:59.936Z","_version":9,"display_title":"StickyWheels","api_dump_signature":"6420e332be16fa3446cd9436b45310b654641f30_v2","url":"/api-reference/property/SkateboardPlatform/StickyWheels","type_category":"Primitive","published_at":"2019-06-14T23:12:26.186Z"},{"title":"SkateboardPlatform.Throttle","type":"int","locale":"en-us","tags":["deprecated"],"summary":"The direction of movement, tied to the keys W and S. Must be an integer 1 (forward), 0 (null), or -1 (reverse). Will refresh back to 0 unless constantly set.","description":"The direction of movement, tied to the keys W and S. Must be an integer 1 (forward), 0 (null), or -1 (reverse). Will refresh back to 0 unless constantly set.","code_sample":[],"serialization":{"can_save":true,"can_load":true},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"The SkateboardPlatform object has been deprecated and is no longer supported by Roblox. Developers looking to create skateboards or similar vehicles are advised to program their own systems. Additionally, the `VehicleSeat` object can be used to quickly create simple vehicles.","api_property_url":"/api-reference/property/SkateboardPlatform/Throttle","roblox_api_tags":[],"studio_category":"Control","script_editor_context":[],"wiki_text_reference":"{{APIMemberPage\n|MemberType=Property\n|Description=The direction of movement, tied to the keys W and S. Must be an integer 1 (forward), 0 (null), or -1 (reverse). Will refresh back to 0 unless constantly set.\n}}","uid":"bltf28c106942fb87ae","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T12:07:55.111Z","updated_at":"2018-07-24T01:15:03.345Z","_version":9,"display_title":"Throttle","api_dump_signature":"01c3728a10b3a9e8f37369fb58426d25b232872a_v2","url":"/api-reference/property/SkateboardPlatform/Throttle","type_category":"Primitive","published_at":"2019-06-14T23:12:23.280Z"}],"function":[{"title":"SkateboardPlatform:ApplySpecificImpulse","url":"/api-reference/function/SkateboardPlatform/ApplySpecificImpulse","locale":"en-us","tags":["deprecated"],"summary":"Adds ''impulseWorld'' to the SkateboardPlatform's `/BasePart/Velocity`.","description":"Adds ''impulseWorld'' to the SkateboardPlatform's `/BasePart/Velocity`.","code_sample":[],"roblox_api_tags":[],"returns":[{"return_type":"void","return_category":"Primitive","summary":""}],"argument":[{"type":"Vector3","category":"DataType","name":"impulseWorld","default":""}],"deprecation_message":"The SkateboardPlatform object has been deprecated and is no longer supported by Roblox. Developers looking to create skateboards or similar vehicles are advised to program their own systems. Additionally, the `VehicleSeat` object can be used to quickly create simple vehicles.","wikitext":"{{APIMemberPage\n|MemberType=Function\n|Description=Adds ''impulseWorld'' to the SkateboardPlatform's [[API:Class/BasePart/Velocity|Velocity]].\n}}","security":"None","uid":"bltc902539c17bc4cdc","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:40:46.338Z","updated_at":"2018-07-24T01:15:06.663Z","_version":9,"display_title":"ApplySpecificImpulse","api_dump_signature":"0672dd9513320e0bfbaeb2dac11a69c48b284231_v2","published_at":"2019-06-14T22:32:02.430Z"}],"event":[{"title":"SkateboardPlatform.Equipped","summary":"Fired when the skateboard is equipped.","description":"Fired when the skateboard is equipped.","code_sample":[],"wikitext":"{{APIMemberPage\n|MemberType=Event\n|TypeArgs.humanoid=Class/Humanoid\n|TypeArgs.skateboardController=Class/SkateboardController\n|Description=Fired when the skateboard is equipped.\n}}","security":"None","roblox_api_tags":[],"argument":[{"type":"Instance","name":"humanoid","default":"","summary":"The `Humanoid` associated with the character equipping the skateboard."},{"type":"Instance","name":"skateboardController","default":"","summary":"The `SkateboardController`."}],"deprecation_message":"The SkateboardPlatform object has been deprecated and is no longer supported by Roblox. Developers looking to create skateboards or similar vehicles are advised to program their own systems. Additionally, the `VehicleSeat` object can be used to quickly create simple vehicles.","locale":"en-us","tags":["deprecated"],"uid":"blt43925b9bc14522b3","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:23:52.558Z","updated_at":"2018-07-24T01:15:10.057Z","_version":12,"display_title":"Equipped","api_dump_signature":"cc7f2d4f44bfefcc6eb3f7ab022ab57c94971ce4_v2","api_event_url":"/api-reference/event/SkateboardPlatform/Equipped","type":"RBXScriptSignal","url":"/api-reference/event/SkateboardPlatform/Equipped","published_at":"2019-06-14T22:02:02.887Z"},{"title":"SkateboardPlatform.MoveStateChanged","summary":"Fired when the SkateboardPlatform's `/SkateboardPlatform/ControllingHumanoid` changes the force being used on the SkateboardPlatform.","description":"Fired when the SkateboardPlatform's `/SkateboardPlatform/ControllingHumanoid` changes the force being used on the SkateboardPlatform.","code_sample":[],"wikitext":"{{APIMemberPage\n|MemberType=Event\n|Description=Fired when the SkateboardPlatform's [[API:Class/SkateboardPlatform/ControllingHumanoid|ControllingHumanoid]] changes the force being used on the SkateboardPlatform.\n}}","security":"None","roblox_api_tags":[],"argument":[{"type":"MoveState","name":"newState","default":"","summary":"The new `Enum/MoveState`."},{"type":"MoveState","name":"oldState","default":"","summary":"The old `Enum/MoveState`."}],"deprecation_message":"The SkateboardPlatform object has been deprecated and is no longer supported by Roblox. Developers looking to create skateboards or similar vehicles are advised to program their own systems. Additionally, the `VehicleSeat` object can be used to quickly create simple vehicles.","locale":"en-us","tags":["deprecated"],"uid":"blt611b7cafb4a87f84","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:23:56.737Z","updated_at":"2018-07-24T01:15:13.559Z","_version":12,"display_title":"MoveStateChanged","api_dump_signature":"245673f19cb9ec25352b9f5fbf1f4af5b0bf16fa_v2","api_event_url":"/api-reference/event/SkateboardPlatform/MoveStateChanged","type":"RBXScriptSignal","url":"/api-reference/event/SkateboardPlatform/MoveStateChanged","published_at":"2019-06-14T22:02:00.734Z"},{"title":"SkateboardPlatform.Unequipped","summary":"Fired whenever the skateboard is unequipped.","description":"Fired whenever the skateboard is unequipped.","code_sample":[],"wikitext":"{{APIMemberPage\n|MemberType=Event\n|TypeArgs.humanoid=Class/Humanoid\n|Description=Fired whenever the skateboard is unequipped.\n}}","security":"None","roblox_api_tags":[],"argument":[{"type":"Instance","name":"humanoid","default":"","summary":"The `Humanoid` associated with the character that unequipped the skateboard."}],"deprecation_message":"The SkateboardPlatform object has been deprecated and is no longer supported by Roblox. Developers looking to create skateboards or similar vehicles are advised to program their own systems. Additionally, the `VehicleSeat` object can be used to quickly create simple vehicles.","locale":"en-us","tags":["deprecated"],"uid":"blt454e0204fbedff11","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:23:55.395Z","updated_at":"2018-07-24T01:15:16.874Z","_version":12,"display_title":"Unequipped","api_dump_signature":"4e56b76c88da169e68ac664c8fc0b62010bd13ba_v2","api_event_url":"/api-reference/event/SkateboardPlatform/Unequipped","type":"RBXScriptSignal","url":"/api-reference/event/SkateboardPlatform/Unequipped","published_at":"2019-06-14T22:01:58.552Z"}],"callback":[],"locale":"en-us","tags":[],"uid":"blt9bd3ca195ccbef8f","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T12:39:10.212Z","updated_at":"2018-07-24T01:14:44.995Z","_version":11,"class_url":"/api-reference/class/SkateboardPlatform","url":"/api-reference/class/SkateboardPlatform","api_dump_signature":"5189911a577c77cddff590583883ca14b38964e5_v2","deprecated_property":[],"deprecated_function":[],"deprecated_event":[{"title":"SkateboardPlatform.equipped","summary":"","description":"","code_sample":[],"wikitext":"Error fetching documentation from Wiki","security":"None","roblox_api_tags":["Deprecated"],"argument":[{"type":"Instance","name":"humanoid","default":""},{"type":"Instance","name":"skateboardController","default":""}],"deprecation_message":"This deprecated event is a variant of `/SkateboardPlatform/Equipped` which has also been deprecated. Neither event should be used in new work.","locale":"en-us","tags":[],"uid":"bltf344dca0c187dc5d","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:25:04.035Z","updated_at":"2018-07-24T01:15:20.117Z","_version":12,"display_title":"equipped","api_dump_signature":"7d8421feffe6037a3d183fae1dde494d4436bb9b_v2","api_event_url":"/api-reference/event/SkateboardPlatform/equipped","type":"RBXScriptSignal","url":"/api-reference/event/SkateboardPlatform/equipped","published_at":"2019-06-14T22:01:56.556Z"},{"title":"SkateboardPlatform.unequipped","summary":"","description":"","code_sample":[],"wikitext":"Error fetching documentation from Wiki","security":"None","roblox_api_tags":["Deprecated"],"argument":[{"type":"Instance","name":"humanoid","default":""}],"deprecation_message":"This deprecated event is a variant of `/SkateboardPlatform/Unequipped` which has also been deprecated. Neither event should be used in new work.","locale":"en-us","tags":[],"uid":"bltc9014b605ad49f5e","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:25:06.826Z","updated_at":"2018-07-24T01:15:23.673Z","_version":12,"display_title":"unequipped","api_dump_signature":"0e6eb6c897a178dc2b1d6fc9f454d9cdaddfcaf9_v2","api_event_url":"/api-reference/event/SkateboardPlatform/unequipped","type":"RBXScriptSignal","url":"/api-reference/event/SkateboardPlatform/unequipped","published_at":"2019-06-14T22:01:54.426Z"}],"deprecated_callback":[],"published_at":"2019-06-14T21:29:43.326Z"},{"title":"SpawnLocation","category":"Gameplay","code_sample":[{"title":"SpawnLocation Checkpoints","display_title":"SpawnLocation Checkpoints","code_summary":"This sample demonstrates how SpawnLocations can be used to make a checkpoint system. Typically this would be done Studio and not in Lua, but this example serves as a comprehensive example of what Team and SpawnLocation properties need to be used to achieve this setup.","code_sample":"local Teams = game:GetService(\"Teams\")\n\n-- create start team (AutoAssignable = true)\nlocal startTeam = Instance.new(\"Team\", Teams)\nstartTeam.Name = \"Start\"\nstartTeam.AutoAssignable = true\nstartTeam.TeamColor = BrickColor.new(\"White\")\n\n-- create checkpoint teams (Autoassignable = false), ensuring all TeamColors are unique\nlocal team1 = Instance.new(\"Team\", Teams)\nteam1.Name = \"Checkpoint 1\"\nteam1.AutoAssignable = false\nteam1.TeamColor = BrickColor.new(\"Bright blue\")\n\nlocal team2 = Instance.new(\"Team\", Teams)\nteam2.Name = \"Checkpoint 2\"\nteam2.AutoAssignable = false\nteam2.TeamColor = BrickColor.new(\"Bright green\")\n\nlocal team3 = Instance.new(\"Team\", Teams)\nteam3.Name = \"Checkpoint 2\"\nteam3.AutoAssignable = false\nteam3.TeamColor = BrickColor.new(\"Bright red\")\n\n-- create spawns \nlocal startSpawn = Instance.new(\"SpawnLocation\", game.Workspace)\nstartSpawn.Anchored = true\nstartSpawn.Size = Vector3.new(5, 1, 5)\nstartSpawn.Neutral = false\nstartSpawn.AllowTeamChangeOnTouch = false\nstartSpawn.TeamColor = startTeam.TeamColor\nstartSpawn.BrickColor = startTeam.TeamColor\n\nlocal team1Spawn = Instance.new(\"SpawnLocation\", game.Workspace)\nteam1Spawn.Anchored = true\nteam1Spawn.Size = Vector3.new(5, 1, 5)\nteam1Spawn.Neutral = false\nteam1Spawn.AllowTeamChangeOnTouch = true\nteam1Spawn.TeamColor = team1.TeamColor\nteam1Spawn.BrickColor = team1.TeamColor\n\nlocal team2Spawn = Instance.new(\"SpawnLocation\", game.Workspace)\nteam2Spawn.Anchored = true\nteam2Spawn.Size = Vector3.new(5, 1, 5)\nteam2Spawn.Neutral = false\nteam2Spawn.AllowTeamChangeOnTouch = true\nteam2Spawn.TeamColor = team2.TeamColor\nteam2Spawn.BrickColor = team2.TeamColor\n\nlocal team3Spawn = Instance.new(\"SpawnLocation\", game.Workspace)\nteam3Spawn.Anchored = true\nteam3Spawn.Size = Vector3.new(5, 1, 5)\nteam3Spawn.Neutral = false\nteam3Spawn.AllowTeamChangeOnTouch = true\nteam3Spawn.TeamColor = team3.TeamColor\nteam3Spawn.BrickColor = team3.TeamColor\n\n-- position spawns\nstartSpawn.CFrame = CFrame.new(0, 0.5, 0)\nteam1Spawn.CFrame = CFrame.new(10, 0.5, 0)\nteam2Spawn.CFrame = CFrame.new(20, 0.5, 0)\nteam3Spawn.CFrame = CFrame.new(30, 0.5, 0)","validated_in_version":"","comments_issues":"","tags":[],"locale":"en-us","uid":"blt7ba6b2f30acff1fa","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:13:20.638Z","updated_at":"2018-06-26T18:08:37.996Z","url":"/code-sample/SpawnLocation-Checkpoints","_version":11,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[{"title":"Gameplay","url":"/learn-roblox/gameplay","tags":["gameplay"],"locale":"en-us","uid":"blt5af3dbfaf8b943b1","created_by":"blta2e338f6e324b43c","updated_by":"blt61d7b6b13aecbf76","created_at":"2018-06-14T17:00:36.233Z","updated_at":"2018-06-19T16:57:56.153Z","_version":4,"show_in_sidebar":true,"published_at":"2019-06-14T23:38:53.320Z"}],"published_at":"2019-06-15T00:37:18.312Z"}],"roblox_api_tags":[],"summary":"`SpawnLocation|SpawnLocations`, or \"spawns\" determine where a `Player` respawns when they die. They can be configured to allow only certain players to use each spawn, using `Team|Teams`. They also control how `ForceField|ForceFields` are set up for newly-spawned players.\n\n","description":"SpawnLocations, or \"spawns\" determine where a `Player` respawns when they die. They can be configured to allow only certain players to use each spawn, using `Team|Teams`. They also control how `ForceField|ForceFields` are set up for newly-spawned players.\n\nSpawnLocations can be used as checkpoints, such as in an obstacle course, using the `SpawnLocation/AllowTeamChangeOnTouch` property, so that when a player touches it, they will change teams to the SpawnLocation's team. In this case, only the first `Team` should have `Team/AutoAssignable` set to true, else players will not start at the first checkpoint.\n\nNote if a SpawnLocation is added to the `Workspace` in Studio with `SpawnLocation/Neutral` set to false a Team will be created corresponding to `SpawnLocation/TeamColor` if it does not already exist. This behavior does not occur when spawns are created in-game using a `Script` or if the properties of the SpawnLocation are changed after already being added. It is recommended that developers always set up their teams manually and not rely on this behavior. \n\n**Spawning Rules**\n\n - When `SpawnLocation/Neutral` is set to false only `Player|Players` with `Player/TeamColor` matching `SpawnLocation/TeamColor` will respawn above it\n - When `SpawnLocation/Neutral` is set to true any Player can spawn above it regardless of `SpawnLocation/TeamColor`\n - If multiple eligible spawns are available to a `Player`, a random one will be chosen\n - Players will spawn at different points on top of a SpawnLocation, but currently, they may still spawn on top of each other if they spawn right after one and other\n\n","deprecation_message":"","wikitext":"{{APIClassPage\n|Description=\n[[Image:Spawn2016.png|200px|thumb|A SpawnLocation, characterized by the 8-pointed spiral texture on its top surface]]\n'''SpawnLocation'''s, or \"spawns\" determine where a player respawns when they die. They can be configured to allow only certain players to use each spawn, using {{api|Teams}}. They also control how {{api|ForceField}}s are set up for newly-spawned players.\n\nSpawnLocations can be used as checkpoints, such as in an obstacle course, using the {{api|SpawnLocation.AllowTeamChangeOnTouch}} property, so that when a player touches it, they will change teams to the SpawnLocation's team. In this case, only the first team should be {{api|Team.AutoAssignable}}, else players will not start at the first checkpoint.\n\n=== Spawning rules ===\nWhen {{api|SpawnLocation.Neutral}} is {{false}}, only the players with a {{api|Player.TeamColor}} property matching this object's {{api|SpawnLocation.TeamColor}} will respawn above it. {{api|Team}}s will be automatically generated for SpawnLocations belonging to teams that don't exist.\n\nOtherwise, all players will spawn above the spawnlocation.\n\nIf there are multiple matching spawns for a player, a random one will be selected for them to spawn on.\n\n|Notes=\nSpawnLocations do not have to be parented to the Workspace in order for players to spawn on them. For example, if you have a SpawnLocation in {{api|Lighting}}, players will still spawn at its position. This may be a [https://github.com/Anaminus/roblox-bug-tracker/issues/5 bug].\n|Tutorials=[[How do I add Teams?]]\n|SeeAlso=\n* [[How to use Spawns]] - a more in depth tutorial (that needs merging into here...)\n|BlockMember : BasePart/DraggingV1\n|BlockMember : BasePart/ReceiveAge\n|BlockMember : BasePart/SpecificGravity\n|BlockMember : BasePart/Elasticity\n|BlockMember : BasePart/Friction\n}}","property":[{"title":"SpawnLocation.Duration","type":"int","locale":"en-us","tags":[],"summary":"The length of time, in seconds, that a `ForceField` will be applied to a `Player` character spawning at this `SpawnLocation`. If Duration is zero, the `ForceField` is never created, and it will not trigger the `Instance/DescendantAdded` or `Instance/ChildAdded` events.","description":"The length of time, in seconds, that a `ForceField` will be applied to a `Player` character spawning at this `SpawnLocation`. If Duration is zero, the `ForceField` is never created, and it will not trigger the `Instance/DescendantAdded` or `Instance/ChildAdded` events.\n\nThis default value of this property is 10 seconds.\n\nThe duration feature allows developers to easily give `Player`s protection from 'spawn killing' which can be a frustrating experience for players. Note, `ForceField`s will only protect users from `Explosion`s and Weapons that use `Humanoid/TakeDamage` to deal damage or otherwise check for a `ForceField`.","code_sample":[{"title":"SpawnLocation ForceField","display_title":"SpawnLocation ForceField","code_summary":"This sample will create a neutral SpawnLocation in the Workspace that'll give players spawning a ForceField for 20 seconds.","code_sample":"local spawnLocation = Instance.new(\"SpawnLocation\", game.Workspace)\nspawnLocation.Anchored = true\nspawnLocation.Size = Vector3.new(5, 1, 5)\nspawnLocation.Neutral = true -- anyone can spawn here\nspawnLocation.Duration = 20 -- ForceField duration 20s","validated_in_version":"","comments_issues":"","tags":[],"locale":"en-us","uid":"blt7796d19e822ae89a","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:13:17.910Z","updated_at":"2018-06-26T18:08:13.241Z","url":"/code-sample/SpawnLocation-ForceField","_version":10,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"published_at":"2019-06-15T00:37:40.800Z"}],"serialization":{"can_save":true,"can_load":true},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"","api_property_url":"/api-reference/property/SpawnLocation/Duration","roblox_api_tags":[],"studio_category":"Forcefield","script_editor_context":[],"wiki_text_reference":"{{APIMemberPage\n|MemberType=Property\n|ClassName=SpawnLocation\n|Description=The length of time, in seconds, that a forcefield will be on a player spawning at this SpawnLocation. If Duration is zero, the forcefield is never created, and it will not trigger the DescendantAdded or ChildAdded events.\n}}","uid":"blt4525ce0c88fbc918","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T12:06:03.126Z","updated_at":"2018-07-24T01:15:34.757Z","_version":9,"display_title":"Duration","api_dump_signature":"2a241a92dee168e2e017f5ff80ccf984655e2e5a_v2","url":"/api-reference/property/SpawnLocation/Duration","type_category":"Primitive","published_at":"2019-06-14T23:12:21.038Z"},{"title":"SpawnLocation.Enabled","type":"bool","locale":"en-us","tags":[],"summary":"Sets whether or not the `SpawnLocation` is enabled. When disabled players cannot spawn at the `SpawnLocation` and the AllowTeamChangeOnTouch functionality is disabled.","description":"Sets whether or not the `SpawnLocation` is enabled. When disabled players cannot spawn at the `SpawnLocation` and the `SpawnLocation/AllowTeamChangeOnTouch` functionality is disabled.\n\nThis property provides the most convenient way of preventing `Player`s from spawning at a spawn.\n\nNote, although team changing on touch using `SpawnLocation/AllowTeamChangeOnTouch` is disabled when Enabled is set to false, other touched events using `BasePart.Touched` will still fire.","code_sample":[{"title":"SpawnLocation Enabled","display_title":"SpawnLocation Enabled","code_summary":"The following sample will create a SpawnLocation in the Workspace that will become semi-transparent when it is disabled.","code_sample":"local spawnLocation = Instance.new(\"SpawnLocation\", game.Workspace)\nspawnLocation.Anchored = true\nspawnLocation.Size = Vector3.new(5, 1, 5)\nspawnLocation.Neutral = true -- anyone can spawn here\nspawnLocation.Enabled = true\n\nspawnLocation:GetPropertyChangedSignal(\"Enabled\"):Connect(function()\n\tspawnLocation.Transparency = spawnLocation.Enabled and 0 or 0.5\nend)\n\nwait(5)\nspawnLocation.Enabled = false -- transparency = 0.5","validated_in_version":"","comments_issues":"","tags":[],"locale":"en-us","uid":"blte12473bac32e1fbe","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:13:19.302Z","updated_at":"2018-06-26T18:08:38.700Z","url":"/code-sample/SpawnLocation-Enabled","_version":10,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"published_at":"2019-06-15T00:37:16.025Z"}],"serialization":{"can_save":true,"can_load":true},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"","api_property_url":"/api-reference/property/SpawnLocation/Enabled","roblox_api_tags":[],"studio_category":"Behavior","script_editor_context":[],"wiki_text_reference":"{{APIMemberPage\n|MemberType=Property\n|ClassName=SpawnLocation\n|Description=Whether or not players can spawn at the [[API:Class/SpawnLocation|SpawnLocation]].\n}}","uid":"bltfc1a4a3cc0fde9ba","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T12:07:17.836Z","updated_at":"2018-07-24T01:15:38.250Z","_version":9,"display_title":"Enabled","api_dump_signature":"377c839486cdc9fe7712bd5232ff06c0beb39484_v2","url":"/api-reference/property/SpawnLocation/Enabled","type_category":"Primitive","published_at":"2019-06-14T23:12:18.853Z"},{"title":"SpawnLocation.Neutral","type":"bool","locale":"en-us","tags":[],"summary":"Whether or not a `SpawnLocation` is affiliated with a specific team. This means that any `Player`, of any `Team`, can spawn on it if this property is set to true. ","description":"Whether or not a spawn is affiliated with a specific team. This means that any `Player`, of any `Team`, can spawn on it if this property is set to true. \n\nIf Neutral is set to false, only players whose `Player/TeamColor` is equal to `SpawnLocation/TeamColor` can use the `SpawnLocation`.\n\nIf `SpawnLocation/AllowTeamChangeOnTouch` is true `Player/Neutral` will be set to this property upon contact with the spawn.","code_sample":[{"title":"SpawnLocation Checkpoints","display_title":"SpawnLocation Checkpoints","code_summary":"This sample demonstrates how SpawnLocations can be used to make a checkpoint system. Typically this would be done Studio and not in Lua, but this example serves as a comprehensive example of what Team and SpawnLocation properties need to be used to achieve this setup.","code_sample":"local Teams = game:GetService(\"Teams\")\n\n-- create start team (AutoAssignable = true)\nlocal startTeam = Instance.new(\"Team\", Teams)\nstartTeam.Name = \"Start\"\nstartTeam.AutoAssignable = true\nstartTeam.TeamColor = BrickColor.new(\"White\")\n\n-- create checkpoint teams (Autoassignable = false), ensuring all TeamColors are unique\nlocal team1 = Instance.new(\"Team\", Teams)\nteam1.Name = \"Checkpoint 1\"\nteam1.AutoAssignable = false\nteam1.TeamColor = BrickColor.new(\"Bright blue\")\n\nlocal team2 = Instance.new(\"Team\", Teams)\nteam2.Name = \"Checkpoint 2\"\nteam2.AutoAssignable = false\nteam2.TeamColor = BrickColor.new(\"Bright green\")\n\nlocal team3 = Instance.new(\"Team\", Teams)\nteam3.Name = \"Checkpoint 2\"\nteam3.AutoAssignable = false\nteam3.TeamColor = BrickColor.new(\"Bright red\")\n\n-- create spawns \nlocal startSpawn = Instance.new(\"SpawnLocation\", game.Workspace)\nstartSpawn.Anchored = true\nstartSpawn.Size = Vector3.new(5, 1, 5)\nstartSpawn.Neutral = false\nstartSpawn.AllowTeamChangeOnTouch = false\nstartSpawn.TeamColor = startTeam.TeamColor\nstartSpawn.BrickColor = startTeam.TeamColor\n\nlocal team1Spawn = Instance.new(\"SpawnLocation\", game.Workspace)\nteam1Spawn.Anchored = true\nteam1Spawn.Size = Vector3.new(5, 1, 5)\nteam1Spawn.Neutral = false\nteam1Spawn.AllowTeamChangeOnTouch = true\nteam1Spawn.TeamColor = team1.TeamColor\nteam1Spawn.BrickColor = team1.TeamColor\n\nlocal team2Spawn = Instance.new(\"SpawnLocation\", game.Workspace)\nteam2Spawn.Anchored = true\nteam2Spawn.Size = Vector3.new(5, 1, 5)\nteam2Spawn.Neutral = false\nteam2Spawn.AllowTeamChangeOnTouch = true\nteam2Spawn.TeamColor = team2.TeamColor\nteam2Spawn.BrickColor = team2.TeamColor\n\nlocal team3Spawn = Instance.new(\"SpawnLocation\", game.Workspace)\nteam3Spawn.Anchored = true\nteam3Spawn.Size = Vector3.new(5, 1, 5)\nteam3Spawn.Neutral = false\nteam3Spawn.AllowTeamChangeOnTouch = true\nteam3Spawn.TeamColor = team3.TeamColor\nteam3Spawn.BrickColor = team3.TeamColor\n\n-- position spawns\nstartSpawn.CFrame = CFrame.new(0, 0.5, 0)\nteam1Spawn.CFrame = CFrame.new(10, 0.5, 0)\nteam2Spawn.CFrame = CFrame.new(20, 0.5, 0)\nteam3Spawn.CFrame = CFrame.new(30, 0.5, 0)","validated_in_version":"","comments_issues":"","tags":[],"locale":"en-us","uid":"blt7ba6b2f30acff1fa","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:13:20.638Z","updated_at":"2018-06-26T18:08:37.996Z","url":"/code-sample/SpawnLocation-Checkpoints","_version":11,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"published_at":"2019-06-15T00:37:18.312Z"}],"serialization":{"can_save":true,"can_load":true},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"","api_property_url":"/api-reference/property/SpawnLocation/Neutral","roblox_api_tags":[],"studio_category":"Teams","script_editor_context":[],"wiki_text_reference":"{{APIMemberPage\n|MemberType=Property\n|ClassName=SpawnLocation\n|Description=Whether or not a spawn is affiliated with a specific team. This means that any player, of any team, can spawn on it if this property is set to true. \n}}","uid":"blt449cada79c219d18","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T12:07:11.623Z","updated_at":"2018-07-24T01:15:41.695Z","_version":9,"display_title":"Neutral","api_dump_signature":"6e7c3258a1613cf27873356770ed390d63f9af23_v2","url":"/api-reference/property/SpawnLocation/Neutral","type_category":"Primitive","published_at":"2019-06-14T23:12:16.665Z"},{"title":"SpawnLocation.TeamColor","type":"BrickColor","locale":"en-us","tags":[],"summary":"Sets what team the `SpawnLocation` is affiliated to. If `SpawnLocation/Neutral` property is false, only `Player`s with the same `Player/TeamColor` as the spawn's TeamColor will be able to spawn there. ","description":"The TeamColor property sets what team the `SpawnLocation` is affiliated to. If `SpawnLocation/Neutral` property is false, only `Player`s with the same `Player/TeamColor` as the spawn's TeamColor will be able to spawn there. \n\nIf `SpawnLocation/AllowTeamChangeOnTouch` is true `Player/Neutral` will be set to this property upon contact with the spawn.","code_sample":[{"title":"SpawnLocation Checkpoints","display_title":"SpawnLocation Checkpoints","code_summary":"This sample demonstrates how SpawnLocations can be used to make a checkpoint system. Typically this would be done Studio and not in Lua, but this example serves as a comprehensive example of what Team and SpawnLocation properties need to be used to achieve this setup.","code_sample":"local Teams = game:GetService(\"Teams\")\n\n-- create start team (AutoAssignable = true)\nlocal startTeam = Instance.new(\"Team\", Teams)\nstartTeam.Name = \"Start\"\nstartTeam.AutoAssignable = true\nstartTeam.TeamColor = BrickColor.new(\"White\")\n\n-- create checkpoint teams (Autoassignable = false), ensuring all TeamColors are unique\nlocal team1 = Instance.new(\"Team\", Teams)\nteam1.Name = \"Checkpoint 1\"\nteam1.AutoAssignable = false\nteam1.TeamColor = BrickColor.new(\"Bright blue\")\n\nlocal team2 = Instance.new(\"Team\", Teams)\nteam2.Name = \"Checkpoint 2\"\nteam2.AutoAssignable = false\nteam2.TeamColor = BrickColor.new(\"Bright green\")\n\nlocal team3 = Instance.new(\"Team\", Teams)\nteam3.Name = \"Checkpoint 2\"\nteam3.AutoAssignable = false\nteam3.TeamColor = BrickColor.new(\"Bright red\")\n\n-- create spawns \nlocal startSpawn = Instance.new(\"SpawnLocation\", game.Workspace)\nstartSpawn.Anchored = true\nstartSpawn.Size = Vector3.new(5, 1, 5)\nstartSpawn.Neutral = false\nstartSpawn.AllowTeamChangeOnTouch = false\nstartSpawn.TeamColor = startTeam.TeamColor\nstartSpawn.BrickColor = startTeam.TeamColor\n\nlocal team1Spawn = Instance.new(\"SpawnLocation\", game.Workspace)\nteam1Spawn.Anchored = true\nteam1Spawn.Size = Vector3.new(5, 1, 5)\nteam1Spawn.Neutral = false\nteam1Spawn.AllowTeamChangeOnTouch = true\nteam1Spawn.TeamColor = team1.TeamColor\nteam1Spawn.BrickColor = team1.TeamColor\n\nlocal team2Spawn = Instance.new(\"SpawnLocation\", game.Workspace)\nteam2Spawn.Anchored = true\nteam2Spawn.Size = Vector3.new(5, 1, 5)\nteam2Spawn.Neutral = false\nteam2Spawn.AllowTeamChangeOnTouch = true\nteam2Spawn.TeamColor = team2.TeamColor\nteam2Spawn.BrickColor = team2.TeamColor\n\nlocal team3Spawn = Instance.new(\"SpawnLocation\", game.Workspace)\nteam3Spawn.Anchored = true\nteam3Spawn.Size = Vector3.new(5, 1, 5)\nteam3Spawn.Neutral = false\nteam3Spawn.AllowTeamChangeOnTouch = true\nteam3Spawn.TeamColor = team3.TeamColor\nteam3Spawn.BrickColor = team3.TeamColor\n\n-- position spawns\nstartSpawn.CFrame = CFrame.new(0, 0.5, 0)\nteam1Spawn.CFrame = CFrame.new(10, 0.5, 0)\nteam2Spawn.CFrame = CFrame.new(20, 0.5, 0)\nteam3Spawn.CFrame = CFrame.new(30, 0.5, 0)","validated_in_version":"","comments_issues":"","tags":[],"locale":"en-us","uid":"blt7ba6b2f30acff1fa","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:13:20.638Z","updated_at":"2018-06-26T18:08:37.996Z","url":"/code-sample/SpawnLocation-Checkpoints","_version":11,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"published_at":"2019-06-15T00:37:18.312Z"}],"serialization":{"can_save":true,"can_load":true},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"","api_property_url":"/api-reference/property/SpawnLocation/TeamColor","roblox_api_tags":[],"studio_category":"Teams","script_editor_context":[],"wiki_text_reference":"{{APIMemberPage\n|MemberType=Property\n|ClassName=SpawnLocation\n|Description=Sets what team the SpawnLocation to affiliated to. If the [[API:Class/SpawnLocation/Neutral|Neutral]] property isn't set to true, only players with the same TeamColor as the Spawnlocation's TeamColor will be able to spawn there. \n|Tutorials=[[How do I add Teams?]]\n}}","uid":"blt7b5de812d737a6f1","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T12:07:19.382Z","updated_at":"2018-07-24T01:15:45.007Z","_version":10,"display_title":"TeamColor","api_dump_signature":"ed460aa336ea06b1939361604ca6f18c72c74924_v2","url":"/api-reference/property/SpawnLocation/TeamColor","type_category":"DataType","published_at":"2019-06-14T23:12:14.331Z"},{"title":"SpawnLocation.AllowTeamChangeOnTouch","type":"bool","locale":"en-us","tags":[],"summary":"Allows a `Player` to join the team by touching the `SpawnLocation`. When set to true, if a `Player` character comes into contact with the `SpawnLocation`, the player's `Player/TeamColor` will be set to `SpawnLocation/TeamColor`.","description":"Allows a `Player` to join the team by touching the `SpawnLocation`. When set to true, if a `Player` character comes into contact with the `SpawnLocation`, the player's `Player/TeamColor` will be set to `SpawnLocation/TeamColor`. `Player/Neutral` will also be set to `SpawnLocation/Neutral` upon contact, meaning a player can also become neutral by touching a spawn location.\n\n<div class=\"alert alert-warning\" role=\"alert\">\nThis will not function when <code>SpawnLocation/Enabled</code> is set to false.\n</div>\n\n## Making Checkpoints\n\nThis feature is often used to make checkpoints in obstacle courses or similar games. See `Articles/How to use Spawn Objects with Roblox Studio|Using Player Spawns` for details.","code_sample":[{"title":"SpawnLocation Checkpoints","display_title":"SpawnLocation Checkpoints","code_summary":"This sample demonstrates how SpawnLocations can be used to make a checkpoint system. Typically this would be done Studio and not in Lua, but this example serves as a comprehensive example of what Team and SpawnLocation properties need to be used to achieve this setup.","code_sample":"local Teams = game:GetService(\"Teams\")\n\n-- create start team (AutoAssignable = true)\nlocal startTeam = Instance.new(\"Team\", Teams)\nstartTeam.Name = \"Start\"\nstartTeam.AutoAssignable = true\nstartTeam.TeamColor = BrickColor.new(\"White\")\n\n-- create checkpoint teams (Autoassignable = false), ensuring all TeamColors are unique\nlocal team1 = Instance.new(\"Team\", Teams)\nteam1.Name = \"Checkpoint 1\"\nteam1.AutoAssignable = false\nteam1.TeamColor = BrickColor.new(\"Bright blue\")\n\nlocal team2 = Instance.new(\"Team\", Teams)\nteam2.Name = \"Checkpoint 2\"\nteam2.AutoAssignable = false\nteam2.TeamColor = BrickColor.new(\"Bright green\")\n\nlocal team3 = Instance.new(\"Team\", Teams)\nteam3.Name = \"Checkpoint 2\"\nteam3.AutoAssignable = false\nteam3.TeamColor = BrickColor.new(\"Bright red\")\n\n-- create spawns \nlocal startSpawn = Instance.new(\"SpawnLocation\", game.Workspace)\nstartSpawn.Anchored = true\nstartSpawn.Size = Vector3.new(5, 1, 5)\nstartSpawn.Neutral = false\nstartSpawn.AllowTeamChangeOnTouch = false\nstartSpawn.TeamColor = startTeam.TeamColor\nstartSpawn.BrickColor = startTeam.TeamColor\n\nlocal team1Spawn = Instance.new(\"SpawnLocation\", game.Workspace)\nteam1Spawn.Anchored = true\nteam1Spawn.Size = Vector3.new(5, 1, 5)\nteam1Spawn.Neutral = false\nteam1Spawn.AllowTeamChangeOnTouch = true\nteam1Spawn.TeamColor = team1.TeamColor\nteam1Spawn.BrickColor = team1.TeamColor\n\nlocal team2Spawn = Instance.new(\"SpawnLocation\", game.Workspace)\nteam2Spawn.Anchored = true\nteam2Spawn.Size = Vector3.new(5, 1, 5)\nteam2Spawn.Neutral = false\nteam2Spawn.AllowTeamChangeOnTouch = true\nteam2Spawn.TeamColor = team2.TeamColor\nteam2Spawn.BrickColor = team2.TeamColor\n\nlocal team3Spawn = Instance.new(\"SpawnLocation\", game.Workspace)\nteam3Spawn.Anchored = true\nteam3Spawn.Size = Vector3.new(5, 1, 5)\nteam3Spawn.Neutral = false\nteam3Spawn.AllowTeamChangeOnTouch = true\nteam3Spawn.TeamColor = team3.TeamColor\nteam3Spawn.BrickColor = team3.TeamColor\n\n-- position spawns\nstartSpawn.CFrame = CFrame.new(0, 0.5, 0)\nteam1Spawn.CFrame = CFrame.new(10, 0.5, 0)\nteam2Spawn.CFrame = CFrame.new(20, 0.5, 0)\nteam3Spawn.CFrame = CFrame.new(30, 0.5, 0)","validated_in_version":"","comments_issues":"","tags":[],"locale":"en-us","uid":"blt7ba6b2f30acff1fa","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:13:20.638Z","updated_at":"2018-06-26T18:08:37.996Z","url":"/code-sample/SpawnLocation-Checkpoints","_version":11,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"published_at":"2019-06-15T00:37:18.312Z"}],"serialization":{"can_save":true,"can_load":true},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"","api_property_url":"/api-reference/property/SpawnLocation/AllowTeamChangeOnTouch","roblox_api_tags":[],"studio_category":"Teams","script_editor_context":[],"wiki_text_reference":"{{APIMemberPage\n|MemberType=Property\n|ClassName=SpawnLocation\n|Description=When enabled, allows the player that touched the SpawnLocation to join the SpawnLocation's team.\n|Tutorials=[[How do I add Teams?]]\n}}","uid":"bltd2f655aa3003d070","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt1135fe0153024444","created_at":"2018-06-05T12:06:55.867Z","updated_at":"2018-08-03T00:15:42.067Z","_version":13,"display_title":"AllowTeamChangeOnTouch","api_dump_signature":"41cb9282683c68c74c80b1897cb15843aa1054f1_v2","url":"/api-reference/property/SpawnLocation/AllowTeamChangeOnTouch","type_category":"Primitive","published_at":"2019-06-14T22:56:10.533Z"}],"function":[],"event":[],"callback":[],"locale":"en-us","tags":[],"uid":"bltab4c7802e3f7aed1","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T12:39:17.291Z","updated_at":"2018-07-24T01:15:27.369Z","_version":12,"deprecated_property":[],"deprecated_function":[],"deprecated_event":[],"deprecated_callback":[],"class_url":"/api-reference/class/SpawnLocation","url":"/api-reference/class/SpawnLocation","api_dump_signature":"1e3946335d98053cbc75aea85bdffd7fc5cd8c36_v2","published_at":"2019-06-14T21:29:41.300Z"},{"title":"FlagStand","category":null,"code_sample":[],"roblox_api_tags":["Deprecated"],"summary":"The FlagStand and `Flag` are deprecated objects that were used to make capture the flag games","description":"The `Flag` and `FlagStand` objects were created to allow developers to make 'Capture the Flag' style games quickly. However they have been deprecated and developers are advised to design their own systems which will be more flexible and reliable. \n\nTo get started with this, developers can use the 'Capture The Flag' template place provided by Roblox which has a fully functioning system developers can take and use in their own games. A link to the place, which is free to edit, is [here][1].\n\n\n  [1]: https://www.roblox.com/games/92721754/Capture-The-Flag#!/about","deprecation_message":"The FlagStand and Flag are deprecated objects that were used to make capture the flag games.","wikitext":"{{APIClassPage\n|Description=The FlagStand is like a [[API:Class/Part|Part]], but it holds a [[API:Class/Flag|Flag]] on it. If the player carrying a flag steps onto another FlagStand of a different team color, the flag will be removed from the player's backpack and a point will be added to the team. The flag will then regenerate at the originating flag stand.\n}}","property":[{"title":"FlagStand.TeamColor","type":"BrickColor","locale":"en-us","tags":["deprecated"],"summary":"The Team that owns the `FlagStand`. Corresponds with the TeamColors in the `Teams` service.","description":"The Team that owns the `FlagStand`. Corresponds with the TeamColors in the `Teams` service.\n\nThe `Flag` and `FlagStand` objects were created to allow developers to make 'Capture the Flag' style games quickly. However they have been deprecated and developers are advised to design their own systems which will be more flexible and reliable. \n\nTo get started with this, developers can use the 'Capture The Flag' template place provided by Roblox which has a fully functioning system developers can take and use in their own games. A link to the place, which is free to edit, is [here][1].\n\n\n  [1]: https://www.roblox.com/games/92721754/Capture-The-Flag#!/about","code_sample":[],"serialization":{"can_save":true,"can_load":true},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"This property was a part of the now deprecated `Flag` service. It should not be used in new work.","api_property_url":"/api-reference/property/FlagStand/TeamColor","roblox_api_tags":[],"studio_category":"Data","script_editor_context":[],"wiki_text_reference":"{{APIMemberPage\n|MemberType=Property\n|Description=The Team that owns the FlagStand. Corresponds with the TeamColors in the Teams service.\n}}","uid":"bltdef50f7ab2755939","created_by":"blt056181872171cff69cfbc0c3","updated_by":"bltb3147545f90dee1b","created_at":"2018-06-05T12:06:45.158Z","updated_at":"2019-01-13T17:01:37.370Z","_version":10,"display_title":"TeamColor","api_dump_signature":"7e5afffb2d804be7dffc95a15fb5be89be00d3ce_v2","url":"/api-reference/property/FlagStand/TeamColor","type_category":"DataType","fast_flags":[],"published_at":"2019-06-14T22:46:07.896Z"}],"function":[],"event":[{"title":"FlagStand.FlagCaptured","summary":"Fires when a player bearing an opposing flag, and having the same `Player/TeamColor` as the stand, touches the `FlagStand`.","description":"This event fires when a player bearing an opposing flag, and having the same `Player/TeamColor` as the stand, touches the `FlagStand`.\n\nThe `Flag` and `FlagStand` objects were created to allow developers to make 'Capture the Flag' style games quickly. However they have been deprecated and developers are advised to design their own systems which will be more flexible and reliable. \n\nTo get started with this, developers can use the 'Capture The Flag' template place provided by Roblox which has a fully functioning system developers can take and use in their own games. A link to the place, which is free to edit, is [here][1].\n\n\n  [1]: https://www.roblox.com/games/92721754/Capture-The-Flag#!/about","code_sample":[],"wikitext":"{{APIMemberPage\n|MemberType=Event\n|ClassName=FlagStand\n|TypeArgs.player=Class/Player\n|Description=Fires when a player bearing an opposing flag, and having the same TeamColor as the stand, touches the FlagStand.\n}}","security":"None","roblox_api_tags":[],"argument":[{"type":"Instance","name":"player","default":"","summary":""}],"deprecation_message":"This event was a part of the now deprecated `Flag` service. It should not be used in new work.","locale":"en-us","tags":["deprecated"],"uid":"blt9aa43ab1f58bcf9d","created_by":"blt056181872171cff69cfbc0c3","updated_by":"bltb3147545f90dee1b","created_at":"2018-06-05T10:25:42.647Z","updated_at":"2019-01-13T17:06:14.851Z","_version":14,"display_title":"FlagCaptured","api_dump_signature":"f538a7bac4cc75796b37a6248eec5e8893a2b7f2_v2","api_event_url":"/api-reference/event/FlagStand/FlagCaptured","type":"RBXScriptSignal","url":"/api-reference/event/FlagStand/FlagCaptured","fast_flags":[],"published_at":"2019-06-14T21:55:14.414Z"}],"callback":[],"locale":"en-us","tags":[],"uid":"bltaf022deba2a6373c","created_by":"blt056181872171cff69cfbc0c3","updated_by":"bltb3147545f90dee1b","created_at":"2018-06-05T12:40:19.715Z","updated_at":"2019-01-13T16:13:01.601Z","_version":12,"class_url":"/api-reference/class/FlagStand","url":"/api-reference/class/FlagStand","api_dump_signature":"125cf5ac8bce1398be1da818d127547639af85fc_v2","deprecated_property":[],"deprecated_function":[],"deprecated_event":[],"deprecated_callback":[],"fast_flags":[],"published_at":"2019-06-14T21:23:07.429Z"},{"title":"Platform","category":null,"code_sample":[],"roblox_api_tags":["NotCreatable"],"summary":"Historically a form of `Seat` that wouldn't place the player in a sitting pose. This object is no longer create-able and cannot be used by developers ","description":"The Platform object creates a brick that when touched by a `Player` will anchor their torso to the brick. This allows for the creation of vehicles that players can stand in and not be flung about the cabin/deck of the vehicle.\n\nThe Platform is almost identical to the `Seat` object, except that instead of sitting down the player will be standing while locked in place. Good for ships.\n\nThe Platform object is very useful for making people's characters staying in one spot while they move around, such as a ship or truck. When a player touches the Platform a `Weld` constraint is created, so they are 'attached' to the Platform and can't move until that weld is broken. It can be removed by hitting the spacebar, when the player jumps to exit the Platform.","deprecation_message":"Historically a form of `Seat` that wouldn't place the player in a sitting pose. This object is no longer create-able and cannot be used by developers.","wikitext":"{{note|This class has been disabled for unknown reasons, and thus has been marked as '''internal'''. It may return in the future.}}{{APIClassPage|Description=The Platform object creates a brick that when touched by a player will anchor their torso to the brick. This allows for the creation of vehicles that players can stand in and not be flung about the cabin/deck of the vehicle.\n\nThe Platform is almost identical to the [[API:Class/Seat|Seat]] object, except that instead of sitting down the player will be standing while locked in place. Good for ships.\n\nThe Platform object is very useful for making people's characters staying in one spot while they move around, such as a ship or truck. When a player touches the Platform a [[API:Class/Weld|Weld]] constraint is created, so they are 'attached' to the Platform and can't move until that weld is broken. It can be removed by hitting the spacebar, when the player jumps to exit the Platform.\n|Notes=\n* The Platform object is missing the [[Occupant (disambiguation)|Occupant]] property that the other seat classes have.\n|SeeAlso=\n* {{api|Part}}\n* {{api|Seat}}\n* {{api|VehicleSeat}}\n}}","property":[],"function":[],"event":[],"callback":[],"locale":"en-us","tags":["deprecated"],"uid":"blt2a9e9920501bbdb1","created_by":"blt056181872171cff69cfbc0c3","updated_by":"bltb3147545f90dee1b","created_at":"2018-06-05T12:38:24.473Z","updated_at":"2019-01-29T03:28:55.353Z","_version":14,"class_url":"/api-reference/class/Platform","url":"/api-reference/class/Platform","api_dump_signature":"6de081b4a6248e288d6938aca18610c95090ddcf_v2","deprecated_property":[],"deprecated_function":[],"deprecated_event":[],"deprecated_callback":[],"fast_flags":[],"published_at":"2019-06-14T21:22:22.028Z"}],"super_class":[{"title":"PVInstance","category":null,"code_sample":[],"roblox_api_tags":["NotCreatable","NotBrowsable"],"summary":"A PVInstance is the base for all objects that have a physical location in the world, specifically `/BasePart`s and `/Model`s.","description":"A PVInstance is an abstract class that cannot be created. It is the base for all objects that have a physical location in the world, specifically `BasePart` and `Model`. The PV in PVInstance stands for <i>Position-Velocity</i>. This class has existed since 2005, and while the class itself no longer has any functionality, it is used for adornable objects that can be connected to both BaseParts and Models.<br>\n<br/>","deprecation_message":"","wikitext":"{{APIClassPage\n|Description=A PVInstance is an abstract class that cannot be created. It is the base for all objects that have a physical location in the world, specifically [[API:Class/BasePart|BasePart]]s and [[API:Class/Model|Model]]s. The PV in PVInstance stands for ''Position-Velocity''. This class has existed since 2005, and while the class itself no longer has any functionality, it is used for adornable objects that can be connected to both BaseParts and Models. \n}}","property":[],"function":[],"event":[],"callback":[],"locale":"en-us","tags":["abstract"],"uid":"bltf1f6eac806fd6bf2","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T12:43:42.198Z","updated_at":"2018-07-24T01:09:54.354Z","_version":19,"class_url":"/api-reference/class/PVInstance","url":"/api-reference/class/PVInstance","api_dump_signature":"8630547009f6d810fe03e5a37304c6fbb0916ea7_v2","deprecated_property":[],"deprecated_function":[],"deprecated_event":[],"deprecated_callback":[],"published_at":"2019-06-14T21:29:51.718Z"},{"title":"FormFactorPart","category":null,"code_sample":[],"roblox_api_tags":["NotCreatable"],"summary":"The FormFactorPart class is an abstract class. It inherits from the BasePart class and adds the FormFactor property to classes that inherit from it.","description":"The FormFactorPart class is an abstract class. It inherits from the `BasePart` class and adds the `FormFactorPart/FormFactor` property to classes that inherit from it.\n\nThe FormFactor property has been deprecated, so this class has been deprecated as well.","deprecation_message":"This class has been deprecated along with the `FormFactorPart/FormFactor` property.","wikitext":"{{APIClassPage\n|Description=The FormFactorPart class is an abstract class. It inherits from the BasePart class and adds the FormFactor property to classes that inherit from it.\nRoblox has deprecated the FormFactor property, so this class has been deprecated as well.\n}}","property":[],"function":[],"event":[],"callback":[],"locale":"en-us","tags":["abstract","deprecated"],"uid":"blt77b20c0378c4a3ed","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T12:40:31.696Z","updated_at":"2018-07-24T01:13:56.341Z","_version":12,"class_url":"/api-reference/class/FormFactorPart","url":"/api-reference/class/FormFactorPart","api_dump_signature":"d95b0de11fb66fcbab88608d61203abe57110b5a_v2","deprecated_property":[{"title":"FormFactorPart.FormFactor","type":"FormFactor","locale":"en-us","tags":[],"summary":".","description":"This used to specify a grid constraint of the part's size. No longer does anything.","code_sample":[],"serialization":{"can_save":false,"can_load":true},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"This property has been deprecated and should not be used in new work.","api_property_url":"/api-reference/property/FormFactorPart/FormFactor","roblox_api_tags":["NotReplicated","Deprecated"],"studio_category":"Part ","script_editor_context":[],"wiki_text_reference":"{{APIMemberPage\n|Description=This used to specify a grid constraint of the part's size. No longer does anything.\n}}","uid":"blt5fe1a4a808cea268","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T12:08:16.301Z","updated_at":"2018-07-24T01:14:00.240Z","_version":9,"display_title":"FormFactor","api_dump_signature":"e99950479eaf3a08b61242bb4c36733686d67b4d_v2","url":"/api-reference/property/FormFactorPart/FormFactor","type_category":"Enum","published_at":"2019-06-14T23:12:42.362Z"},{"title":"FormFactorPart.formFactor","type":"FormFactor","locale":"en-us","tags":[],"summary":".","description":"Determines how a part acts when resized and the values that which its size can take.","code_sample":[],"serialization":{"can_save":false,"can_load":true},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"This property has been deprecated and should not be used in new work.","api_property_url":"/api-reference/property/FormFactorPart/formFactor","roblox_api_tags":["Hidden","NotReplicated","Deprecated"],"studio_category":"Part ","script_editor_context":[],"wiki_text_reference":"{{APIMemberPage\n|ClassName=FormFactorPart\n|MemberType=Property\n|Description=Determines how a part acts when resized and the values that which its size can take.\n}}","uid":"bltb32eae388c198321","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T12:08:44.096Z","updated_at":"2018-07-24T01:14:04.123Z","_version":9,"display_title":"formFactor","api_dump_signature":"ebf6d33f579bf9952b5984af6e7b4a60a6c0e0de_v2","url":"/api-reference/property/FormFactorPart/formFactor","type_category":"Enum","published_at":"2019-06-14T23:12:40.256Z"}],"deprecated_function":[],"deprecated_event":[],"deprecated_callback":[],"published_at":"2019-06-14T21:29:47.604Z"},{"title":"BasePart","category":null,"code_sample":[],"roblox_api_tags":["NotCreatable","NotBrowsable"],"summary":"The abstract base class for in-world objects that physically interact.","description":"BasePart is an abstract base class for in-world objects that render and are physically simulated while in the `Workspace`. There are several implementations of BasePart, the most common is `Part`, a simple 6-face rectangular prism. Others include `SpawnLocation`, `WedgePart` and the singleton `Terrain` object within the `Workspace`. Most of the time, when documentation refers to a part, most BasePart implementations will work and not just `Part`.\n\nThere are **many** different objects that interact with BasePart:\n\n  - They may be grouped within a `Model`, which allows several BasePart to be moved at the same time using `Model/SetPrimaryPartCFrame|SetPrimaryPartCFrame`.\n  - A `Decal` applies a stretched image texture to the faces of a part, though the exact mapping depends on the type of part.\n  - A `Texture` applies a tiled image texture to the faces of a part much like a `Decal`.\n  - A `SurfaceGui` renders `GuiObject|GuiObjects` on the face of a part.\n  - An `Attachment` can be added to specify a CFrames relative to a parent BasePart. These are often used by physics `Constraint` objects, such as `RopeConstraint` and `HingeConstraint`.\n  - `ParticleEmitter` emit particles uniformly in the volume of the BasePart to which they are parented.\n  - Light objects like `PointLight` emit light from the center of a BasePart.\n  - When `Sound/Play|played`, a `Sound` parented to a BasePart will be physically located at the part's position.\n  - `BodyMover` objects like `BodyVelocity` exert forces on the BasePart to which they are parented.\n  - As a sibling of a `Humanoid`, they can be used as limbs of a character and also animated when joined using `Motor6D`. If not a sibling of a `Humanoid`, BasePart can still be animated using an `AnimationController`.\n  - In Studio, you can use most implementations of BaseParts with solid modelling.\n  - If parented to a `Tool` and given the name \"Handle\", a BasePart can be held by characters.\n  - You can make BasePart interactive by adding a `ClickDetector`\n  - You can a mesh like a `BlockMesh` or `SpecialMesh` to change how a BasePart looks without change how it physically behaves.","deprecation_message":"","wikitext":"{{APIClassPage\n|Description=The base class for all individual physical objects that can interact with each other.\n}}","property":[{"title":"BasePart.BackParamB","type":"float","locale":"en-us","tags":[],"summary":"Determines the second parameter for the SurfaceType on the Back face of a part (-Z direction)","description":"The BackParamB property is relevant when a part's `/BasePart/BackSurface` is set to Motor or SteppingMotor and `/BasePart/BackSurfaceInput` is set to Constant or Sin. For Constant, it determines the constant rotational velocity of the motor. For Sin, it determines the **frequency** of the motor's rotational velocity, using the following formula:\n\n`MotorVelocity = ParamB * math.sin(workspace.DistributedGameTime * ParamB)`\n\nIn no other cases is this property used.","code_sample":[{"title":"Motor Control","display_title":"Motor Control","code_summary":"This code sample demonstrates how surface properties can be set using only a NormalId (Top, Front, etc). It switches a motor's -SurfaceInput from NoInput, Constant and Sin to show how each work using -ParamA and -ParamB properties.","code_sample":"-- Paste this into a Script inside a part with a Motor SurfaceType\nlocal partMotor = script.Parent\n-- Place a brick called \"MovingPart\" so it is touching the Motor surface\nlocal partMoving = partMotor.Parent.MovingPart\n\n-- For this example, we use TopSurface, TopSurfaceInput, TopParamA and TopParamB\n-- However, this will work for all faces (NormalId): Top, Bottom, Left, Right, Front and Back\n\n-- A function to quickly set all surface properties at once \nlocal function setFaceSurfaceInputParams(normalId, surfaceType, inputType, paramA, paramB)\n\tlocal surfaceName = normalId.Name -- e.g. \"Top\", \"Bottom\", etc\n\n\t-- Syntax Note: in Lua, part.Something is the same as part[\"Something\"]\n\t-- The difference is that the latter allows us to use a string (\"Something\"), while\n\t-- the former requires use of an identifier (.Something). Below, we build of each the surface\n\t-- properties below by concatenating the surface name with the property postfix.\n\t\n\t-- Set \"___Surface\", eg \"TopSurface\"\n\tpartMotor[surfaceName .. \"Surface\"] = surfaceType\n\t-- Set \"___SurfaceInput\", eg \"TopSurfaceInput\"\n\tpartMotor[surfaceName .. \"SurfaceInput\"] = inputType\n\t-- Set \"___ParamA\", eg \"TopParamA\"\n\tpartMotor[surfaceName .. \"ParamA\"] = paramA\n\t-- Set \"___ParamB\", eg \"TopParamB\"\n\tpartMotor[surfaceName .. \"ParamB\"] = paramB\nend\n\nlocal normalId = Enum.NormalId.Top\n\nwhile true do\n\t-- Set to NoInput, where the motor will not operate at all\n\tsetFaceSurfaceInputParams(normalId, Enum.SurfaceType.Motor, Enum.InputType.NoInput, 0, 0)\n\twait(1)\n\t-- Set to Constant, where motor rotational velocity = paramB\n\tsetFaceSurfaceInputParams(normalId, Enum.SurfaceType.Motor, Enum.InputType.Constant, 0, .25)\n\twait(2)\n\t-- Set to Sin, where motor rotational velocity = paramA * math.sin(time * paramB)\n\t-- Since we're using pi (~3.14), the frequency of rotation is 1 second (per definition of sine function)\n\tsetFaceSurfaceInputParams(normalId, Enum.SurfaceType.Motor, Enum.InputType.Sin, .25, math.pi)\n\twait(3)\nend\n","validated_in_version":"0. 334. 0. 195932","comments_issues":"Kind of a stretch but these properties are hardly ever scripted -HG","tags":[],"locale":"en-us","uid":"bltbbd9219eabbed922","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:03:11.874Z","updated_at":"2018-06-26T18:10:03.578Z","url":"/code-sample/Motor-Control","_version":11,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"published_at":"2019-06-15T00:36:46.645Z"}],"serialization":{"can_save":true,"can_load":true},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"","api_property_url":"/api-reference/property/BasePart/BackParamB","roblox_api_tags":[],"studio_category":"Surface Inputs","script_editor_context":[],"wiki_text_reference":"{{API:Class/BasePart/BackParamA}}","uid":"blt52f0edba12605d8c","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T12:09:30.116Z","updated_at":"2018-07-24T01:10:05.793Z","_version":8,"display_title":"BackParamB","api_dump_signature":"e35d1e91dffd04f10cc90e5df57cc8625fdb9085_v2","url":"/api-reference/property/BasePart/BackParamB","type_category":"Primitive","published_at":"2019-06-14T23:13:56.094Z"},{"title":"BasePart.BackSurface","type":"SurfaceType","locale":"en-us","tags":[],"summary":"Determines the type of surface for the Back face of a part (+Z direction)","description":"The BackSurface property determines the type of surface used for the +Z direction of a part. When two parts' faces are placed next to each other, they may create a joint between them depending on the SurfaceType used on the touching faces. If set to Motor, the `/BasePart/BackSurfaceInput` determines how a motor joint should behave.\n\nMost SurfaceTypes render a texture on the part face if the `/BasePart/Material` is set to Plastic. Some SurfaceTypes - Hinge, Motor and SteppingMotor - will render a 3D adornment instead. If this property is selected in the Properties window, it will be highlighted in the game world similar to that of a `/SurfaceSelection`.","code_sample":[{"title":"Show All SurfaceTypes","display_title":"Show All SurfaceTypes","code_summary":"This code sample shows what each SurfaceType looks like on a part. In addition, it creates a BillboardGui label on the part with a TextLabel that reflects the name of the current SurfaceType.","code_sample":"local part = script.Parent\n\n-- Create a billboard gui to display what the current surface type is\nlocal bbgui = Instance.new(\"BillboardGui\")\nbbgui.AlwaysOnTop = true\nbbgui.Size = UDim2.new(0, 200, 0, 50)\nbbgui.Adornee = part\nlocal tl = Instance.new(\"TextLabel\")\ntl.Size = UDim2.new(0, 200, 0, 50)\ntl.BackgroundTransparency = 1\ntl.TextStrokeTransparency = 0\ntl.TextColor3 = Color3.new(1, 1, 1) -- White\ntl.Parent = bbgui\nbbgui.Parent = part\n\nlocal function setAllSurfaces(part, surfaceType)\n\tpart.TopSurface = surfaceType\n\tpart.BottomSurface = surfaceType\n\tpart.LeftSurface = surfaceType\n\tpart.RightSurface = surfaceType\n\tpart.FrontSurface = surfaceType\n\tpart.BackSurface = surfaceType\nend\n\nwhile true do\n\t-- Iterate through the different SurfaceTypes\n\tfor _, enum in pairs(Enum.SurfaceType:GetEnumItems()) do\n\t\ttl.Text = enum.Name\n\t\tsetAllSurfaces(part, enum)\n\t\twait(1)\n\tend\nend\n","validated_in_version":"0. 334. 0. 195932","comments_issues":"","tags":[],"locale":"en-us","uid":"blt288c1014c8419a79","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:03:13.236Z","updated_at":"2018-06-26T18:10:04.245Z","url":"/code-sample/Show-All-SurfaceTypes","_version":10,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"published_at":"2019-06-15T00:36:44.422Z"}],"serialization":{"can_save":true,"can_load":true},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"","api_property_url":"/api-reference/property/BasePart/BackSurface","roblox_api_tags":[],"studio_category":"Surface","script_editor_context":[],"wiki_text_reference":"{{APIMemberPage\n|Description=Sets what the type of the surface is.\n}}","uid":"blt98f4091ec6f7f22a","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T12:09:59.039Z","updated_at":"2018-07-24T01:10:08.403Z","_version":8,"display_title":"BackSurface","api_dump_signature":"ec8ad657b17ba5646a25317a9a4f62d4d1e92508_v2","url":"/api-reference/property/BasePart/BackSurface","type_category":"Enum","published_at":"2019-06-14T23:13:53.922Z"},{"title":"BasePart.BackSurfaceInput","type":"InputType","locale":"en-us","tags":[],"summary":"Determines the kind of input for the Back face of a part (+Z direction)","description":"The BackSurfaceInput property determines the kind of input provided to a part's `/BasePart/BackSurface`. This is only relevant for Motor or SteppingMotor SurfaceTypes. This property determines how `/BasePart/BackParamA` and `/BasePart/BackParamB` are used. For brevity, these properties will be referred to as ParamA and ParamB, respectively.\n\n  - By default, this is set to NoInput. This stops the motor altogether,\n  - For Constant, the motor rotates at a constant velocity equal to `ParamB`.\n  - For Sin, the motor rotates at a velocity equal to `ParamA * math.sin(workspace.DistributedGameTime * ParamB)`. See `/Workspace/DistributedGameTime`.","code_sample":[{"title":"Motor Control","display_title":"Motor Control","code_summary":"This code sample demonstrates how surface properties can be set using only a NormalId (Top, Front, etc). It switches a motor's -SurfaceInput from NoInput, Constant and Sin to show how each work using -ParamA and -ParamB properties.","code_sample":"-- Paste this into a Script inside a part with a Motor SurfaceType\nlocal partMotor = script.Parent\n-- Place a brick called \"MovingPart\" so it is touching the Motor surface\nlocal partMoving = partMotor.Parent.MovingPart\n\n-- For this example, we use TopSurface, TopSurfaceInput, TopParamA and TopParamB\n-- However, this will work for all faces (NormalId): Top, Bottom, Left, Right, Front and Back\n\n-- A function to quickly set all surface properties at once \nlocal function setFaceSurfaceInputParams(normalId, surfaceType, inputType, paramA, paramB)\n\tlocal surfaceName = normalId.Name -- e.g. \"Top\", \"Bottom\", etc\n\n\t-- Syntax Note: in Lua, part.Something is the same as part[\"Something\"]\n\t-- The difference is that the latter allows us to use a string (\"Something\"), while\n\t-- the former requires use of an identifier (.Something). Below, we build of each the surface\n\t-- properties below by concatenating the surface name with the property postfix.\n\t\n\t-- Set \"___Surface\", eg \"TopSurface\"\n\tpartMotor[surfaceName .. \"Surface\"] = surfaceType\n\t-- Set \"___SurfaceInput\", eg \"TopSurfaceInput\"\n\tpartMotor[surfaceName .. \"SurfaceInput\"] = inputType\n\t-- Set \"___ParamA\", eg \"TopParamA\"\n\tpartMotor[surfaceName .. \"ParamA\"] = paramA\n\t-- Set \"___ParamB\", eg \"TopParamB\"\n\tpartMotor[surfaceName .. \"ParamB\"] = paramB\nend\n\nlocal normalId = Enum.NormalId.Top\n\nwhile true do\n\t-- Set to NoInput, where the motor will not operate at all\n\tsetFaceSurfaceInputParams(normalId, Enum.SurfaceType.Motor, Enum.InputType.NoInput, 0, 0)\n\twait(1)\n\t-- Set to Constant, where motor rotational velocity = paramB\n\tsetFaceSurfaceInputParams(normalId, Enum.SurfaceType.Motor, Enum.InputType.Constant, 0, .25)\n\twait(2)\n\t-- Set to Sin, where motor rotational velocity = paramA * math.sin(time * paramB)\n\t-- Since we're using pi (~3.14), the frequency of rotation is 1 second (per definition of sine function)\n\tsetFaceSurfaceInputParams(normalId, Enum.SurfaceType.Motor, Enum.InputType.Sin, .25, math.pi)\n\twait(3)\nend\n","validated_in_version":"0. 334. 0. 195932","comments_issues":"Kind of a stretch but these properties are hardly ever scripted -HG","tags":[],"locale":"en-us","uid":"bltbbd9219eabbed922","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:03:11.874Z","updated_at":"2018-06-26T18:10:03.578Z","url":"/code-sample/Motor-Control","_version":11,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"published_at":"2019-06-15T00:36:46.645Z"}],"serialization":{"can_save":true,"can_load":true},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"","api_property_url":"/api-reference/property/BasePart/BackSurfaceInput","roblox_api_tags":[],"studio_category":"Surface Inputs","script_editor_context":[],"wiki_text_reference":"{{APIMemberPage\n|Description=The input type of the surface.\n}}","uid":"bltbe400398df0cd03d","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T12:09:47.200Z","updated_at":"2018-07-24T01:10:12.074Z","_version":8,"display_title":"BackSurfaceInput","api_dump_signature":"e26e98264f4d5ce3ce575ac79cd04a8c5f4913bc_v2","url":"/api-reference/property/BasePart/BackSurfaceInput","type_category":"Enum","published_at":"2019-06-14T23:13:51.794Z"},{"title":"BasePart.BottomParamB","type":"float","locale":"en-us","tags":[],"summary":"Determines the second parameter for the SurfaceType on the Bottom face of a part (-Y direction)","description":"The BottomParamB property is relevant when a part's `/BasePart/BottomSurface` is set to Motor or SteppingMotor and `/BasePart/BottomSurfaceInput` is set to Constant or Sin. For Constant, it determines the constant rotational velocity of the motor. For Sin, it determines the **frequency** of the motor's rotational velocity, using the following formula:\n\n`MotorVelocity = ParamB * math.sin(workspace.DistributedGameTime * ParamB)`\n\nIn no other cases is this property used.","code_sample":[{"title":"Motor Control","display_title":"Motor Control","code_summary":"This code sample demonstrates how surface properties can be set using only a NormalId (Top, Front, etc). It switches a motor's -SurfaceInput from NoInput, Constant and Sin to show how each work using -ParamA and -ParamB properties.","code_sample":"-- Paste this into a Script inside a part with a Motor SurfaceType\nlocal partMotor = script.Parent\n-- Place a brick called \"MovingPart\" so it is touching the Motor surface\nlocal partMoving = partMotor.Parent.MovingPart\n\n-- For this example, we use TopSurface, TopSurfaceInput, TopParamA and TopParamB\n-- However, this will work for all faces (NormalId): Top, Bottom, Left, Right, Front and Back\n\n-- A function to quickly set all surface properties at once \nlocal function setFaceSurfaceInputParams(normalId, surfaceType, inputType, paramA, paramB)\n\tlocal surfaceName = normalId.Name -- e.g. \"Top\", \"Bottom\", etc\n\n\t-- Syntax Note: in Lua, part.Something is the same as part[\"Something\"]\n\t-- The difference is that the latter allows us to use a string (\"Something\"), while\n\t-- the former requires use of an identifier (.Something). Below, we build of each the surface\n\t-- properties below by concatenating the surface name with the property postfix.\n\t\n\t-- Set \"___Surface\", eg \"TopSurface\"\n\tpartMotor[surfaceName .. \"Surface\"] = surfaceType\n\t-- Set \"___SurfaceInput\", eg \"TopSurfaceInput\"\n\tpartMotor[surfaceName .. \"SurfaceInput\"] = inputType\n\t-- Set \"___ParamA\", eg \"TopParamA\"\n\tpartMotor[surfaceName .. \"ParamA\"] = paramA\n\t-- Set \"___ParamB\", eg \"TopParamB\"\n\tpartMotor[surfaceName .. \"ParamB\"] = paramB\nend\n\nlocal normalId = Enum.NormalId.Top\n\nwhile true do\n\t-- Set to NoInput, where the motor will not operate at all\n\tsetFaceSurfaceInputParams(normalId, Enum.SurfaceType.Motor, Enum.InputType.NoInput, 0, 0)\n\twait(1)\n\t-- Set to Constant, where motor rotational velocity = paramB\n\tsetFaceSurfaceInputParams(normalId, Enum.SurfaceType.Motor, Enum.InputType.Constant, 0, .25)\n\twait(2)\n\t-- Set to Sin, where motor rotational velocity = paramA * math.sin(time * paramB)\n\t-- Since we're using pi (~3.14), the frequency of rotation is 1 second (per definition of sine function)\n\tsetFaceSurfaceInputParams(normalId, Enum.SurfaceType.Motor, Enum.InputType.Sin, .25, math.pi)\n\twait(3)\nend\n","validated_in_version":"0. 334. 0. 195932","comments_issues":"Kind of a stretch but these properties are hardly ever scripted -HG","tags":[],"locale":"en-us","uid":"bltbbd9219eabbed922","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:03:11.874Z","updated_at":"2018-06-26T18:10:03.578Z","url":"/code-sample/Motor-Control","_version":11,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"published_at":"2019-06-15T00:36:46.645Z"}],"serialization":{"can_save":true,"can_load":true},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"","api_property_url":"/api-reference/property/BasePart/BottomParamB","roblox_api_tags":[],"studio_category":"Surface Inputs","script_editor_context":[],"wiki_text_reference":"{{API:Class/BasePart/BackParamA}}","uid":"blt86500277541801ea","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T12:09:23.422Z","updated_at":"2018-07-24T01:10:19.204Z","_version":8,"display_title":"BottomParamB","api_dump_signature":"16a0c840e49d0fd33f729917d9ab0c34d9884556_v2","url":"/api-reference/property/BasePart/BottomParamB","type_category":"Primitive","published_at":"2019-06-14T23:13:49.678Z"},{"title":"BasePart.BottomSurface","type":"SurfaceType","locale":"en-us","tags":[],"summary":"Determines the type of surface for the Bottom face of a part (-Y direction)","description":"The BottomSurface property determines the type of surface used for the -Y direction of a part. When two parts' faces are placed next to each other, they may create a joint between them depending on the SurfaceType used on the touching faces. If set to Motor, the `/BasePart/BottomSurfaceInput` determines how a motor joint should behave.\n\nMost SurfaceTypes render a texture on the part face if the `/BasePart/Material` is set to Plastic. Some SurfaceTypes - Hinge, Motor and SteppingMotor - will render a 3D adornment instead. If this property is selected in the Properties window, it will be highlighted in the game world similar to that of a `/SurfaceSelection`.","code_sample":[{"title":"Show All SurfaceTypes","display_title":"Show All SurfaceTypes","code_summary":"This code sample shows what each SurfaceType looks like on a part. In addition, it creates a BillboardGui label on the part with a TextLabel that reflects the name of the current SurfaceType.","code_sample":"local part = script.Parent\n\n-- Create a billboard gui to display what the current surface type is\nlocal bbgui = Instance.new(\"BillboardGui\")\nbbgui.AlwaysOnTop = true\nbbgui.Size = UDim2.new(0, 200, 0, 50)\nbbgui.Adornee = part\nlocal tl = Instance.new(\"TextLabel\")\ntl.Size = UDim2.new(0, 200, 0, 50)\ntl.BackgroundTransparency = 1\ntl.TextStrokeTransparency = 0\ntl.TextColor3 = Color3.new(1, 1, 1) -- White\ntl.Parent = bbgui\nbbgui.Parent = part\n\nlocal function setAllSurfaces(part, surfaceType)\n\tpart.TopSurface = surfaceType\n\tpart.BottomSurface = surfaceType\n\tpart.LeftSurface = surfaceType\n\tpart.RightSurface = surfaceType\n\tpart.FrontSurface = surfaceType\n\tpart.BackSurface = surfaceType\nend\n\nwhile true do\n\t-- Iterate through the different SurfaceTypes\n\tfor _, enum in pairs(Enum.SurfaceType:GetEnumItems()) do\n\t\ttl.Text = enum.Name\n\t\tsetAllSurfaces(part, enum)\n\t\twait(1)\n\tend\nend\n","validated_in_version":"0. 334. 0. 195932","comments_issues":"","tags":[],"locale":"en-us","uid":"blt288c1014c8419a79","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:03:13.236Z","updated_at":"2018-06-26T18:10:04.245Z","url":"/code-sample/Show-All-SurfaceTypes","_version":10,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"published_at":"2019-06-15T00:36:44.422Z"}],"serialization":{"can_save":true,"can_load":true},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"","api_property_url":"/api-reference/property/BasePart/BottomSurface","roblox_api_tags":[],"studio_category":"Surface","script_editor_context":[],"wiki_text_reference":"{{API:Class/BasePart/BackSurface}}","uid":"bltd40f4abf8c049426","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T12:09:53.624Z","updated_at":"2018-07-24T01:10:22.116Z","_version":8,"display_title":"BottomSurface","api_dump_signature":"a98b652e77f928e61ee2af674f8dcb52d68a8d32_v2","url":"/api-reference/property/BasePart/BottomSurface","type_category":"Enum","published_at":"2019-06-14T23:13:47.476Z"},{"title":"BasePart.BottomSurfaceInput","type":"InputType","locale":"en-us","tags":[],"summary":"Determines the kind of input for the Bottom face of a part (-Y direction)","description":"The BottomSurfaceInput property determines the kind of input provided to a part's `/BasePart/BottomSurface`. This is only relevant for Motor or SteppingMotor SurfaceTypes. This property determines how `/BasePart/BottomParamA` and `/BasePart/BottomParamB` are used. For brevity, these properties will be referred to as ParamA and ParamB, respectively.\n\n  - By default, this is set to NoInput. This stops the motor altogether,\n  - For Constant, the motor rotates at a constant velocity equal to `ParamB`.\n  - For Sin, the motor rotates at a velocity equal to `ParamA * math.sin(workspace.DistributedGameTime * ParamB)`. See `/Workspace/DistributedGameTime`.","code_sample":[{"title":"Motor Control","display_title":"Motor Control","code_summary":"This code sample demonstrates how surface properties can be set using only a NormalId (Top, Front, etc). It switches a motor's -SurfaceInput from NoInput, Constant and Sin to show how each work using -ParamA and -ParamB properties.","code_sample":"-- Paste this into a Script inside a part with a Motor SurfaceType\nlocal partMotor = script.Parent\n-- Place a brick called \"MovingPart\" so it is touching the Motor surface\nlocal partMoving = partMotor.Parent.MovingPart\n\n-- For this example, we use TopSurface, TopSurfaceInput, TopParamA and TopParamB\n-- However, this will work for all faces (NormalId): Top, Bottom, Left, Right, Front and Back\n\n-- A function to quickly set all surface properties at once \nlocal function setFaceSurfaceInputParams(normalId, surfaceType, inputType, paramA, paramB)\n\tlocal surfaceName = normalId.Name -- e.g. \"Top\", \"Bottom\", etc\n\n\t-- Syntax Note: in Lua, part.Something is the same as part[\"Something\"]\n\t-- The difference is that the latter allows us to use a string (\"Something\"), while\n\t-- the former requires use of an identifier (.Something). Below, we build of each the surface\n\t-- properties below by concatenating the surface name with the property postfix.\n\t\n\t-- Set \"___Surface\", eg \"TopSurface\"\n\tpartMotor[surfaceName .. \"Surface\"] = surfaceType\n\t-- Set \"___SurfaceInput\", eg \"TopSurfaceInput\"\n\tpartMotor[surfaceName .. \"SurfaceInput\"] = inputType\n\t-- Set \"___ParamA\", eg \"TopParamA\"\n\tpartMotor[surfaceName .. \"ParamA\"] = paramA\n\t-- Set \"___ParamB\", eg \"TopParamB\"\n\tpartMotor[surfaceName .. \"ParamB\"] = paramB\nend\n\nlocal normalId = Enum.NormalId.Top\n\nwhile true do\n\t-- Set to NoInput, where the motor will not operate at all\n\tsetFaceSurfaceInputParams(normalId, Enum.SurfaceType.Motor, Enum.InputType.NoInput, 0, 0)\n\twait(1)\n\t-- Set to Constant, where motor rotational velocity = paramB\n\tsetFaceSurfaceInputParams(normalId, Enum.SurfaceType.Motor, Enum.InputType.Constant, 0, .25)\n\twait(2)\n\t-- Set to Sin, where motor rotational velocity = paramA * math.sin(time * paramB)\n\t-- Since we're using pi (~3.14), the frequency of rotation is 1 second (per definition of sine function)\n\tsetFaceSurfaceInputParams(normalId, Enum.SurfaceType.Motor, Enum.InputType.Sin, .25, math.pi)\n\twait(3)\nend\n","validated_in_version":"0. 334. 0. 195932","comments_issues":"Kind of a stretch but these properties are hardly ever scripted -HG","tags":[],"locale":"en-us","uid":"bltbbd9219eabbed922","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:03:11.874Z","updated_at":"2018-06-26T18:10:03.578Z","url":"/code-sample/Motor-Control","_version":11,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"published_at":"2019-06-15T00:36:46.645Z"}],"serialization":{"can_save":true,"can_load":true},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"","api_property_url":"/api-reference/property/BasePart/BottomSurfaceInput","roblox_api_tags":[],"studio_category":"Surface Inputs","script_editor_context":[],"wiki_text_reference":"{{API:Class/BasePart/BackSurfaceInput}}","uid":"blt2c93c3b530bec147","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T12:09:52.281Z","updated_at":"2018-07-24T01:10:25.288Z","_version":8,"display_title":"BottomSurfaceInput","api_dump_signature":"67376913ad9916dfc814c8021cda72812f6a0d18_v2","url":"/api-reference/property/BasePart/BottomSurfaceInput","type_category":"Enum","published_at":"2019-06-14T23:13:45.328Z"},{"title":"BasePart.BrickColor","type":"BrickColor","locale":"en-us","tags":[],"summary":"Determines the color of a part.","description":"The BrickColor property determines the color of a part. If the part has a `/BasePart/Material`, this also determines the color used when rendering the material texture. For more control over the color, the `/BasePart/Color` property can be used (it is a Color3 variant of this property). If Color set, this property will use the closest BrickColor.\n\nOther visual properties of a part are determined by `/BasePart/Transparency` and `/BasePart/Reflectance`.","code_sample":[{"title":"Part Anchored Toggle","display_title":"Part Anchored Toggle","code_summary":"This code sample will allow a part to be clicked to toggle its anchored property. When toggled, the visual appearance of the part is updated (red means anchored, yellow means free).","code_sample":"local part = script.Parent\n\n-- Create a ClickDetector so we can tell when the part is clicked \nlocal cd = Instance.new(\"ClickDetector\", part)\n\n-- This function updates how the part looks based on its Anchored state\nlocal function updateVisuals()\n\tif part.Anchored then\n\t\t-- When the part is anchored...\n\t\tpart.BrickColor = BrickColor.new(\"Bright red\")\n\t\tpart.Material = Enum.Material.DiamondPlate\n\telse\n\t\t-- When the part is unanchored...\n\t\tpart.BrickColor = BrickColor.new(\"Bright yellow\")\n\t\tpart.Material = Enum.Material.Wood\n\tend\nend\n\nlocal function onToggle()\n\t-- Toggle the anchored property\n\tpart.Anchored = not part.Anchored\n\t\n\t-- Update visual state of the brick\n\tupdateVisuals()\nend\n\n-- Update, then start listening for clicks\nupdateVisuals()\ncd.MouseClick:Connect(onToggle)\n","validated_in_version":"0. 334. 0. 195932","comments_issues":"","tags":[],"locale":"en-us","uid":"bltcf51c0b96f0c13d2","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:03:26.293Z","updated_at":"2018-10-01T08:30:35.211Z","url":"/code-sample/Part-Anchored-Toggle","_version":11,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"published_at":"2019-06-15T00:14:11.812Z"}],"serialization":{"can_save":false,"can_load":true},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"","api_property_url":"/api-reference/property/BasePart/BrickColor","roblox_api_tags":["NotReplicated"],"studio_category":"Appearance","script_editor_context":[],"wiki_text_reference":"{{APIMemberPage\n|ClassName=BasePart\n|MemberType=Property\n|Description=Determines the color of a part.\n}}","uid":"bltfb1316fac558e5b3","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T12:10:16.778Z","updated_at":"2018-07-24T01:10:28.215Z","_version":8,"display_title":"BrickColor","api_dump_signature":"599ac2d66f37a5e95b45e01b986f7f3e4af1f905_v2","url":"/api-reference/property/BasePart/BrickColor","type_category":"DataType","published_at":"2019-06-14T23:13:43.125Z"},{"title":"BasePart.CFrame","type":"CFrame","locale":"en-us","tags":[],"summary":"Determines the position and rotation of a part in the world","description":"The CFrame property determines both the position and orientation of a part relative to the world. The part is rendered such that the CFrame is the center of the rendered 3D model (with one exception outlined below). For keeping track of positions relative to a part's CFrame, an `/Attachment` is useful. Most visual flair objects (such as particles and lights) will render at a part's CFrame.\n\nWhen setting CFrame, other joined parts are also moved relative to the part whose CFrame was set. This could be used for teleporting a player's character, however it is recommended to use `/Model/SetPrimaryPartCFrame` instead if you want to move an entire model. Unlike `/BasePart/Position`, setting CFrame will always move the part to the exact given CFrame; in other words: **no overlap checking is done when setting CFrame.** If two collidable parts happen to overlap and one is not `/BasePart/Anchored`, the physics solver will attempt to resolve the overlap.\n\nIn online sessions, a part may be rendered differently than its CFrame may suggest (e.g., for tweening the different CFrames received from the server). Use `/BasePart/GetRenderCFrame` to get the apparent CFrame.","code_sample":[{"title":"Setting Part CFrame","display_title":"Setting Part CFrame","code_summary":"This code sample demonstrates setting a part's CFrame in many different ways. It showcases how to create and compose CFrame values. It references a sibling part called \"OtherPart\" for demonstrating relative positioning.","code_sample":"local part = script.Parent\n\n-- Reset the part's CFrame to (0, 0, 0) with no rotation.\n-- This is sometimes called the \"identity\" CFrame\npart.CFrame = CFrame.new()\n\n-- Set to a specific position (X, Y, Z)\npart.CFrame = CFrame.new(0, 25, 10)\n\n-- Same as above, but use a Vector3 instead\nlocal point = Vector3.new(0, 25, 10)\npart.CFrame = CFrame.new(point)\n\n-- Set the part's CFrame to be at one point, looking at another\nlocal lookAtPoint = Vector3.new(0, 20, 15)\npart.CFrame = CFrame.new(point, lookAtPoint)\n\n-- Rotate the part's CFrame by pi/2 radians on local X axis\npart.CFrame = part.CFrame * CFrame.Angles(math.pi / 2, 0, 0)\n-- Rotate the part's CFrame by 45 degrees on local Y axis\npart.CFrame = part.CFrame * CFrame.Angles(0, math.rad(45), 0)\n-- Rotate the part's CFrame by 180 degrees on global Z axis (note the order!)\npart.CFrame = CFrame.Angles(0, 0, math.pi) * part.CFrame -- Pi radians is equal to 180 degrees\n\n-- Composing two CFrames is done using * (the multiplication operator)\npart.CFrame = CFrame.new(2, 3, 4) * CFrame.new(4, 5, 6) --> equal to CFrame.new(6, 8, 10)\n\n-- Unlike algebraic multiplication, CFrame composition is NOT communitative: a * b is not necessarily b * a!\n-- Imagine * as an ORDERED series of actions. For example, the following lines produce different CFrames:\n-- 1) Slide the part 5 units on X.\n-- 2) Rotate the part 45 degrees around its Y axis.\npart.CFrame = CFrame.new(5, 0, 0) * CFrame.Angles(0, math.rad(45), 0)\n-- 1) Rotate the part 45 degrees around its Y axis.\n-- 2) Slide the part 5 units on X.\npart.CFrame = CFrame.Angles(0, math.rad(45), 0) * CFrame.new(5, 0, 0)\n\n-- There is no \"CFrame division\", but instead simply \"doing the inverse operation\".\npart.CFrame = CFrame.new(4, 5, 6) * CFrame.new(4, 5, 6):inverse() --> is equal to CFrame.new(0, 0, 0)\npart.CFrame = CFrame.Angles(0, 0, math.pi) * CFrame.Angles(0, 0, math.pi):inverse() --> equal to CFrame.Angles(0, 0, 0)\n\n-- A reference to some other part\nlocal otherPart = part.Parent.OtherPart\n\n-- Position a part relative to another (in this case, put our part on top of otherPart)\npart.CFrame = otherPart.CFrame * CFrame.new(0, part.Size.Y/2 + otherPart.Size.Y/2, 0)\n\n-- All of this information applies to SetPrimaryPartCFrame, since that's all tht method\nlocal model = part.Parent.Model\nmodel:SetPrimaryPartCFrame(CFrame.new(0, 25, 0))\n","validated_in_version":"0. 334. 0. 195932","comments_issues":"We should use this in the CFrame page in addition to /BasePart/CFrame -HG","tags":[],"locale":"en-us","uid":"blt8232a1be46fbe3bb","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:03:19.711Z","updated_at":"2018-06-26T18:10:04.957Z","url":"/code-sample/Setting-Part-CFrame","_version":9,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"published_at":"2019-06-15T00:36:42.144Z"}],"serialization":{"can_save":true,"can_load":true},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"","api_property_url":"/api-reference/property/BasePart/CFrame","roblox_api_tags":[],"studio_category":"Data","script_editor_context":[],"wiki_text_reference":"{{APIMemberPage\n|Description=The current physical position and rotation of an object.\n|Notes=\n* In an online session, the CFrame of the BasePart may appear to differ from this property when using a {{ClassLink|LocalScript}}. See {{api|BasePart.GetRenderCFrame}} for more information.\n}}","uid":"bltf35c46fd59af294e","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T12:10:08.601Z","updated_at":"2018-07-24T01:10:30.988Z","_version":8,"display_title":"CFrame","api_dump_signature":"d4944360f36a1d98919550004b5b95757825e7d0_v2","url":"/api-reference/property/BasePart/CFrame","type_category":"DataType","published_at":"2019-06-14T23:13:40.930Z"},{"title":"BasePart.CanCollide","type":"bool","locale":"en-us","tags":[],"summary":"Determines whether a part may collide with other parts.","description":"The CanCollide property determines whether a part will physically interact with other parts. When disabled, other parts can pass through the brick uninterrupted. Parts used for **decoration** usually have CanCollide disabled, as they need not be considered by the physics engine.\n\nIf a part is not `/BasePart/Anchored` and has CanCollide disabled, it may fall out of the world to be eventually destroyed by `/Workspace/FallenPartsDestroyHeight`. Therefore, it is usually desirable to anchor such parts or join them to another part that is anchored so that they don't fall out of the level. You can also use an object like `/BodyPosition` or `/BodyForce` to prevent falling out of the level entirely.\n\nEven when CanCollide is disabled, parts may still fire the `/BasePart/Touched` event (as well the other parts touching them). In addition, a part allow other parts to pass through even if CanCollide is enabled if their collision groups are not set to collide with each other. Part collision groups are managed by `/PhysicsService`.","code_sample":[{"title":"Fade Door","display_title":"Fade Door","code_summary":"This code sample shows how a part can fade away when touched by a Humanoid then reappear a moment after to create a passable door.","code_sample":"-- Paste into a Script inside a tall part\nlocal part = script.Parent\n\nlocal OPEN_TIME = 1\n\n-- Can the door be opened at the moment?\nlocal debounce = false\n\nlocal function open()\n\tpart.CanCollide = false\n\tpart.Transparency = 0.7\n\tpart.BrickColor = BrickColor.new(\"Black\")\nend\n\nlocal function close()\n\tpart.CanCollide = true\n\tpart.Transparency = 0\n\tpart.BrickColor = BrickColor.new(\"Bright blue\")\nend\n\nlocal function onTouch(part)\n\t-- If the door was already open, do nothing\n\tif debounce then print(\"D\") return end\n\t\n\t-- Check if touched by a Humanoid\n\tlocal human = part.Parent:FindFirstChildOfClass(\"Humanoid\")\n\tif not human then print(\"not human\") return end\n\n\t-- Perform the door opening sequence\t\n\tdebounce = true\n\topen()\n\twait(OPEN_TIME)\n\tclose()\n\tdebounce = false\t\nend\n\npart.Touched:Connect(onTouch)\nclose()\n","validated_in_version":"0. 334. 0. 195932","comments_issues":"","tags":[],"locale":"en-us","uid":"blt5cb4581d47b406f9","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:03:30.587Z","updated_at":"2018-10-01T08:30:06.769Z","url":"/code-sample/Fade-Door","_version":12,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"published_at":"2019-06-15T00:14:34.318Z"}],"serialization":{"can_save":true,"can_load":true},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"","api_property_url":"/api-reference/property/BasePart/CanCollide","roblox_api_tags":[],"studio_category":"Behavior","script_editor_context":[],"wiki_text_reference":"{{APIMemberPage\n|MemberType=Property\n|Description=If true, then the object will collide with other objects.\n|Notes=\n|Tutorials=\n* [[Restricted door]]\n}}","uid":"bltd66727df87b40b07","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T12:10:25.082Z","updated_at":"2018-07-24T01:10:34.723Z","_version":8,"display_title":"CanCollide","api_dump_signature":"a45762249b1ddf2785d35905ebddf135df5374c3_v2","url":"/api-reference/property/BasePart/CanCollide","type_category":"Primitive","published_at":"2019-06-14T23:13:38.831Z"},{"title":"BasePart.Color","type":"Color3","locale":"en-us","tags":[],"summary":"Determines the color of a part.","description":"The Color property determines the color of a part. If the part has a `/BasePart/Material`, this also determines the color used when rendering the material texture. If this property is set, `/BasePart/BrickColor` will use the closest BrickColor to the Color3 value.\n\nOther visual properties of a part are determined by `/BasePart/Transparency` and `/BasePart/Reflectance`.","code_sample":[{"title":"Character Health Body Color","display_title":"Character Health Body Color","code_summary":"This code sample colors a player's entire character based on how much health they have. It generates a color based on their max health, then sets the color properties of objects within their character, removing any extra objects.","code_sample":"-- Paste into a Script within StarterCharacterScripts \n-- Then play the game, and fiddle with your character's health\nlocal char = script.Parent\nlocal human = char.Humanoid\n\nlocal colorHealthy = Color3.new(.4, 1, .2)\nlocal colorUnhealthy = Color3.new(1, .4, .2)\n\n-- Set the color of the humanoid, removing any extra objects\nlocal function setColor(color)\n\tfor _, child in pairs(char:GetChildren()) do\n\t\tif child:IsA(\"BasePart\") then\n\t\t\t-- Set the color of any parts\n\t\t\tchild.Color = color\n\t\t\t-- Remove decals\n\t\t\twhile child:FindFirstChildOfClass(\"Decal\") do\n\t\t\t\tchild:FindFirstChildOfClass(\"Decal\"):Destroy()\n\t\t\tend\n\t\telseif child:IsA(\"Accessory\") then\n\t\t\t-- Set the color of any accessories\n\t\t\tchild.Handle.Color = color\n\t\t\tlocal mesh = child.Handle:FindFirstChildOfClass(\"SpecialMesh\")\n\t\t\tif mesh then mesh.TextureId = \"\" end\n\t\telseif child:IsA(\"Shirt\") or child:IsA(\"Pants\") then\n\t\t\t-- Remove shirt/pant textures\n\t\t\tchild:Destroy()\n\t\tend\n\tend\nend\n\nlocal function update()\n\t-- Calculate the percentage health the human has\n\tlocal perc = human.Health / human.MaxHealth\n\t\n\t-- Create a color by tweening based on the percentage of your healthy\n\t-- The color goes from colorHealthy (100%) ----- > colorUnhealthy (0%)\n\tlocal color = Color3.new(\n\t\tcolorHealthy.r * perc + colorUnhealthy.r * (1 - perc),\n\t\tcolorHealthy.g * perc + colorUnhealthy.g * (1 - perc),\n\t\tcolorHealthy.b * perc + colorUnhealthy.b * (1 - perc)\n\t)\n\tsetColor(color)\nend\n\nupdate()\nhuman.HealthChanged:Connect(update)\n","validated_in_version":"0. 334. 0. 195932","comments_issues":"Probably a silly example, but it demo's the nature of the Color property being more precise than BrickColor -HG","tags":[],"locale":"en-us","uid":"bltfe44260ca900d8e9","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:03:21.075Z","updated_at":"2018-10-01T08:30:04.043Z","url":"/code-sample/Character-Health-Body-Color","_version":12,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"published_at":"2019-06-15T00:14:36.502Z"}],"serialization":{"can_save":false,"can_load":true},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"","api_property_url":"/api-reference/property/BasePart/Color","roblox_api_tags":["NotReplicated"],"studio_category":"Appearance","script_editor_context":[],"wiki_text_reference":"{{APIMemberPage\n|DescriptionShort=The Color3 value of the BasePart's color.\n|Description=$DESCRIPTION_SHORT\n}}","uid":"blt6bdf8317ccc958d9","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T12:10:13.996Z","updated_at":"2018-07-24T01:10:42.951Z","_version":8,"display_title":"Color","api_dump_signature":"56c05204c7cba3047f8ca9e64551ee02859a8883_v2","url":"/api-reference/property/BasePart/Color","type_category":"DataType","published_at":"2019-06-14T23:13:36.639Z"},{"title":"BasePart.FrontParamA","type":"float","locale":"en-us","tags":[],"summary":"Determines the first parameter for the SurfaceType on the Front face of a part (-Z direction)","description":"The FrontParamA property is relevant when a part's `/BasePart/FrontSurface` is set to Motor or SteppingMotor and `/BasePart/FrontSurfaceInput` is set to Sin. It determines the **amplitude** of the motor's rotational velocity, using the following formula:\n\n`MotorVelocity = ParamA * math.sin(workspace.DistributedGameTime * ParamB)`\n\nIn no other cases is this property used.","code_sample":[{"title":"Motor Control","display_title":"Motor Control","code_summary":"This code sample demonstrates how surface properties can be set using only a NormalId (Top, Front, etc). It switches a motor's -SurfaceInput from NoInput, Constant and Sin to show how each work using -ParamA and -ParamB properties.","code_sample":"-- Paste this into a Script inside a part with a Motor SurfaceType\nlocal partMotor = script.Parent\n-- Place a brick called \"MovingPart\" so it is touching the Motor surface\nlocal partMoving = partMotor.Parent.MovingPart\n\n-- For this example, we use TopSurface, TopSurfaceInput, TopParamA and TopParamB\n-- However, this will work for all faces (NormalId): Top, Bottom, Left, Right, Front and Back\n\n-- A function to quickly set all surface properties at once \nlocal function setFaceSurfaceInputParams(normalId, surfaceType, inputType, paramA, paramB)\n\tlocal surfaceName = normalId.Name -- e.g. \"Top\", \"Bottom\", etc\n\n\t-- Syntax Note: in Lua, part.Something is the same as part[\"Something\"]\n\t-- The difference is that the latter allows us to use a string (\"Something\"), while\n\t-- the former requires use of an identifier (.Something). Below, we build of each the surface\n\t-- properties below by concatenating the surface name with the property postfix.\n\t\n\t-- Set \"___Surface\", eg \"TopSurface\"\n\tpartMotor[surfaceName .. \"Surface\"] = surfaceType\n\t-- Set \"___SurfaceInput\", eg \"TopSurfaceInput\"\n\tpartMotor[surfaceName .. \"SurfaceInput\"] = inputType\n\t-- Set \"___ParamA\", eg \"TopParamA\"\n\tpartMotor[surfaceName .. \"ParamA\"] = paramA\n\t-- Set \"___ParamB\", eg \"TopParamB\"\n\tpartMotor[surfaceName .. \"ParamB\"] = paramB\nend\n\nlocal normalId = Enum.NormalId.Top\n\nwhile true do\n\t-- Set to NoInput, where the motor will not operate at all\n\tsetFaceSurfaceInputParams(normalId, Enum.SurfaceType.Motor, Enum.InputType.NoInput, 0, 0)\n\twait(1)\n\t-- Set to Constant, where motor rotational velocity = paramB\n\tsetFaceSurfaceInputParams(normalId, Enum.SurfaceType.Motor, Enum.InputType.Constant, 0, .25)\n\twait(2)\n\t-- Set to Sin, where motor rotational velocity = paramA * math.sin(time * paramB)\n\t-- Since we're using pi (~3.14), the frequency of rotation is 1 second (per definition of sine function)\n\tsetFaceSurfaceInputParams(normalId, Enum.SurfaceType.Motor, Enum.InputType.Sin, .25, math.pi)\n\twait(3)\nend\n","validated_in_version":"0. 334. 0. 195932","comments_issues":"Kind of a stretch but these properties are hardly ever scripted -HG","tags":[],"locale":"en-us","uid":"bltbbd9219eabbed922","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:03:11.874Z","updated_at":"2018-06-26T18:10:03.578Z","url":"/code-sample/Motor-Control","_version":11,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"published_at":"2019-06-15T00:36:46.645Z"}],"serialization":{"can_save":true,"can_load":true},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"","api_property_url":"/api-reference/property/BasePart/FrontParamA","roblox_api_tags":[],"studio_category":"Surface Inputs","script_editor_context":[],"wiki_text_reference":"{{API:Class/BasePart/BackParamA}}","uid":"blt3f5022ab7a35e316","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T12:09:38.881Z","updated_at":"2018-07-24T01:10:53.631Z","_version":9,"display_title":"FrontParamA","api_dump_signature":"c50e153f8ce0c163bc046f9921f1dfe0d69bf066_v2","url":"/api-reference/property/BasePart/FrontParamA","type_category":"Primitive","published_at":"2019-06-14T23:13:34.550Z"},{"title":"BasePart.FrontParamB","type":"float","locale":"en-us","tags":[],"summary":"Determines the second parameter for the SurfaceType on the Front face of a part (-Z direction)","description":"The FrontParamB property is relevant when a part's `/BasePart/FrontSurface` is set to Motor or SteppingMotor and `/BasePart/FrontSurfaceInput` is set to Constant or Sin. For Constant, it determines the constant rotational velocity of the motor. For Sin, it determines the **frequency** of the motor's rotational velocity, using the following formula:\n\n`MotorVelocity = ParamB * math.sin(workspace.DistributedGameTime * ParamB)`\n\nIn no other cases is this property used.","code_sample":[{"title":"Motor Control","display_title":"Motor Control","code_summary":"This code sample demonstrates how surface properties can be set using only a NormalId (Top, Front, etc). It switches a motor's -SurfaceInput from NoInput, Constant and Sin to show how each work using -ParamA and -ParamB properties.","code_sample":"-- Paste this into a Script inside a part with a Motor SurfaceType\nlocal partMotor = script.Parent\n-- Place a brick called \"MovingPart\" so it is touching the Motor surface\nlocal partMoving = partMotor.Parent.MovingPart\n\n-- For this example, we use TopSurface, TopSurfaceInput, TopParamA and TopParamB\n-- However, this will work for all faces (NormalId): Top, Bottom, Left, Right, Front and Back\n\n-- A function to quickly set all surface properties at once \nlocal function setFaceSurfaceInputParams(normalId, surfaceType, inputType, paramA, paramB)\n\tlocal surfaceName = normalId.Name -- e.g. \"Top\", \"Bottom\", etc\n\n\t-- Syntax Note: in Lua, part.Something is the same as part[\"Something\"]\n\t-- The difference is that the latter allows us to use a string (\"Something\"), while\n\t-- the former requires use of an identifier (.Something). Below, we build of each the surface\n\t-- properties below by concatenating the surface name with the property postfix.\n\t\n\t-- Set \"___Surface\", eg \"TopSurface\"\n\tpartMotor[surfaceName .. \"Surface\"] = surfaceType\n\t-- Set \"___SurfaceInput\", eg \"TopSurfaceInput\"\n\tpartMotor[surfaceName .. \"SurfaceInput\"] = inputType\n\t-- Set \"___ParamA\", eg \"TopParamA\"\n\tpartMotor[surfaceName .. \"ParamA\"] = paramA\n\t-- Set \"___ParamB\", eg \"TopParamB\"\n\tpartMotor[surfaceName .. \"ParamB\"] = paramB\nend\n\nlocal normalId = Enum.NormalId.Top\n\nwhile true do\n\t-- Set to NoInput, where the motor will not operate at all\n\tsetFaceSurfaceInputParams(normalId, Enum.SurfaceType.Motor, Enum.InputType.NoInput, 0, 0)\n\twait(1)\n\t-- Set to Constant, where motor rotational velocity = paramB\n\tsetFaceSurfaceInputParams(normalId, Enum.SurfaceType.Motor, Enum.InputType.Constant, 0, .25)\n\twait(2)\n\t-- Set to Sin, where motor rotational velocity = paramA * math.sin(time * paramB)\n\t-- Since we're using pi (~3.14), the frequency of rotation is 1 second (per definition of sine function)\n\tsetFaceSurfaceInputParams(normalId, Enum.SurfaceType.Motor, Enum.InputType.Sin, .25, math.pi)\n\twait(3)\nend\n","validated_in_version":"0. 334. 0. 195932","comments_issues":"Kind of a stretch but these properties are hardly ever scripted -HG","tags":[],"locale":"en-us","uid":"bltbbd9219eabbed922","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:03:11.874Z","updated_at":"2018-06-26T18:10:03.578Z","url":"/code-sample/Motor-Control","_version":11,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"published_at":"2019-06-15T00:36:46.645Z"}],"serialization":{"can_save":true,"can_load":true},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"","api_property_url":"/api-reference/property/BasePart/FrontParamB","roblox_api_tags":[],"studio_category":"Surface Inputs","script_editor_context":[],"wiki_text_reference":"{{API:Class/BasePart/BackParamA}}","uid":"blt215218a2742c8d3c","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T12:09:31.224Z","updated_at":"2018-07-24T01:10:56.232Z","_version":9,"display_title":"FrontParamB","api_dump_signature":"06f254b4f889088b4468e90214acae8a251e2d39_v2","url":"/api-reference/property/BasePart/FrontParamB","type_category":"Primitive","published_at":"2019-06-14T23:13:32.448Z"},{"title":"BasePart.FrontSurface","type":"SurfaceType","locale":"en-us","tags":[],"summary":"Determines the type of surface for the Front face of a part (-Z direction)","description":"The FrontSurface property determines the type of surface used for the -Z direction of a part. When two parts' faces are placed next to each other, they may create a joint between them depending on the SurfaceType used on the touching faces. If set to Motor, the `/BasePart/FrontSurfaceInput` determines how a motor joint should behave.\n\nMost SurfaceTypes render a texture on the part face if the `/BasePart/Material` is set to Plastic. Some SurfaceTypes - Hinge, Motor and SteppingMotor - will render a 3D adornment instead. If this property is selected in the Properties window, it will be highlighted in the game world similar to that of a `/SurfaceSelection`.","code_sample":[{"title":"Show All SurfaceTypes","display_title":"Show All SurfaceTypes","code_summary":"This code sample shows what each SurfaceType looks like on a part. In addition, it creates a BillboardGui label on the part with a TextLabel that reflects the name of the current SurfaceType.","code_sample":"local part = script.Parent\n\n-- Create a billboard gui to display what the current surface type is\nlocal bbgui = Instance.new(\"BillboardGui\")\nbbgui.AlwaysOnTop = true\nbbgui.Size = UDim2.new(0, 200, 0, 50)\nbbgui.Adornee = part\nlocal tl = Instance.new(\"TextLabel\")\ntl.Size = UDim2.new(0, 200, 0, 50)\ntl.BackgroundTransparency = 1\ntl.TextStrokeTransparency = 0\ntl.TextColor3 = Color3.new(1, 1, 1) -- White\ntl.Parent = bbgui\nbbgui.Parent = part\n\nlocal function setAllSurfaces(part, surfaceType)\n\tpart.TopSurface = surfaceType\n\tpart.BottomSurface = surfaceType\n\tpart.LeftSurface = surfaceType\n\tpart.RightSurface = surfaceType\n\tpart.FrontSurface = surfaceType\n\tpart.BackSurface = surfaceType\nend\n\nwhile true do\n\t-- Iterate through the different SurfaceTypes\n\tfor _, enum in pairs(Enum.SurfaceType:GetEnumItems()) do\n\t\ttl.Text = enum.Name\n\t\tsetAllSurfaces(part, enum)\n\t\twait(1)\n\tend\nend\n","validated_in_version":"0. 334. 0. 195932","comments_issues":"","tags":[],"locale":"en-us","uid":"blt288c1014c8419a79","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:03:13.236Z","updated_at":"2018-06-26T18:10:04.245Z","url":"/code-sample/Show-All-SurfaceTypes","_version":10,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"published_at":"2019-06-15T00:36:44.422Z"}],"serialization":{"can_save":true,"can_load":true},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"","api_property_url":"/api-reference/property/BasePart/FrontSurface","roblox_api_tags":[],"studio_category":"Surface","script_editor_context":[],"wiki_text_reference":"{{API:Class/BasePart/BackSurface}}","uid":"blt436dc85cffdcdb6c","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T12:10:00.435Z","updated_at":"2018-07-24T01:10:58.873Z","_version":9,"display_title":"FrontSurface","api_dump_signature":"e161d2225b08d261e7168e1eea0b7307ab51bb1e_v2","url":"/api-reference/property/BasePart/FrontSurface","type_category":"Enum","published_at":"2019-06-14T23:13:30.349Z"},{"title":"BasePart.FrontSurfaceInput","type":"InputType","locale":"en-us","tags":[],"summary":"Determines the kind of input for the Front face of a part (-Z direction)","description":"The FrontSurfaceInput property determines the kind of input provided to a part's `/BasePart/FrontSurface`. This is only relevant for Motor or SteppingMotor SurfaceTypes. This property determines how `/BasePart/FrontParamA` and `/BasePart/FrontParamB` are used. For brevity, these properties will be referred to as ParamA and ParamB, respectively.\n\n  - By default, this is set to NoInput. This stops the motor altogether,\n  - For Constant, the motor rotates at a constant velocity equal to `ParamB`.\n  - For Sin, the motor rotates at a velocity equal to `ParamA * math.sin(workspace.DistributedGameTime * ParamB)`. See `/Workspace/DistributedGameTime`.","code_sample":[{"title":"Motor Control","display_title":"Motor Control","code_summary":"This code sample demonstrates how surface properties can be set using only a NormalId (Top, Front, etc). It switches a motor's -SurfaceInput from NoInput, Constant and Sin to show how each work using -ParamA and -ParamB properties.","code_sample":"-- Paste this into a Script inside a part with a Motor SurfaceType\nlocal partMotor = script.Parent\n-- Place a brick called \"MovingPart\" so it is touching the Motor surface\nlocal partMoving = partMotor.Parent.MovingPart\n\n-- For this example, we use TopSurface, TopSurfaceInput, TopParamA and TopParamB\n-- However, this will work for all faces (NormalId): Top, Bottom, Left, Right, Front and Back\n\n-- A function to quickly set all surface properties at once \nlocal function setFaceSurfaceInputParams(normalId, surfaceType, inputType, paramA, paramB)\n\tlocal surfaceName = normalId.Name -- e.g. \"Top\", \"Bottom\", etc\n\n\t-- Syntax Note: in Lua, part.Something is the same as part[\"Something\"]\n\t-- The difference is that the latter allows us to use a string (\"Something\"), while\n\t-- the former requires use of an identifier (.Something). Below, we build of each the surface\n\t-- properties below by concatenating the surface name with the property postfix.\n\t\n\t-- Set \"___Surface\", eg \"TopSurface\"\n\tpartMotor[surfaceName .. \"Surface\"] = surfaceType\n\t-- Set \"___SurfaceInput\", eg \"TopSurfaceInput\"\n\tpartMotor[surfaceName .. \"SurfaceInput\"] = inputType\n\t-- Set \"___ParamA\", eg \"TopParamA\"\n\tpartMotor[surfaceName .. \"ParamA\"] = paramA\n\t-- Set \"___ParamB\", eg \"TopParamB\"\n\tpartMotor[surfaceName .. \"ParamB\"] = paramB\nend\n\nlocal normalId = Enum.NormalId.Top\n\nwhile true do\n\t-- Set to NoInput, where the motor will not operate at all\n\tsetFaceSurfaceInputParams(normalId, Enum.SurfaceType.Motor, Enum.InputType.NoInput, 0, 0)\n\twait(1)\n\t-- Set to Constant, where motor rotational velocity = paramB\n\tsetFaceSurfaceInputParams(normalId, Enum.SurfaceType.Motor, Enum.InputType.Constant, 0, .25)\n\twait(2)\n\t-- Set to Sin, where motor rotational velocity = paramA * math.sin(time * paramB)\n\t-- Since we're using pi (~3.14), the frequency of rotation is 1 second (per definition of sine function)\n\tsetFaceSurfaceInputParams(normalId, Enum.SurfaceType.Motor, Enum.InputType.Sin, .25, math.pi)\n\twait(3)\nend\n","validated_in_version":"0. 334. 0. 195932","comments_issues":"Kind of a stretch but these properties are hardly ever scripted -HG","tags":[],"locale":"en-us","uid":"bltbbd9219eabbed922","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:03:11.874Z","updated_at":"2018-06-26T18:10:03.578Z","url":"/code-sample/Motor-Control","_version":11,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"published_at":"2019-06-15T00:36:46.645Z"}],"serialization":{"can_save":true,"can_load":true},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"","api_property_url":"/api-reference/property/BasePart/FrontSurfaceInput","roblox_api_tags":[],"studio_category":"Surface Inputs","script_editor_context":[],"wiki_text_reference":"{{API:Class/BasePart/BackSurfaceInput}}","uid":"blt926498108d15c410","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T12:09:45.812Z","updated_at":"2018-07-24T01:11:01.488Z","_version":9,"display_title":"FrontSurfaceInput","api_dump_signature":"889841cd473e9e9b0e7f68d64118bee4b5aff781_v2","url":"/api-reference/property/BasePart/FrontSurfaceInput","type_category":"Enum","published_at":"2019-06-14T23:13:28.261Z"},{"title":"BasePart.LeftParamA","type":"float","locale":"en-us","tags":[],"summary":"Determines the first parameter for the SurfaceType on the Left face of a part (-Z direction)","description":"The LeftParamA property is relevant when a part's `/BasePart/LeftSurface` is set to Motor or SteppingMotor and `/BasePart/LeftSurfaceInput` is set to Sin. It determines the **amplitude** of the motor's rotational velocity, using the following formula:\n\n`MotorVelocity = ParamA * math.sin(workspace.DistributedGameTime * ParamB)`\n\nIn no other cases is this property used.","code_sample":[{"title":"Motor Control","display_title":"Motor Control","code_summary":"This code sample demonstrates how surface properties can be set using only a NormalId (Top, Front, etc). It switches a motor's -SurfaceInput from NoInput, Constant and Sin to show how each work using -ParamA and -ParamB properties.","code_sample":"-- Paste this into a Script inside a part with a Motor SurfaceType\nlocal partMotor = script.Parent\n-- Place a brick called \"MovingPart\" so it is touching the Motor surface\nlocal partMoving = partMotor.Parent.MovingPart\n\n-- For this example, we use TopSurface, TopSurfaceInput, TopParamA and TopParamB\n-- However, this will work for all faces (NormalId): Top, Bottom, Left, Right, Front and Back\n\n-- A function to quickly set all surface properties at once \nlocal function setFaceSurfaceInputParams(normalId, surfaceType, inputType, paramA, paramB)\n\tlocal surfaceName = normalId.Name -- e.g. \"Top\", \"Bottom\", etc\n\n\t-- Syntax Note: in Lua, part.Something is the same as part[\"Something\"]\n\t-- The difference is that the latter allows us to use a string (\"Something\"), while\n\t-- the former requires use of an identifier (.Something). Below, we build of each the surface\n\t-- properties below by concatenating the surface name with the property postfix.\n\t\n\t-- Set \"___Surface\", eg \"TopSurface\"\n\tpartMotor[surfaceName .. \"Surface\"] = surfaceType\n\t-- Set \"___SurfaceInput\", eg \"TopSurfaceInput\"\n\tpartMotor[surfaceName .. \"SurfaceInput\"] = inputType\n\t-- Set \"___ParamA\", eg \"TopParamA\"\n\tpartMotor[surfaceName .. \"ParamA\"] = paramA\n\t-- Set \"___ParamB\", eg \"TopParamB\"\n\tpartMotor[surfaceName .. \"ParamB\"] = paramB\nend\n\nlocal normalId = Enum.NormalId.Top\n\nwhile true do\n\t-- Set to NoInput, where the motor will not operate at all\n\tsetFaceSurfaceInputParams(normalId, Enum.SurfaceType.Motor, Enum.InputType.NoInput, 0, 0)\n\twait(1)\n\t-- Set to Constant, where motor rotational velocity = paramB\n\tsetFaceSurfaceInputParams(normalId, Enum.SurfaceType.Motor, Enum.InputType.Constant, 0, .25)\n\twait(2)\n\t-- Set to Sin, where motor rotational velocity = paramA * math.sin(time * paramB)\n\t-- Since we're using pi (~3.14), the frequency of rotation is 1 second (per definition of sine function)\n\tsetFaceSurfaceInputParams(normalId, Enum.SurfaceType.Motor, Enum.InputType.Sin, .25, math.pi)\n\twait(3)\nend\n","validated_in_version":"0. 334. 0. 195932","comments_issues":"Kind of a stretch but these properties are hardly ever scripted -HG","tags":[],"locale":"en-us","uid":"bltbbd9219eabbed922","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:03:11.874Z","updated_at":"2018-06-26T18:10:03.578Z","url":"/code-sample/Motor-Control","_version":11,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"published_at":"2019-06-15T00:36:46.645Z"}],"serialization":{"can_save":true,"can_load":true},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"","api_property_url":"/api-reference/property/BasePart/LeftParamA","roblox_api_tags":[],"studio_category":"Surface Inputs","script_editor_context":[],"wiki_text_reference":"{{API:Class/BasePart/BackParamA}}","uid":"blt937989ab1b444467","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T12:09:37.549Z","updated_at":"2018-07-24T01:11:04.853Z","_version":9,"display_title":"LeftParamA","api_dump_signature":"53655dddf8a0647ea574c0bc800565e8062b4d96_v2","url":"/api-reference/property/BasePart/LeftParamA","type_category":"Primitive","published_at":"2019-06-14T23:13:26.133Z"},{"title":"BasePart.LeftParamB","type":"float","locale":"en-us","tags":[],"summary":"Determines the second parameter for the SurfaceType on the Left face of a part (-Z direction)","description":"The LeftParamB property is relevant when a part's `/BasePart/LeftSurface` is set to Motor or SteppingMotor and `/BasePart/LeftSurfaceInput` is set to Constant or Sin. For Constant, it determines the constant rotational velocity of the motor. For Sin, it determines the **frequency** of the motor's rotational velocity, using the following formula:\n\n`MotorVelocity = ParamB * math.sin(workspace.DistributedGameTime * ParamB)`\n\nIn no other cases is this property used.","code_sample":[{"title":"Motor Control","display_title":"Motor Control","code_summary":"This code sample demonstrates how surface properties can be set using only a NormalId (Top, Front, etc). It switches a motor's -SurfaceInput from NoInput, Constant and Sin to show how each work using -ParamA and -ParamB properties.","code_sample":"-- Paste this into a Script inside a part with a Motor SurfaceType\nlocal partMotor = script.Parent\n-- Place a brick called \"MovingPart\" so it is touching the Motor surface\nlocal partMoving = partMotor.Parent.MovingPart\n\n-- For this example, we use TopSurface, TopSurfaceInput, TopParamA and TopParamB\n-- However, this will work for all faces (NormalId): Top, Bottom, Left, Right, Front and Back\n\n-- A function to quickly set all surface properties at once \nlocal function setFaceSurfaceInputParams(normalId, surfaceType, inputType, paramA, paramB)\n\tlocal surfaceName = normalId.Name -- e.g. \"Top\", \"Bottom\", etc\n\n\t-- Syntax Note: in Lua, part.Something is the same as part[\"Something\"]\n\t-- The difference is that the latter allows us to use a string (\"Something\"), while\n\t-- the former requires use of an identifier (.Something). Below, we build of each the surface\n\t-- properties below by concatenating the surface name with the property postfix.\n\t\n\t-- Set \"___Surface\", eg \"TopSurface\"\n\tpartMotor[surfaceName .. \"Surface\"] = surfaceType\n\t-- Set \"___SurfaceInput\", eg \"TopSurfaceInput\"\n\tpartMotor[surfaceName .. \"SurfaceInput\"] = inputType\n\t-- Set \"___ParamA\", eg \"TopParamA\"\n\tpartMotor[surfaceName .. \"ParamA\"] = paramA\n\t-- Set \"___ParamB\", eg \"TopParamB\"\n\tpartMotor[surfaceName .. \"ParamB\"] = paramB\nend\n\nlocal normalId = Enum.NormalId.Top\n\nwhile true do\n\t-- Set to NoInput, where the motor will not operate at all\n\tsetFaceSurfaceInputParams(normalId, Enum.SurfaceType.Motor, Enum.InputType.NoInput, 0, 0)\n\twait(1)\n\t-- Set to Constant, where motor rotational velocity = paramB\n\tsetFaceSurfaceInputParams(normalId, Enum.SurfaceType.Motor, Enum.InputType.Constant, 0, .25)\n\twait(2)\n\t-- Set to Sin, where motor rotational velocity = paramA * math.sin(time * paramB)\n\t-- Since we're using pi (~3.14), the frequency of rotation is 1 second (per definition of sine function)\n\tsetFaceSurfaceInputParams(normalId, Enum.SurfaceType.Motor, Enum.InputType.Sin, .25, math.pi)\n\twait(3)\nend\n","validated_in_version":"0. 334. 0. 195932","comments_issues":"Kind of a stretch but these properties are hardly ever scripted -HG","tags":[],"locale":"en-us","uid":"bltbbd9219eabbed922","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:03:11.874Z","updated_at":"2018-06-26T18:10:03.578Z","url":"/code-sample/Motor-Control","_version":11,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"published_at":"2019-06-15T00:36:46.645Z"}],"serialization":{"can_save":true,"can_load":true},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"","api_property_url":"/api-reference/property/BasePart/LeftParamB","roblox_api_tags":[],"studio_category":"Surface Inputs","script_editor_context":[],"wiki_text_reference":"{{API:Class/BasePart/BackParamA}}","uid":"blt6e08ca66c811c71a","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T12:09:28.782Z","updated_at":"2018-07-24T01:11:07.550Z","_version":9,"display_title":"LeftParamB","api_dump_signature":"2e85635ac226e072678a8e122a1d166eea1bc7df_v2","url":"/api-reference/property/BasePart/LeftParamB","type_category":"Primitive","published_at":"2019-06-14T23:13:24.006Z"},{"title":"BasePart.LeftSurface","type":"SurfaceType","locale":"en-us","tags":[],"summary":"Determines the type of surface for the Left face of a part (-X direction)","description":"The LeftSurface property determines the type of surface used for the -X direction of a part. When two parts' faces are placed next to each other, they may create a joint between them depending on the SurfaceType used on the touching faces. If set to Motor, the `/BasePart/LeftSurfaceInput` determines how a motor joint should behave.\n\nMost SurfaceTypes render a texture on the part face if the `/BasePart/Material` is set to Plastic. Some SurfaceTypes - Hinge, Motor and SteppingMotor - will render a 3D adornment instead. If this property is selected in the Properties window, it will be highlighted in the game world similar to that of a `/SurfaceSelection`.","code_sample":[{"title":"Show All SurfaceTypes","display_title":"Show All SurfaceTypes","code_summary":"This code sample shows what each SurfaceType looks like on a part. In addition, it creates a BillboardGui label on the part with a TextLabel that reflects the name of the current SurfaceType.","code_sample":"local part = script.Parent\n\n-- Create a billboard gui to display what the current surface type is\nlocal bbgui = Instance.new(\"BillboardGui\")\nbbgui.AlwaysOnTop = true\nbbgui.Size = UDim2.new(0, 200, 0, 50)\nbbgui.Adornee = part\nlocal tl = Instance.new(\"TextLabel\")\ntl.Size = UDim2.new(0, 200, 0, 50)\ntl.BackgroundTransparency = 1\ntl.TextStrokeTransparency = 0\ntl.TextColor3 = Color3.new(1, 1, 1) -- White\ntl.Parent = bbgui\nbbgui.Parent = part\n\nlocal function setAllSurfaces(part, surfaceType)\n\tpart.TopSurface = surfaceType\n\tpart.BottomSurface = surfaceType\n\tpart.LeftSurface = surfaceType\n\tpart.RightSurface = surfaceType\n\tpart.FrontSurface = surfaceType\n\tpart.BackSurface = surfaceType\nend\n\nwhile true do\n\t-- Iterate through the different SurfaceTypes\n\tfor _, enum in pairs(Enum.SurfaceType:GetEnumItems()) do\n\t\ttl.Text = enum.Name\n\t\tsetAllSurfaces(part, enum)\n\t\twait(1)\n\tend\nend\n","validated_in_version":"0. 334. 0. 195932","comments_issues":"","tags":[],"locale":"en-us","uid":"blt288c1014c8419a79","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:03:13.236Z","updated_at":"2018-06-26T18:10:04.245Z","url":"/code-sample/Show-All-SurfaceTypes","_version":10,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"published_at":"2019-06-15T00:36:44.422Z"}],"serialization":{"can_save":true,"can_load":true},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"","api_property_url":"/api-reference/property/BasePart/LeftSurface","roblox_api_tags":[],"studio_category":"Surface","script_editor_context":[],"wiki_text_reference":"{{API:Class/BasePart/BackSurface}}","uid":"blt2fec4e7e7482d58e","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T12:09:57.719Z","updated_at":"2018-07-24T01:11:10.165Z","_version":9,"display_title":"LeftSurface","api_dump_signature":"27761d75a91a4113f7278a8fff259c6c444d2e93_v2","url":"/api-reference/property/BasePart/LeftSurface","type_category":"Enum","published_at":"2019-06-14T23:13:21.886Z"},{"title":"BasePart.LeftSurfaceInput","type":"InputType","locale":"en-us","tags":[],"summary":"Determines the kind of input for the Left face of a part (+X direction)","description":"The LeftSurfaceInput property determines the kind of input provided to a part's `/BasePart/LeftSurface`. This is only relevant for Motor or SteppingMotor SurfaceTypes. This property determines how `/BasePart/LeftParamA` and `/BasePart/LeftParamB` are used. For brevity, these properties will be referred to as ParamA and ParamB, respectively.\n\n  - By default, this is set to NoInput. This stops the motor altogether,\n  - For Constant, the motor rotates at a constant velocity equal to `ParamB`.\n  - For Sin, the motor rotates at a velocity equal to `ParamA * math.sin(workspace.DistributedGameTime * ParamB)`. See `/Workspace/DistributedGameTime`.","code_sample":[{"title":"Motor Control","display_title":"Motor Control","code_summary":"This code sample demonstrates how surface properties can be set using only a NormalId (Top, Front, etc). It switches a motor's -SurfaceInput from NoInput, Constant and Sin to show how each work using -ParamA and -ParamB properties.","code_sample":"-- Paste this into a Script inside a part with a Motor SurfaceType\nlocal partMotor = script.Parent\n-- Place a brick called \"MovingPart\" so it is touching the Motor surface\nlocal partMoving = partMotor.Parent.MovingPart\n\n-- For this example, we use TopSurface, TopSurfaceInput, TopParamA and TopParamB\n-- However, this will work for all faces (NormalId): Top, Bottom, Left, Right, Front and Back\n\n-- A function to quickly set all surface properties at once \nlocal function setFaceSurfaceInputParams(normalId, surfaceType, inputType, paramA, paramB)\n\tlocal surfaceName = normalId.Name -- e.g. \"Top\", \"Bottom\", etc\n\n\t-- Syntax Note: in Lua, part.Something is the same as part[\"Something\"]\n\t-- The difference is that the latter allows us to use a string (\"Something\"), while\n\t-- the former requires use of an identifier (.Something). Below, we build of each the surface\n\t-- properties below by concatenating the surface name with the property postfix.\n\t\n\t-- Set \"___Surface\", eg \"TopSurface\"\n\tpartMotor[surfaceName .. \"Surface\"] = surfaceType\n\t-- Set \"___SurfaceInput\", eg \"TopSurfaceInput\"\n\tpartMotor[surfaceName .. \"SurfaceInput\"] = inputType\n\t-- Set \"___ParamA\", eg \"TopParamA\"\n\tpartMotor[surfaceName .. \"ParamA\"] = paramA\n\t-- Set \"___ParamB\", eg \"TopParamB\"\n\tpartMotor[surfaceName .. \"ParamB\"] = paramB\nend\n\nlocal normalId = Enum.NormalId.Top\n\nwhile true do\n\t-- Set to NoInput, where the motor will not operate at all\n\tsetFaceSurfaceInputParams(normalId, Enum.SurfaceType.Motor, Enum.InputType.NoInput, 0, 0)\n\twait(1)\n\t-- Set to Constant, where motor rotational velocity = paramB\n\tsetFaceSurfaceInputParams(normalId, Enum.SurfaceType.Motor, Enum.InputType.Constant, 0, .25)\n\twait(2)\n\t-- Set to Sin, where motor rotational velocity = paramA * math.sin(time * paramB)\n\t-- Since we're using pi (~3.14), the frequency of rotation is 1 second (per definition of sine function)\n\tsetFaceSurfaceInputParams(normalId, Enum.SurfaceType.Motor, Enum.InputType.Sin, .25, math.pi)\n\twait(3)\nend\n","validated_in_version":"0. 334. 0. 195932","comments_issues":"Kind of a stretch but these properties are hardly ever scripted -HG","tags":[],"locale":"en-us","uid":"bltbbd9219eabbed922","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:03:11.874Z","updated_at":"2018-06-26T18:10:03.578Z","url":"/code-sample/Motor-Control","_version":11,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"published_at":"2019-06-15T00:36:46.645Z"}],"serialization":{"can_save":true,"can_load":true},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"","api_property_url":"/api-reference/property/BasePart/LeftSurfaceInput","roblox_api_tags":[],"studio_category":"Surface Inputs","script_editor_context":[],"wiki_text_reference":"{{API:Class/BasePart/BackSurfaceInput}}","uid":"blt57e3b37084ff5ec4","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T12:09:44.487Z","updated_at":"2018-07-24T01:11:13.205Z","_version":9,"display_title":"LeftSurfaceInput","api_dump_signature":"62cff1bd629b3b492e4849ae3f50b2ebadf5421f_v2","url":"/api-reference/property/BasePart/LeftSurfaceInput","type_category":"Enum","published_at":"2019-06-14T23:13:19.801Z"},{"title":"BasePart.Material","type":"Material","locale":"en-us","tags":[],"summary":"Determines the texture and default physical properties of a part","description":"The Material property allows a builder to set a part's texture and default physical properties (in the case that `/BasePart/CustomPhysicalProperties` is unset). The default Plastic material has a very light texture, and the SmoothPlastic material has no texture at all. Some material textures like DiamondPlate and Granite have very visible textures. Each material's texture reflects sunlight differently, especially Foil.\n\nSetting this property then enabling `/BasePart/CustomPhysicalProperties` will use the default physical properties of a material. For instance, DiamondPlate is a very dense material while Wood is very light. A part's density determines whether it will float in terrain water.\n\nThe Glass material changes rendering behavior on moderate graphics settings. It applies a bit of reflectiveness (similar to `/BasePart/Reflectance`) and perspective distortion. The effect is especially pronounced on sphere-shaped parts (set `/BasePart/Shape` to Ball). Semitransparent objects and Glass parts behind Glass are not visible.","code_sample":[{"title":"Part Anchored Toggle","display_title":"Part Anchored Toggle","code_summary":"This code sample will allow a part to be clicked to toggle its anchored property. When toggled, the visual appearance of the part is updated (red means anchored, yellow means free).","code_sample":"local part = script.Parent\n\n-- Create a ClickDetector so we can tell when the part is clicked \nlocal cd = Instance.new(\"ClickDetector\", part)\n\n-- This function updates how the part looks based on its Anchored state\nlocal function updateVisuals()\n\tif part.Anchored then\n\t\t-- When the part is anchored...\n\t\tpart.BrickColor = BrickColor.new(\"Bright red\")\n\t\tpart.Material = Enum.Material.DiamondPlate\n\telse\n\t\t-- When the part is unanchored...\n\t\tpart.BrickColor = BrickColor.new(\"Bright yellow\")\n\t\tpart.Material = Enum.Material.Wood\n\tend\nend\n\nlocal function onToggle()\n\t-- Toggle the anchored property\n\tpart.Anchored = not part.Anchored\n\t\n\t-- Update visual state of the brick\n\tupdateVisuals()\nend\n\n-- Update, then start listening for clicks\nupdateVisuals()\ncd.MouseClick:Connect(onToggle)\n","validated_in_version":"0. 334. 0. 195932","comments_issues":"","tags":[],"locale":"en-us","uid":"bltcf51c0b96f0c13d2","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:03:26.293Z","updated_at":"2018-10-01T08:30:35.211Z","url":"/code-sample/Part-Anchored-Toggle","_version":11,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"published_at":"2019-06-15T00:14:11.812Z"}],"serialization":{"can_save":true,"can_load":true},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"","api_property_url":"/api-reference/property/BasePart/Material","roblox_api_tags":[],"studio_category":"Appearance","script_editor_context":[],"wiki_text_reference":"{{APIMemberPage\n|DescriptionShort=Sets the material that the object is made out of.\n|Description=$DESCRIPTION_SHORT\n\n[[File:BasePart_Materials.png|frame|center|The materials applied to the default brick color]]\n|Example=\nThis will change the Material of the part to Grass.\n{{lua|=\nworkspace.Part.Material = \"Grass\"\n}}\n}}","uid":"blt841362e015897780","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T12:10:19.779Z","updated_at":"2018-07-24T01:11:22.151Z","_version":9,"display_title":"Material","api_dump_signature":"8a56c7012135e867fb3647b8e53e91693b385d30_v2","url":"/api-reference/property/BasePart/Material","type_category":"Enum","published_at":"2019-06-14T23:13:17.732Z"},{"title":"BasePart.Orientation","type":"Vector3","locale":"en-us","tags":[],"summary":"Describes the position of the part in the world.","description":"The Orientation property describes the part's rotation in degrees around the X, Y and Z axes using a Vector3. The rotations are applied in Y → X → Z order. This differs from proper [Euler angles][1], and is instead [Tait–Bryan angles][2] which describe **yaw, pitch and roll**. It is also worth noting how this property differs from the `CFrame.Angles()` constructor, which applies rotations in a different order (Z → Y → X). For better control over the rotation of a part, it is recommended that `/BasePart/CFrame` is set instead.\n\n  [1]: https://en.wikipedia.org/wiki/Euler_angles\n  [2]: https://en.wikipedia.org/wiki/Euler_angles#Tait-Bryan_angles","code_sample":[{"title":"Part Spinner","display_title":"Part Spinner","code_summary":"This code sample rotates a part continually on the Y axis.","code_sample":"local part = script.Parent\n\nlocal incr = 360/20\n\n-- Rotate the part continually\nwhile true do\n\tfor deg = 0, 360, incr do\n\t\t-- Set only the Y axis rotation\n\t\tpart.Rotation = Vector3.new(0, deg, 0)\n\t\t-- A better way to do this would be setting CFrame\n\t\t--part.CFrame = CFrame.new(part.Position) * CFrame.Angles(0, math.rad(deg), 0)\n\t\twait()\n\tend\nend\n","validated_in_version":"0. 334. 0. 195932","comments_issues":"","tags":[],"locale":"en-us","uid":"bltc199903c51dbd177","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:03:16.007Z","updated_at":"2018-06-26T18:10:09.156Z","url":"/code-sample/Part-Spinner","_version":11,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"published_at":"2019-06-15T00:36:33.225Z"}],"serialization":{"can_save":false,"can_load":true},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"","api_property_url":"/api-reference/property/BasePart/Orientation","roblox_api_tags":["NotReplicated"],"studio_category":"Data","script_editor_context":[],"wiki_text_reference":"{{APIMemberPage\n|Description=Describes the part's rotation around X, Y, and Z axis. Rotations are applied in YXZ order.\n}}","uid":"bltf21e91227306dc32","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T12:09:11.260Z","updated_at":"2018-07-24T01:11:24.887Z","_version":9,"display_title":"Orientation","api_dump_signature":"ccf8f990ec80a958233048f741fe160fa7d9b62e_v2","url":"/api-reference/property/BasePart/Orientation","type_category":"DataType","published_at":"2019-06-14T23:13:15.552Z"},{"title":"BasePart.ReceiveAge","type":"float","locale":"en-us","tags":[],"summary":"Time since last recorded physics update","description":"This returns the time in seconds since the part's physics got last updated on the local client (or the server). Returns 0 when the part has no physics (Anchored)","code_sample":[],"serialization":{"can_save":false,"can_load":false},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"","api_property_url":"/api-reference/property/BasePart/ReceiveAge","roblox_api_tags":["Hidden","ReadOnly","NotReplicated"],"studio_category":"Part ","script_editor_context":[],"wiki_text_reference":"{{APIMemberPage\n|ClassName=BasePart\n|MemberType=Property\n|Description=This returns the time in seconds since the part's physics got last updated on the local client (or the server). Returns 0 when the part has no physics (Anchored)\n|DescriptionShort=Time since last recorded physics update\n}}","uid":"blt82d86db6d89c8b09","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T12:19:42.305Z","updated_at":"2018-07-24T01:11:30.311Z","_version":11,"display_title":"ReceiveAge","api_dump_signature":"553417e53e433bfc12b8ce3dd79b61dc1cf389a1_v2","url":"/api-reference/property/BasePart/ReceiveAge","type_category":"Primitive","published_at":"2019-06-14T23:13:13.463Z"},{"title":"BasePart.ResizeIncrement","type":"int","locale":"en-us","tags":[],"summary":"Describes the smallest change in size allowable by the Resize method","description":"The ResizeIncrement property is a read-only property that describes the smallest change in size allowable by the `/BasePart/Resize` method. It differs between implementations of the `/BasePart` abstract class. For instance, `/Part` has this set to 1 and `/TrussPart` has this set to 2 (since individual truss sections are 2x2x2 in size).","code_sample":[{"title":"Resize Handles","display_title":"Resize Handles","code_summary":"This code sample creates a Handles object and shows how to set the Faces property of the object. It also references ResizeableFaces of a part. Try placing this script in multiple kinds of parts to see how ResizeableFaces varies.","code_sample":"-- Put this Script in several kinds of BasePart, like\n-- Part, TrussPart, WedgePart, CornerWedgePart, etc.\nlocal part = script.Parent\n\n-- Create a handles object for this part\nlocal handles = Instance.new(\"Handles\")\nhandles.Adornee = part\nhandles.Parent = part\n\n-- Manually specify the faces applicable for this handle\nhandles.Faces = Faces.new(Enum.NormalId.Top, Enum.NormalId.Front, Enum.NormalId.Left)\n\n-- Alternatively, use the faces on which the part can be resized.\n-- If part is a TrussPart with only two Size dimensions\n-- of length 2, then ResizeableFaces will only have two\n-- enabled faces. For other parts, all faces will be enabled. \nhandles.Faces = part.ResizeableFaces\n","validated_in_version":"0. 334. 0. 195932","comments_issues":"","tags":[],"locale":"en-us","uid":"blt0fe12bd96196cfb9","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:03:07.789Z","updated_at":"2018-06-26T18:10:11.286Z","url":"/code-sample/Resize-Handles","_version":11,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"published_at":"2019-06-15T00:36:28.631Z"}],"serialization":{"can_save":false,"can_load":false},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"","api_property_url":"/api-reference/property/BasePart/ResizeIncrement","roblox_api_tags":["ReadOnly","NotReplicated"],"studio_category":"Behavior","script_editor_context":[],"wiki_text_reference":"{{APIMemberPage\n|MemberType=Property\n|Description=}}","uid":"blt8c11f467ac52b8ee","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T12:09:12.624Z","updated_at":"2018-07-24T01:11:35.877Z","_version":9,"display_title":"ResizeIncrement","api_dump_signature":"8795168faf6bec599da6da03c7fb41b6dc8b7c2c_v2","url":"/api-reference/property/BasePart/ResizeIncrement","type_category":"Primitive","published_at":"2019-06-14T23:13:11.367Z"},{"title":"BasePart.ResizeableFaces","type":"Faces","locale":"en-us","tags":[],"summary":"Describes the faces on which a part may be resized","description":"The ResizeableFaces property (with an **e**, not ResizableFaces) describes using a Faces object the different faces on which a part may be resized. For most implementations of `/BasePart`, such as `/Part` and `/WedgePart`, this property includes all faces. However, `/TrussPart` will set its ResizeableFaces set to only two faces since those kinds of parts must have two `/BasePart/Size` dimensions of length 2. This property is most commonly used with tools used for building and manipulating parts and has little use outside of that context. The `/Handles` class, which has the `/Handles/Faces` property, can be used in conjunction with this property to display only the handles on faces that can be resized on a part.","code_sample":[{"title":"Resize Handles","display_title":"Resize Handles","code_summary":"This code sample creates a Handles object and shows how to set the Faces property of the object. It also references ResizeableFaces of a part. Try placing this script in multiple kinds of parts to see how ResizeableFaces varies.","code_sample":"-- Put this Script in several kinds of BasePart, like\n-- Part, TrussPart, WedgePart, CornerWedgePart, etc.\nlocal part = script.Parent\n\n-- Create a handles object for this part\nlocal handles = Instance.new(\"Handles\")\nhandles.Adornee = part\nhandles.Parent = part\n\n-- Manually specify the faces applicable for this handle\nhandles.Faces = Faces.new(Enum.NormalId.Top, Enum.NormalId.Front, Enum.NormalId.Left)\n\n-- Alternatively, use the faces on which the part can be resized.\n-- If part is a TrussPart with only two Size dimensions\n-- of length 2, then ResizeableFaces will only have two\n-- enabled faces. For other parts, all faces will be enabled. \nhandles.Faces = part.ResizeableFaces\n","validated_in_version":"0. 334. 0. 195932","comments_issues":"","tags":[],"locale":"en-us","uid":"blt0fe12bd96196cfb9","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:03:07.789Z","updated_at":"2018-06-26T18:10:11.286Z","url":"/code-sample/Resize-Handles","_version":11,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"published_at":"2019-06-15T00:36:28.631Z"}],"serialization":{"can_save":false,"can_load":false},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"","api_property_url":"/api-reference/property/BasePart/ResizeableFaces","roblox_api_tags":["ReadOnly","NotReplicated"],"studio_category":"Behavior","script_editor_context":[],"wiki_text_reference":"{{APIMemberPage\n|MemberType=Property\n|Description=}}","uid":"blta34dd6ea2fe9356a","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T12:09:13.986Z","updated_at":"2018-07-24T01:11:38.547Z","_version":9,"display_title":"ResizeableFaces","api_dump_signature":"c0bc2cf243aaf655cf014f2fc3bd07d5d67872da_v2","url":"/api-reference/property/BasePart/ResizeableFaces","type_category":"DataType","published_at":"2019-06-14T23:13:09.297Z"},{"title":"BasePart.RightParamA","type":"float","locale":"en-us","tags":[],"summary":"Determines the first parameter for the SurfaceType on the Right face of a part (-X direction)","description":"The RightParamA property is relevant when a part's `/BasePart/RightSurface` is set to Motor or SteppingMotor and `/BasePart/RightSurfaceInput` is set to Sin. It determines the **amplitude** of the motor's rotational velocity, using the following formula:\n\n`MotorVelocity = ParamA * math.sin(workspace.DistributedGameTime * ParamB)`\n\nIn no other cases is this property used.","code_sample":[{"title":"Motor Control","display_title":"Motor Control","code_summary":"This code sample demonstrates how surface properties can be set using only a NormalId (Top, Front, etc). It switches a motor's -SurfaceInput from NoInput, Constant and Sin to show how each work using -ParamA and -ParamB properties.","code_sample":"-- Paste this into a Script inside a part with a Motor SurfaceType\nlocal partMotor = script.Parent\n-- Place a brick called \"MovingPart\" so it is touching the Motor surface\nlocal partMoving = partMotor.Parent.MovingPart\n\n-- For this example, we use TopSurface, TopSurfaceInput, TopParamA and TopParamB\n-- However, this will work for all faces (NormalId): Top, Bottom, Left, Right, Front and Back\n\n-- A function to quickly set all surface properties at once \nlocal function setFaceSurfaceInputParams(normalId, surfaceType, inputType, paramA, paramB)\n\tlocal surfaceName = normalId.Name -- e.g. \"Top\", \"Bottom\", etc\n\n\t-- Syntax Note: in Lua, part.Something is the same as part[\"Something\"]\n\t-- The difference is that the latter allows us to use a string (\"Something\"), while\n\t-- the former requires use of an identifier (.Something). Below, we build of each the surface\n\t-- properties below by concatenating the surface name with the property postfix.\n\t\n\t-- Set \"___Surface\", eg \"TopSurface\"\n\tpartMotor[surfaceName .. \"Surface\"] = surfaceType\n\t-- Set \"___SurfaceInput\", eg \"TopSurfaceInput\"\n\tpartMotor[surfaceName .. \"SurfaceInput\"] = inputType\n\t-- Set \"___ParamA\", eg \"TopParamA\"\n\tpartMotor[surfaceName .. \"ParamA\"] = paramA\n\t-- Set \"___ParamB\", eg \"TopParamB\"\n\tpartMotor[surfaceName .. \"ParamB\"] = paramB\nend\n\nlocal normalId = Enum.NormalId.Top\n\nwhile true do\n\t-- Set to NoInput, where the motor will not operate at all\n\tsetFaceSurfaceInputParams(normalId, Enum.SurfaceType.Motor, Enum.InputType.NoInput, 0, 0)\n\twait(1)\n\t-- Set to Constant, where motor rotational velocity = paramB\n\tsetFaceSurfaceInputParams(normalId, Enum.SurfaceType.Motor, Enum.InputType.Constant, 0, .25)\n\twait(2)\n\t-- Set to Sin, where motor rotational velocity = paramA * math.sin(time * paramB)\n\t-- Since we're using pi (~3.14), the frequency of rotation is 1 second (per definition of sine function)\n\tsetFaceSurfaceInputParams(normalId, Enum.SurfaceType.Motor, Enum.InputType.Sin, .25, math.pi)\n\twait(3)\nend\n","validated_in_version":"0. 334. 0. 195932","comments_issues":"Kind of a stretch but these properties are hardly ever scripted -HG","tags":[],"locale":"en-us","uid":"bltbbd9219eabbed922","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:03:11.874Z","updated_at":"2018-06-26T18:10:03.578Z","url":"/code-sample/Motor-Control","_version":11,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"published_at":"2019-06-15T00:36:46.645Z"}],"serialization":{"can_save":true,"can_load":true},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"","api_property_url":"/api-reference/property/BasePart/RightParamA","roblox_api_tags":[],"studio_category":"Surface Inputs","script_editor_context":[],"wiki_text_reference":"{{API:Class/BasePart/BackParamA}}","uid":"blt9854c5fc6afbabf2","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T12:09:36.183Z","updated_at":"2018-07-24T01:11:41.209Z","_version":9,"display_title":"RightParamA","api_dump_signature":"99917ad6af03058ec4c865f7fbde2259aca93fbb_v2","url":"/api-reference/property/BasePart/RightParamA","type_category":"Primitive","published_at":"2019-06-14T23:13:07.111Z"},{"title":"BasePart.RightParamB","type":"float","locale":"en-us","tags":[],"summary":"Determines the second parameter for the SurfaceType on the Right face of a part (-X direction)","description":"The RightParamB property is relevant when a part's `/BasePart/RightSurface` is set to Motor or SteppingMotor and `/BasePart/RightSurfaceInput` is set to Constant or Sin. For Constant, it determines the constant rotational velocity of the motor. For Sin, it determines the **frequency** of the motor's rotational velocity, using the following formula:\n\n`MotorVelocity = ParamB * math.sin(workspace.DistributedGameTime * ParamB)`\n\nIn no other cases is this property used.","code_sample":[{"title":"Motor Control","display_title":"Motor Control","code_summary":"This code sample demonstrates how surface properties can be set using only a NormalId (Top, Front, etc). It switches a motor's -SurfaceInput from NoInput, Constant and Sin to show how each work using -ParamA and -ParamB properties.","code_sample":"-- Paste this into a Script inside a part with a Motor SurfaceType\nlocal partMotor = script.Parent\n-- Place a brick called \"MovingPart\" so it is touching the Motor surface\nlocal partMoving = partMotor.Parent.MovingPart\n\n-- For this example, we use TopSurface, TopSurfaceInput, TopParamA and TopParamB\n-- However, this will work for all faces (NormalId): Top, Bottom, Left, Right, Front and Back\n\n-- A function to quickly set all surface properties at once \nlocal function setFaceSurfaceInputParams(normalId, surfaceType, inputType, paramA, paramB)\n\tlocal surfaceName = normalId.Name -- e.g. \"Top\", \"Bottom\", etc\n\n\t-- Syntax Note: in Lua, part.Something is the same as part[\"Something\"]\n\t-- The difference is that the latter allows us to use a string (\"Something\"), while\n\t-- the former requires use of an identifier (.Something). Below, we build of each the surface\n\t-- properties below by concatenating the surface name with the property postfix.\n\t\n\t-- Set \"___Surface\", eg \"TopSurface\"\n\tpartMotor[surfaceName .. \"Surface\"] = surfaceType\n\t-- Set \"___SurfaceInput\", eg \"TopSurfaceInput\"\n\tpartMotor[surfaceName .. \"SurfaceInput\"] = inputType\n\t-- Set \"___ParamA\", eg \"TopParamA\"\n\tpartMotor[surfaceName .. \"ParamA\"] = paramA\n\t-- Set \"___ParamB\", eg \"TopParamB\"\n\tpartMotor[surfaceName .. \"ParamB\"] = paramB\nend\n\nlocal normalId = Enum.NormalId.Top\n\nwhile true do\n\t-- Set to NoInput, where the motor will not operate at all\n\tsetFaceSurfaceInputParams(normalId, Enum.SurfaceType.Motor, Enum.InputType.NoInput, 0, 0)\n\twait(1)\n\t-- Set to Constant, where motor rotational velocity = paramB\n\tsetFaceSurfaceInputParams(normalId, Enum.SurfaceType.Motor, Enum.InputType.Constant, 0, .25)\n\twait(2)\n\t-- Set to Sin, where motor rotational velocity = paramA * math.sin(time * paramB)\n\t-- Since we're using pi (~3.14), the frequency of rotation is 1 second (per definition of sine function)\n\tsetFaceSurfaceInputParams(normalId, Enum.SurfaceType.Motor, Enum.InputType.Sin, .25, math.pi)\n\twait(3)\nend\n","validated_in_version":"0. 334. 0. 195932","comments_issues":"Kind of a stretch but these properties are hardly ever scripted -HG","tags":[],"locale":"en-us","uid":"bltbbd9219eabbed922","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:03:11.874Z","updated_at":"2018-06-26T18:10:03.578Z","url":"/code-sample/Motor-Control","_version":11,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"published_at":"2019-06-15T00:36:46.645Z"}],"serialization":{"can_save":true,"can_load":true},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"","api_property_url":"/api-reference/property/BasePart/RightParamB","roblox_api_tags":[],"studio_category":"Surface Inputs","script_editor_context":[],"wiki_text_reference":"{{API:Class/BasePart/BackParamA}}","uid":"blt96f9bdc7e5e6a162","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T12:09:26.090Z","updated_at":"2018-07-24T01:11:44.843Z","_version":9,"display_title":"RightParamB","api_dump_signature":"ea3a484fb1e2a1d5e5d96a26d79d64cb856ec7ca_v2","url":"/api-reference/property/BasePart/RightParamB","type_category":"Primitive","published_at":"2019-06-14T23:13:05.062Z"},{"title":"BasePart.RightSurface","type":"SurfaceType","locale":"en-us","tags":[],"summary":"Determines the type of surface for the Right face of a part (+X direction)","description":"The RightSurface property determines the type of surface used for the +X direction of a part. When two parts' faces are placed next to each other, they may create a joint between them depending on the SurfaceType used on the touching faces. If set to Motor, the `/BasePart/RightSurfaceInput` determines how a motor joint should behave.\n\nMost SurfaceTypes render a texture on the part face if the `/BasePart/Material` is set to Plastic. Some SurfaceTypes - Hinge, Motor and SteppingMotor - will render a 3D adornment instead. If this property is selected in the Properties window, it will be highlighted in the game world similar to that of a `/SurfaceSelection`.","code_sample":[{"title":"Show All SurfaceTypes","display_title":"Show All SurfaceTypes","code_summary":"This code sample shows what each SurfaceType looks like on a part. In addition, it creates a BillboardGui label on the part with a TextLabel that reflects the name of the current SurfaceType.","code_sample":"local part = script.Parent\n\n-- Create a billboard gui to display what the current surface type is\nlocal bbgui = Instance.new(\"BillboardGui\")\nbbgui.AlwaysOnTop = true\nbbgui.Size = UDim2.new(0, 200, 0, 50)\nbbgui.Adornee = part\nlocal tl = Instance.new(\"TextLabel\")\ntl.Size = UDim2.new(0, 200, 0, 50)\ntl.BackgroundTransparency = 1\ntl.TextStrokeTransparency = 0\ntl.TextColor3 = Color3.new(1, 1, 1) -- White\ntl.Parent = bbgui\nbbgui.Parent = part\n\nlocal function setAllSurfaces(part, surfaceType)\n\tpart.TopSurface = surfaceType\n\tpart.BottomSurface = surfaceType\n\tpart.LeftSurface = surfaceType\n\tpart.RightSurface = surfaceType\n\tpart.FrontSurface = surfaceType\n\tpart.BackSurface = surfaceType\nend\n\nwhile true do\n\t-- Iterate through the different SurfaceTypes\n\tfor _, enum in pairs(Enum.SurfaceType:GetEnumItems()) do\n\t\ttl.Text = enum.Name\n\t\tsetAllSurfaces(part, enum)\n\t\twait(1)\n\tend\nend\n","validated_in_version":"0. 334. 0. 195932","comments_issues":"","tags":[],"locale":"en-us","uid":"blt288c1014c8419a79","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:03:13.236Z","updated_at":"2018-06-26T18:10:04.245Z","url":"/code-sample/Show-All-SurfaceTypes","_version":10,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"published_at":"2019-06-15T00:36:44.422Z"}],"serialization":{"can_save":true,"can_load":true},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"","api_property_url":"/api-reference/property/BasePart/RightSurface","roblox_api_tags":[],"studio_category":"Surface","script_editor_context":[],"wiki_text_reference":"{{API:Class/BasePart/BackSurface}}","uid":"bltef04a456aa13fea5","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T12:09:56.383Z","updated_at":"2018-07-24T01:11:48.728Z","_version":9,"display_title":"RightSurface","api_dump_signature":"f16810cd488628d175b3f09665c9720297141631_v2","url":"/api-reference/property/BasePart/RightSurface","type_category":"Enum","published_at":"2019-06-14T23:13:02.338Z"},{"title":"BasePart.RightSurfaceInput","type":"InputType","locale":"en-us","tags":[],"summary":"Determines the kind of input for the Right face of a part (-X direction)","description":"The RightSurfaceInput property determines the kind of input provided to a part's `/BasePart/RightSurface`. This is only relevant for Motor or SteppingMotor SurfaceTypes. This property determines how `/BasePart/RightParamA` and `/BasePart/RightParamB` are used. For brevity, these properties will be referred to as ParamA and ParamB, respectively.\n\n  - By default, this is set to NoInput. This stops the motor altogether,\n  - For Constant, the motor rotates at a constant velocity equal to `ParamB`.\n  - For Sin, the motor rotates at a velocity equal to `ParamA * math.sin(workspace.DistributedGameTime * ParamB)`. See `/Workspace/DistributedGameTime`.","code_sample":[{"title":"Motor Control","display_title":"Motor Control","code_summary":"This code sample demonstrates how surface properties can be set using only a NormalId (Top, Front, etc). It switches a motor's -SurfaceInput from NoInput, Constant and Sin to show how each work using -ParamA and -ParamB properties.","code_sample":"-- Paste this into a Script inside a part with a Motor SurfaceType\nlocal partMotor = script.Parent\n-- Place a brick called \"MovingPart\" so it is touching the Motor surface\nlocal partMoving = partMotor.Parent.MovingPart\n\n-- For this example, we use TopSurface, TopSurfaceInput, TopParamA and TopParamB\n-- However, this will work for all faces (NormalId): Top, Bottom, Left, Right, Front and Back\n\n-- A function to quickly set all surface properties at once \nlocal function setFaceSurfaceInputParams(normalId, surfaceType, inputType, paramA, paramB)\n\tlocal surfaceName = normalId.Name -- e.g. \"Top\", \"Bottom\", etc\n\n\t-- Syntax Note: in Lua, part.Something is the same as part[\"Something\"]\n\t-- The difference is that the latter allows us to use a string (\"Something\"), while\n\t-- the former requires use of an identifier (.Something). Below, we build of each the surface\n\t-- properties below by concatenating the surface name with the property postfix.\n\t\n\t-- Set \"___Surface\", eg \"TopSurface\"\n\tpartMotor[surfaceName .. \"Surface\"] = surfaceType\n\t-- Set \"___SurfaceInput\", eg \"TopSurfaceInput\"\n\tpartMotor[surfaceName .. \"SurfaceInput\"] = inputType\n\t-- Set \"___ParamA\", eg \"TopParamA\"\n\tpartMotor[surfaceName .. \"ParamA\"] = paramA\n\t-- Set \"___ParamB\", eg \"TopParamB\"\n\tpartMotor[surfaceName .. \"ParamB\"] = paramB\nend\n\nlocal normalId = Enum.NormalId.Top\n\nwhile true do\n\t-- Set to NoInput, where the motor will not operate at all\n\tsetFaceSurfaceInputParams(normalId, Enum.SurfaceType.Motor, Enum.InputType.NoInput, 0, 0)\n\twait(1)\n\t-- Set to Constant, where motor rotational velocity = paramB\n\tsetFaceSurfaceInputParams(normalId, Enum.SurfaceType.Motor, Enum.InputType.Constant, 0, .25)\n\twait(2)\n\t-- Set to Sin, where motor rotational velocity = paramA * math.sin(time * paramB)\n\t-- Since we're using pi (~3.14), the frequency of rotation is 1 second (per definition of sine function)\n\tsetFaceSurfaceInputParams(normalId, Enum.SurfaceType.Motor, Enum.InputType.Sin, .25, math.pi)\n\twait(3)\nend\n","validated_in_version":"0. 334. 0. 195932","comments_issues":"Kind of a stretch but these properties are hardly ever scripted -HG","tags":[],"locale":"en-us","uid":"bltbbd9219eabbed922","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:03:11.874Z","updated_at":"2018-06-26T18:10:03.578Z","url":"/code-sample/Motor-Control","_version":11,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"published_at":"2019-06-15T00:36:46.645Z"}],"serialization":{"can_save":true,"can_load":true},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"","api_property_url":"/api-reference/property/BasePart/RightSurfaceInput","roblox_api_tags":[],"studio_category":"Surface Inputs","script_editor_context":[],"wiki_text_reference":"{{API:Class/BasePart/BackSurfaceInput}}","uid":"bltd8abf87eb605fa52","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T12:09:49.556Z","updated_at":"2018-07-24T01:11:52.063Z","_version":9,"display_title":"RightSurfaceInput","api_dump_signature":"702418f61d553c23e0f697b27e4d441a223270e3_v2","url":"/api-reference/property/BasePart/RightSurfaceInput","type_category":"Enum","published_at":"2019-06-14T23:13:00.306Z"},{"title":"BasePart.Rotation","type":"Vector3","locale":"en-us","tags":[],"summary":"The rotation of the part in degrees for the three axes.","description":"The rotation of the part in degrees for the three axes.","code_sample":[],"serialization":{"can_save":false,"can_load":true},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"","api_property_url":"/api-reference/property/BasePart/Rotation","roblox_api_tags":["NotReplicated"],"studio_category":"Data","script_editor_context":[],"wiki_text_reference":"{{APIMemberPage\n|MemberType=Property\n|Description=The rotation of the part in degrees for the three axes.\n}}","uid":"blt07e47bcf3d7a6945","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T12:19:40.944Z","updated_at":"2018-07-24T01:11:58.021Z","_version":10,"display_title":"Rotation","api_dump_signature":"e1636d28685bba9845ca04c4d2114f8d64772170_v2","url":"/api-reference/property/BasePart/Rotation","type_category":"DataType","published_at":"2019-06-14T23:12:58.212Z"},{"title":"BasePart.Size","type":"Vector3","locale":"en-us","tags":[],"summary":"Determines the dimensions of a part (length, width, height)","description":"The Size property determines the dimensions of a part. The individual dimensions can go as low as 0.05 and as high as 2048 (or 2^11). The size of the part is used in determining its mass, which is given by `/BasePart/GetMass`. The `/BasePart/Shape` of a part can apply some restrictions on Size - namely, a Ball must have the same 3 dimensions. A part's Size is used by a variety of other objects:\n\n  - `/ParticleEmitter` uses Size to determine the area from which particles are spawned.\n  - `/BlockMesh` uses Size to partially determine the rendered rectangular prism.\n  - `/SpecialMesh` uses Size for some certain `/SpecialMesh/MeshType`s to determine the size of the rendered mesh.\n  - `/SurfaceLight` uses Size to determine the space to illuminate.","code_sample":[{"title":"Pyramid Builder","display_title":"Pyramid Builder","code_summary":"This code sample constructs a pyramid by stacking parts that get progressively smaller. It also colors the parts so they blend between a start color and end color.","code_sample":"-- Configuration of the tower\nlocal pos = Vector3.new(50, 50, 50)\nlocal towerBaseSize = 30\n\n-- Decide on two colors that are different in hue\nlocal hue = math.random()\nlocal color0 = Color3.fromHSV(hue, 1, 1)\nlocal color1 = Color3.fromHSV((hue + .35) % 1, 1, 1)\n\n-- Create a model to hold tower parts\nlocal model = Instance.new(\"Model\")\nmodel.Name = \"Tower\"\nfor i = towerBaseSize, 1, -2 do\n\t-- Create a part\n\tlocal part = Instance.new(\"Part\")\n\tpart.Parent = model\n\tpart.Size = Vector3.new(i, 2, i)\n\tpart.Position = pos\n\tpart.Anchored = true\n\t-- Tween from color0 and color1\n\tlocal perc = i / towerBaseSize \n\tpart.Color = Color3.new(\n\t\tcolor0.r * perc + color1.r * (1 - perc),\n\t\tcolor0.g * perc + color1.g * (1 - perc),\n\t\tcolor0.b * perc + color1.b * (1 - perc)\n\t)\n\t-- Move up\n\tpos = pos + Vector3.new(0, part.Size.Y, 0)\nend\nmodel.Parent = workspace\n","validated_in_version":"0. 334. 0. 195932","comments_issues":"","tags":[],"locale":"en-us","uid":"blt21f4a90e7b651b25","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:03:09.128Z","updated_at":"2018-06-26T18:10:12.269Z","url":"/code-sample/Pyramid-Builder","_version":10,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"published_at":"2019-06-15T00:36:26.342Z"}],"serialization":{"can_save":false,"can_load":true},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"","api_property_url":"/api-reference/property/BasePart/Size","roblox_api_tags":["NotReplicated"],"studio_category":"Part ","script_editor_context":[],"wiki_text_reference":"{{APIMemberPage\n|ClassName=BasePart\n|MemberType=Property\n|Description=Sets the size of the object in studs.\n}}","uid":"blta4820ef793aacc00","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T12:09:16.683Z","updated_at":"2018-07-24T01:12:00.865Z","_version":9,"display_title":"Size","api_dump_signature":"d4bb1583e94125f4d36e66fd66f03015adf8e227_v2","url":"/api-reference/property/BasePart/Size","type_category":"DataType","published_at":"2019-06-14T23:12:56.125Z"},{"title":"BasePart.TopParamA","type":"float","locale":"en-us","tags":[],"summary":"Determines the first parameter for the SurfaceType on the Top face of a part (+Y direction)","description":"The TopParamA property is relevant when a part's `/BasePart/TopSurface` is set to Motor or SteppingMotor and `/BasePart/TopSurfaceInput` is set to Sin. It determines the **amplitude** of the motor's rotational velocity, using the following formula:\n\n`MotorVelocity = ParamA * math.sin(workspace.DistributedGameTime * ParamB)`\n\nIn no other cases is this property used.","code_sample":[{"title":"Motor Control","display_title":"Motor Control","code_summary":"This code sample demonstrates how surface properties can be set using only a NormalId (Top, Front, etc). It switches a motor's -SurfaceInput from NoInput, Constant and Sin to show how each work using -ParamA and -ParamB properties.","code_sample":"-- Paste this into a Script inside a part with a Motor SurfaceType\nlocal partMotor = script.Parent\n-- Place a brick called \"MovingPart\" so it is touching the Motor surface\nlocal partMoving = partMotor.Parent.MovingPart\n\n-- For this example, we use TopSurface, TopSurfaceInput, TopParamA and TopParamB\n-- However, this will work for all faces (NormalId): Top, Bottom, Left, Right, Front and Back\n\n-- A function to quickly set all surface properties at once \nlocal function setFaceSurfaceInputParams(normalId, surfaceType, inputType, paramA, paramB)\n\tlocal surfaceName = normalId.Name -- e.g. \"Top\", \"Bottom\", etc\n\n\t-- Syntax Note: in Lua, part.Something is the same as part[\"Something\"]\n\t-- The difference is that the latter allows us to use a string (\"Something\"), while\n\t-- the former requires use of an identifier (.Something). Below, we build of each the surface\n\t-- properties below by concatenating the surface name with the property postfix.\n\t\n\t-- Set \"___Surface\", eg \"TopSurface\"\n\tpartMotor[surfaceName .. \"Surface\"] = surfaceType\n\t-- Set \"___SurfaceInput\", eg \"TopSurfaceInput\"\n\tpartMotor[surfaceName .. \"SurfaceInput\"] = inputType\n\t-- Set \"___ParamA\", eg \"TopParamA\"\n\tpartMotor[surfaceName .. \"ParamA\"] = paramA\n\t-- Set \"___ParamB\", eg \"TopParamB\"\n\tpartMotor[surfaceName .. \"ParamB\"] = paramB\nend\n\nlocal normalId = Enum.NormalId.Top\n\nwhile true do\n\t-- Set to NoInput, where the motor will not operate at all\n\tsetFaceSurfaceInputParams(normalId, Enum.SurfaceType.Motor, Enum.InputType.NoInput, 0, 0)\n\twait(1)\n\t-- Set to Constant, where motor rotational velocity = paramB\n\tsetFaceSurfaceInputParams(normalId, Enum.SurfaceType.Motor, Enum.InputType.Constant, 0, .25)\n\twait(2)\n\t-- Set to Sin, where motor rotational velocity = paramA * math.sin(time * paramB)\n\t-- Since we're using pi (~3.14), the frequency of rotation is 1 second (per definition of sine function)\n\tsetFaceSurfaceInputParams(normalId, Enum.SurfaceType.Motor, Enum.InputType.Sin, .25, math.pi)\n\twait(3)\nend\n","validated_in_version":"0. 334. 0. 195932","comments_issues":"Kind of a stretch but these properties are hardly ever scripted -HG","tags":[],"locale":"en-us","uid":"bltbbd9219eabbed922","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:03:11.874Z","updated_at":"2018-06-26T18:10:03.578Z","url":"/code-sample/Motor-Control","_version":11,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"published_at":"2019-06-15T00:36:46.645Z"}],"serialization":{"can_save":true,"can_load":true},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"","api_property_url":"/api-reference/property/BasePart/TopParamA","roblox_api_tags":[],"studio_category":"Surface Inputs","script_editor_context":[],"wiki_text_reference":"{{API:Class/BasePart/BackParamA}}","uid":"blt5c3fac179076b857","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T12:09:34.860Z","updated_at":"2018-07-24T01:12:06.284Z","_version":9,"display_title":"TopParamA","api_dump_signature":"2551ac3f89a955a61f80288d8976e46300d81905_v2","url":"/api-reference/property/BasePart/TopParamA","type_category":"Primitive","published_at":"2019-06-14T23:12:53.973Z"},{"title":"BasePart.TopParamB","type":"float","locale":"en-us","tags":[],"summary":"Determines the second parameter for the SurfaceType on the Top face of a part (+Y direction)","description":"The TopParamB property is relevant when a part's `/BasePart/TopSurface` is set to Motor or SteppingMotor and `/BasePart/TopSurfaceInput` is set to Constant or Sin. For Constant, it determines the constant rotational velocity of the motor. For Sin, it determines the **frequency** of the motor's rotational velocity, using the following formula:\n\n`MotorVelocity = ParamB * math.sin(workspace.DistributedGameTime * ParamB)`\n\nIn no other cases is this property used.","code_sample":[{"title":"Motor Control","display_title":"Motor Control","code_summary":"This code sample demonstrates how surface properties can be set using only a NormalId (Top, Front, etc). It switches a motor's -SurfaceInput from NoInput, Constant and Sin to show how each work using -ParamA and -ParamB properties.","code_sample":"-- Paste this into a Script inside a part with a Motor SurfaceType\nlocal partMotor = script.Parent\n-- Place a brick called \"MovingPart\" so it is touching the Motor surface\nlocal partMoving = partMotor.Parent.MovingPart\n\n-- For this example, we use TopSurface, TopSurfaceInput, TopParamA and TopParamB\n-- However, this will work for all faces (NormalId): Top, Bottom, Left, Right, Front and Back\n\n-- A function to quickly set all surface properties at once \nlocal function setFaceSurfaceInputParams(normalId, surfaceType, inputType, paramA, paramB)\n\tlocal surfaceName = normalId.Name -- e.g. \"Top\", \"Bottom\", etc\n\n\t-- Syntax Note: in Lua, part.Something is the same as part[\"Something\"]\n\t-- The difference is that the latter allows us to use a string (\"Something\"), while\n\t-- the former requires use of an identifier (.Something). Below, we build of each the surface\n\t-- properties below by concatenating the surface name with the property postfix.\n\t\n\t-- Set \"___Surface\", eg \"TopSurface\"\n\tpartMotor[surfaceName .. \"Surface\"] = surfaceType\n\t-- Set \"___SurfaceInput\", eg \"TopSurfaceInput\"\n\tpartMotor[surfaceName .. \"SurfaceInput\"] = inputType\n\t-- Set \"___ParamA\", eg \"TopParamA\"\n\tpartMotor[surfaceName .. \"ParamA\"] = paramA\n\t-- Set \"___ParamB\", eg \"TopParamB\"\n\tpartMotor[surfaceName .. \"ParamB\"] = paramB\nend\n\nlocal normalId = Enum.NormalId.Top\n\nwhile true do\n\t-- Set to NoInput, where the motor will not operate at all\n\tsetFaceSurfaceInputParams(normalId, Enum.SurfaceType.Motor, Enum.InputType.NoInput, 0, 0)\n\twait(1)\n\t-- Set to Constant, where motor rotational velocity = paramB\n\tsetFaceSurfaceInputParams(normalId, Enum.SurfaceType.Motor, Enum.InputType.Constant, 0, .25)\n\twait(2)\n\t-- Set to Sin, where motor rotational velocity = paramA * math.sin(time * paramB)\n\t-- Since we're using pi (~3.14), the frequency of rotation is 1 second (per definition of sine function)\n\tsetFaceSurfaceInputParams(normalId, Enum.SurfaceType.Motor, Enum.InputType.Sin, .25, math.pi)\n\twait(3)\nend\n","validated_in_version":"0. 334. 0. 195932","comments_issues":"Kind of a stretch but these properties are hardly ever scripted -HG","tags":[],"locale":"en-us","uid":"bltbbd9219eabbed922","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:03:11.874Z","updated_at":"2018-06-26T18:10:03.578Z","url":"/code-sample/Motor-Control","_version":11,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"published_at":"2019-06-15T00:36:46.645Z"}],"serialization":{"can_save":true,"can_load":true},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"","api_property_url":"/api-reference/property/BasePart/TopParamB","roblox_api_tags":[],"studio_category":"Surface Inputs","script_editor_context":[],"wiki_text_reference":"{{API:Class/BasePart/BackParamA}}","uid":"blt581811157ea5e51d","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T12:09:24.770Z","updated_at":"2018-07-24T01:12:09.017Z","_version":9,"display_title":"TopParamB","api_dump_signature":"4075b588a068850a84e72b555719e0af3c358a7e_v2","url":"/api-reference/property/BasePart/TopParamB","type_category":"Primitive","published_at":"2019-06-14T23:12:51.903Z"},{"title":"BasePart.TopSurface","type":"SurfaceType","locale":"en-us","tags":[],"summary":"Determines the type of surface for the Top face of a part (+Y direction)","description":"The TopSurface property determines the type of surface used for the +Y direction of a part. When two parts' faces are placed next to each other, they may create a joint between them depending on the SurfaceType used on the touching faces. If set to Motor, the `/BasePart/TopSurfaceInput` determines how a motor joint should behave.\n\nMost SurfaceTypes render a texture on the part face if the `/BasePart/Material` is set to Plastic. Some SurfaceTypes - Hinge, Motor and SteppingMotor - will render a 3D adornment instead. If this property is selected in the Properties window, it will be highlighted in the game world similar to that of a `/SurfaceSelection`.","code_sample":[{"title":"Show All SurfaceTypes","display_title":"Show All SurfaceTypes","code_summary":"This code sample shows what each SurfaceType looks like on a part. In addition, it creates a BillboardGui label on the part with a TextLabel that reflects the name of the current SurfaceType.","code_sample":"local part = script.Parent\n\n-- Create a billboard gui to display what the current surface type is\nlocal bbgui = Instance.new(\"BillboardGui\")\nbbgui.AlwaysOnTop = true\nbbgui.Size = UDim2.new(0, 200, 0, 50)\nbbgui.Adornee = part\nlocal tl = Instance.new(\"TextLabel\")\ntl.Size = UDim2.new(0, 200, 0, 50)\ntl.BackgroundTransparency = 1\ntl.TextStrokeTransparency = 0\ntl.TextColor3 = Color3.new(1, 1, 1) -- White\ntl.Parent = bbgui\nbbgui.Parent = part\n\nlocal function setAllSurfaces(part, surfaceType)\n\tpart.TopSurface = surfaceType\n\tpart.BottomSurface = surfaceType\n\tpart.LeftSurface = surfaceType\n\tpart.RightSurface = surfaceType\n\tpart.FrontSurface = surfaceType\n\tpart.BackSurface = surfaceType\nend\n\nwhile true do\n\t-- Iterate through the different SurfaceTypes\n\tfor _, enum in pairs(Enum.SurfaceType:GetEnumItems()) do\n\t\ttl.Text = enum.Name\n\t\tsetAllSurfaces(part, enum)\n\t\twait(1)\n\tend\nend\n","validated_in_version":"0. 334. 0. 195932","comments_issues":"","tags":[],"locale":"en-us","uid":"blt288c1014c8419a79","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:03:13.236Z","updated_at":"2018-06-26T18:10:04.245Z","url":"/code-sample/Show-All-SurfaceTypes","_version":10,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"published_at":"2019-06-15T00:36:44.422Z"}],"serialization":{"can_save":true,"can_load":true},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"","api_property_url":"/api-reference/property/BasePart/TopSurface","roblox_api_tags":[],"studio_category":"Surface","script_editor_context":[],"wiki_text_reference":"{{API:Class/BasePart/BackSurface}}","uid":"blt75554ba5a6a9a8be","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T12:09:55.006Z","updated_at":"2018-07-24T01:12:11.599Z","_version":9,"display_title":"TopSurface","api_dump_signature":"7bca3297099971c27ad878738eb778f38608dfa8_v2","url":"/api-reference/property/BasePart/TopSurface","type_category":"Enum","published_at":"2019-06-14T23:12:49.832Z"},{"title":"BasePart.TopSurfaceInput","type":"InputType","locale":"en-us","tags":[],"summary":"Determines the kind of input for the Top face of a part (+Y direction)","description":"The TopSurfaceInput property determines the kind of input provided to a part's `/BasePart/TopSurface`. This is only relevant for Motor or SteppingMotor SurfaceTypes. This property determines how `/BasePart/TopParamA` and `/BasePart/TopParamB` are used. For brevity, these properties will be referred to as ParamA and ParamB, respectively.\n\n  - By default, this is set to NoInput. This stops the motor altogether,\n  - For Constant, the motor rotates at a constant velocity equal to `ParamB`.\n  - For Sin, the motor rotates at a velocity equal to `ParamA * math.sin(workspace.DistributedGameTime * ParamB)`. See `/Workspace/DistributedGameTime`.","code_sample":[{"title":"Motor Control","display_title":"Motor Control","code_summary":"This code sample demonstrates how surface properties can be set using only a NormalId (Top, Front, etc). It switches a motor's -SurfaceInput from NoInput, Constant and Sin to show how each work using -ParamA and -ParamB properties.","code_sample":"-- Paste this into a Script inside a part with a Motor SurfaceType\nlocal partMotor = script.Parent\n-- Place a brick called \"MovingPart\" so it is touching the Motor surface\nlocal partMoving = partMotor.Parent.MovingPart\n\n-- For this example, we use TopSurface, TopSurfaceInput, TopParamA and TopParamB\n-- However, this will work for all faces (NormalId): Top, Bottom, Left, Right, Front and Back\n\n-- A function to quickly set all surface properties at once \nlocal function setFaceSurfaceInputParams(normalId, surfaceType, inputType, paramA, paramB)\n\tlocal surfaceName = normalId.Name -- e.g. \"Top\", \"Bottom\", etc\n\n\t-- Syntax Note: in Lua, part.Something is the same as part[\"Something\"]\n\t-- The difference is that the latter allows us to use a string (\"Something\"), while\n\t-- the former requires use of an identifier (.Something). Below, we build of each the surface\n\t-- properties below by concatenating the surface name with the property postfix.\n\t\n\t-- Set \"___Surface\", eg \"TopSurface\"\n\tpartMotor[surfaceName .. \"Surface\"] = surfaceType\n\t-- Set \"___SurfaceInput\", eg \"TopSurfaceInput\"\n\tpartMotor[surfaceName .. \"SurfaceInput\"] = inputType\n\t-- Set \"___ParamA\", eg \"TopParamA\"\n\tpartMotor[surfaceName .. \"ParamA\"] = paramA\n\t-- Set \"___ParamB\", eg \"TopParamB\"\n\tpartMotor[surfaceName .. \"ParamB\"] = paramB\nend\n\nlocal normalId = Enum.NormalId.Top\n\nwhile true do\n\t-- Set to NoInput, where the motor will not operate at all\n\tsetFaceSurfaceInputParams(normalId, Enum.SurfaceType.Motor, Enum.InputType.NoInput, 0, 0)\n\twait(1)\n\t-- Set to Constant, where motor rotational velocity = paramB\n\tsetFaceSurfaceInputParams(normalId, Enum.SurfaceType.Motor, Enum.InputType.Constant, 0, .25)\n\twait(2)\n\t-- Set to Sin, where motor rotational velocity = paramA * math.sin(time * paramB)\n\t-- Since we're using pi (~3.14), the frequency of rotation is 1 second (per definition of sine function)\n\tsetFaceSurfaceInputParams(normalId, Enum.SurfaceType.Motor, Enum.InputType.Sin, .25, math.pi)\n\twait(3)\nend\n","validated_in_version":"0. 334. 0. 195932","comments_issues":"Kind of a stretch but these properties are hardly ever scripted -HG","tags":[],"locale":"en-us","uid":"bltbbd9219eabbed922","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:03:11.874Z","updated_at":"2018-06-26T18:10:03.578Z","url":"/code-sample/Motor-Control","_version":11,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"published_at":"2019-06-15T00:36:46.645Z"}],"serialization":{"can_save":true,"can_load":true},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"","api_property_url":"/api-reference/property/BasePart/TopSurfaceInput","roblox_api_tags":[],"studio_category":"Surface Inputs","script_editor_context":[],"wiki_text_reference":"{{API:Class/BasePart/BackSurfaceInput}}","uid":"blt670affbeee620f7f","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T12:09:50.918Z","updated_at":"2018-07-24T01:12:14.417Z","_version":9,"display_title":"TopSurfaceInput","api_dump_signature":"cfcb02ba717b39352e2bbd6ea038cfe586851ad4_v2","url":"/api-reference/property/BasePart/TopSurfaceInput","type_category":"Enum","published_at":"2019-06-14T23:12:47.654Z"},{"title":"BasePart.Velocity","type":"Vector3","locale":"en-us","tags":[],"summary":"Determines a part's change in position over time","description":"The Velocity of a part describes how its `/BasePart/Position` is presently changing. The unit of this property is **studs per second**. For reference, the default Roblox character moves at 16 studs per second via `/Humanoid/WalkSpeed`. The acceleration due to gravity is found in `/Workspace/Gravity` (by default, -196.2 studs per second).\n\nSetting the Velocity of an part that is `/BasePart/Anchored` will cause it to act like a conveyor belt. Any object that touches the part will begin to move in accordance with the Velocity.\n\nSome `/BodyMover` objects will apply forces and thus change the Velocity of a part over time. The simplest of these is a `/BodyForce` which can be used to counteract the acceleration due to gravity on a single part (set the +Y axis of the `/BodyForce/Force` to the product of the mass (`/BasePart/GetMass`) and the gravity constant).","code_sample":[{"title":"Projectile Firing","display_title":"Projectile Firing","code_summary":"This code sample fires a part from one position toward another. It calculates the velocity needed to reach the destination in time, and applies an anti-gravity effect using a BodyForce. In addition, it adds a Trail to better visualize the path of the projectile as it arcs through the air.","code_sample":"-- Put this Script in a Part, preferably bullet-shaped :)\nlocal part = script.Parent\npart.Shape = Enum.PartType.Ball\npart.Size = Vector3.new(2, 2, 2)\npart.BrickColor = BrickColor.new(\"Really black\")\npart.CanCollide = false\n\n-- Settings for the projectile's path!\nlocal startPoint = Vector3.new(0, 50, 0)\nlocal targetPoint = Vector3.new(50, 100, 0)\nlocal travelTime = 1\nlocal antiGravity = .5\n\n-- Anti-gravity effect: add a BodyForce to counter gravity\nlocal bf = Instance.new(\"BodyForce\")\nbf.Force = Vector3.new(0, workspace.Gravity * part:GetMass() * antiGravity, 0)\nbf.Parent = part\n\n-- Add a trail to two attachments\nlocal a0 = Instance.new(\"Attachment\", part)\na0.Position = Vector3.new(1, 0, 0)\nlocal a1 = Instance.new(\"Attachment\", part)\na1.Position = Vector3.new(-1, 0, 0)\nlocal trail = Instance.new(\"Trail\", part)\ntrail.Attachment0 = a0\ntrail.Attachment1 = a1\ntrail.FaceCamera = true\ntrail.Transparency = NumberSequence.new({\n\tNumberSequenceKeypoint.new(0, 0),\n\tNumberSequenceKeypoint.new(1, 1)\n})\ntrail.Lifetime = .35\n\nlocal function fire(startPoint, targetPoint)\t\n\t-- Calculate how far we have to travel\n\tlocal distance = (targetPoint - startPoint).magnitude\n\t-- Since speed = displacement / time, our speed is:\n\tlocal speed = distance / travelTime\n\t-- Position our part at the start, pointing to the target\n\tpart.CFrame = CFrame.new(startPoint, targetPoint)\n\t-- Shoot the part\n\tpart.Velocity = part.CFrame.lookVector * speed\nend\n\n-- Repeatedly fire the projectile\nwhile true do\n\tfire(startPoint, targetPoint)\n\twait(travelTime)\nend","validated_in_version":"0. 334. 0. 195932","comments_issues":"Little bit complicated, really cool demo though. Variety of things going on here. -HG","tags":[],"locale":"en-us","uid":"blt7a61ba94f2b9a5fa","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:03:14.607Z","updated_at":"2018-06-26T18:10:13.127Z","url":"/code-sample/Projectile-Firing","_version":10,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"published_at":"2019-06-15T00:36:24.052Z"}],"serialization":{"can_save":true,"can_load":true},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"","api_property_url":"/api-reference/property/BasePart/Velocity","roblox_api_tags":[],"studio_category":"Data","script_editor_context":[],"wiki_text_reference":"{{APIMemberPage\n|ClassName=BasePart\n|MemberType=Property\n|Description=The speed and movement direction of the object.\n}}","uid":"blt17981cdf7f8e18f4","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T12:10:04.528Z","updated_at":"2018-07-24T01:12:19.905Z","_version":9,"display_title":"Velocity","api_dump_signature":"47bb96fdbd1430070739f8db7a81d9ce03b9e420_v2","url":"/api-reference/property/BasePart/Velocity","type_category":"DataType","published_at":"2019-06-14T23:12:45.483Z"},{"title":"BasePart.BackParamA","type":"float","locale":"en-us","tags":[],"summary":"Determines the first parameter for the SurfaceType on the Back face of a part (-Z direction)","description":"The BackParamA property is relevant when a part's `/BasePart/BackSurface` is set to Motor or SteppingMotor and `/BasePart/BackSurfaceInput` is set to Sin. It determines the **amplitude** of the motor's rotational velocity, using the following formula:\n\n`MotorVelocity = ParamA * math.sin(workspace.DistributedGameTime * ParamB)`\n\nThere are no other usages for this property.","code_sample":[{"title":"Motor Control","display_title":"Motor Control","code_summary":"This code sample demonstrates how surface properties can be set using only a NormalId (Top, Front, etc). It switches a motor's -SurfaceInput from NoInput, Constant and Sin to show how each work using -ParamA and -ParamB properties.","code_sample":"-- Paste this into a Script inside a part with a Motor SurfaceType\nlocal partMotor = script.Parent\n-- Place a brick called \"MovingPart\" so it is touching the Motor surface\nlocal partMoving = partMotor.Parent.MovingPart\n\n-- For this example, we use TopSurface, TopSurfaceInput, TopParamA and TopParamB\n-- However, this will work for all faces (NormalId): Top, Bottom, Left, Right, Front and Back\n\n-- A function to quickly set all surface properties at once \nlocal function setFaceSurfaceInputParams(normalId, surfaceType, inputType, paramA, paramB)\n\tlocal surfaceName = normalId.Name -- e.g. \"Top\", \"Bottom\", etc\n\n\t-- Syntax Note: in Lua, part.Something is the same as part[\"Something\"]\n\t-- The difference is that the latter allows us to use a string (\"Something\"), while\n\t-- the former requires use of an identifier (.Something). Below, we build of each the surface\n\t-- properties below by concatenating the surface name with the property postfix.\n\t\n\t-- Set \"___Surface\", eg \"TopSurface\"\n\tpartMotor[surfaceName .. \"Surface\"] = surfaceType\n\t-- Set \"___SurfaceInput\", eg \"TopSurfaceInput\"\n\tpartMotor[surfaceName .. \"SurfaceInput\"] = inputType\n\t-- Set \"___ParamA\", eg \"TopParamA\"\n\tpartMotor[surfaceName .. \"ParamA\"] = paramA\n\t-- Set \"___ParamB\", eg \"TopParamB\"\n\tpartMotor[surfaceName .. \"ParamB\"] = paramB\nend\n\nlocal normalId = Enum.NormalId.Top\n\nwhile true do\n\t-- Set to NoInput, where the motor will not operate at all\n\tsetFaceSurfaceInputParams(normalId, Enum.SurfaceType.Motor, Enum.InputType.NoInput, 0, 0)\n\twait(1)\n\t-- Set to Constant, where motor rotational velocity = paramB\n\tsetFaceSurfaceInputParams(normalId, Enum.SurfaceType.Motor, Enum.InputType.Constant, 0, .25)\n\twait(2)\n\t-- Set to Sin, where motor rotational velocity = paramA * math.sin(time * paramB)\n\t-- Since we're using pi (~3.14), the frequency of rotation is 1 second (per definition of sine function)\n\tsetFaceSurfaceInputParams(normalId, Enum.SurfaceType.Motor, Enum.InputType.Sin, .25, math.pi)\n\twait(3)\nend\n","validated_in_version":"0. 334. 0. 195932","comments_issues":"Kind of a stretch but these properties are hardly ever scripted -HG","tags":[],"locale":"en-us","uid":"bltbbd9219eabbed922","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:03:11.874Z","updated_at":"2018-06-26T18:10:03.578Z","url":"/code-sample/Motor-Control","_version":11,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"published_at":"2019-06-15T00:36:46.645Z"}],"serialization":{"can_save":true,"can_load":true},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"","api_property_url":"/api-reference/property/BasePart/BackParamA","roblox_api_tags":[],"studio_category":"Surface Inputs","script_editor_context":[],"wiki_text_reference":"{{APIMemberPage\n|MemberType=Property\n|Description=This determines the rotational speed of a Motor/Hinge joint using InputType [[API:Enum/InputType|Sin]]. See [[Joints]] for more information.\n|DescriptionShort=Rotational speed of a Motor/Hinge joint using InputType [[API:Enum/InputType|Sin]]\n}}","uid":"blta8ab8abdf73f42ca","created_by":"blt056181872171cff69cfbc0c3","updated_by":"bltb3147545f90dee1b","created_at":"2018-06-05T12:09:41.501Z","updated_at":"2018-08-07T23:19:59.564Z","_version":9,"display_title":"BackParamA","api_dump_signature":"e49064de9656fc2c489fd1614e16f7bb0835aa41_v2","url":"/api-reference/property/BasePart/BackParamA","type_category":"Primitive","published_at":"2019-06-14T22:55:46.966Z"},{"title":"BasePart.BottomParamA","type":"float","locale":"en-us","tags":[],"summary":"Determines the first parameter for the SurfaceType on the Bottom face of a part (-Y direction)","description":"The BottomParamA property is relevant when a part's `/BasePart/BottomSurface` is set to Motor or SteppingMotor and `/BasePart/BottomSurfaceInput` is set to Sin. It determines the **amplitude** of the motor's rotational velocity, using the following formula:\n\n`MotorVelocity = ParamA * math.sin(workspace.DistributedGameTime * ParamB)`\n\nThere are no other usages for this property.","code_sample":[{"title":"Motor Control","display_title":"Motor Control","code_summary":"This code sample demonstrates how surface properties can be set using only a NormalId (Top, Front, etc). It switches a motor's -SurfaceInput from NoInput, Constant and Sin to show how each work using -ParamA and -ParamB properties.","code_sample":"-- Paste this into a Script inside a part with a Motor SurfaceType\nlocal partMotor = script.Parent\n-- Place a brick called \"MovingPart\" so it is touching the Motor surface\nlocal partMoving = partMotor.Parent.MovingPart\n\n-- For this example, we use TopSurface, TopSurfaceInput, TopParamA and TopParamB\n-- However, this will work for all faces (NormalId): Top, Bottom, Left, Right, Front and Back\n\n-- A function to quickly set all surface properties at once \nlocal function setFaceSurfaceInputParams(normalId, surfaceType, inputType, paramA, paramB)\n\tlocal surfaceName = normalId.Name -- e.g. \"Top\", \"Bottom\", etc\n\n\t-- Syntax Note: in Lua, part.Something is the same as part[\"Something\"]\n\t-- The difference is that the latter allows us to use a string (\"Something\"), while\n\t-- the former requires use of an identifier (.Something). Below, we build of each the surface\n\t-- properties below by concatenating the surface name with the property postfix.\n\t\n\t-- Set \"___Surface\", eg \"TopSurface\"\n\tpartMotor[surfaceName .. \"Surface\"] = surfaceType\n\t-- Set \"___SurfaceInput\", eg \"TopSurfaceInput\"\n\tpartMotor[surfaceName .. \"SurfaceInput\"] = inputType\n\t-- Set \"___ParamA\", eg \"TopParamA\"\n\tpartMotor[surfaceName .. \"ParamA\"] = paramA\n\t-- Set \"___ParamB\", eg \"TopParamB\"\n\tpartMotor[surfaceName .. \"ParamB\"] = paramB\nend\n\nlocal normalId = Enum.NormalId.Top\n\nwhile true do\n\t-- Set to NoInput, where the motor will not operate at all\n\tsetFaceSurfaceInputParams(normalId, Enum.SurfaceType.Motor, Enum.InputType.NoInput, 0, 0)\n\twait(1)\n\t-- Set to Constant, where motor rotational velocity = paramB\n\tsetFaceSurfaceInputParams(normalId, Enum.SurfaceType.Motor, Enum.InputType.Constant, 0, .25)\n\twait(2)\n\t-- Set to Sin, where motor rotational velocity = paramA * math.sin(time * paramB)\n\t-- Since we're using pi (~3.14), the frequency of rotation is 1 second (per definition of sine function)\n\tsetFaceSurfaceInputParams(normalId, Enum.SurfaceType.Motor, Enum.InputType.Sin, .25, math.pi)\n\twait(3)\nend\n","validated_in_version":"0. 334. 0. 195932","comments_issues":"Kind of a stretch but these properties are hardly ever scripted -HG","tags":[],"locale":"en-us","uid":"bltbbd9219eabbed922","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:03:11.874Z","updated_at":"2018-06-26T18:10:03.578Z","url":"/code-sample/Motor-Control","_version":11,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"published_at":"2019-06-15T00:36:46.645Z"}],"serialization":{"can_save":true,"can_load":true},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"","api_property_url":"/api-reference/property/BasePart/BottomParamA","roblox_api_tags":[],"studio_category":"Surface Inputs","script_editor_context":[],"wiki_text_reference":"{{API:Class/BasePart/BackParamA}}","uid":"bltab10e968396f0cd5","created_by":"blt056181872171cff69cfbc0c3","updated_by":"bltb3147545f90dee1b","created_at":"2018-06-05T12:09:33.481Z","updated_at":"2018-08-07T23:20:06.104Z","_version":9,"display_title":"BottomParamA","api_dump_signature":"31769522b978851ce7676dee67749cdcda667aa8_v2","url":"/api-reference/property/BasePart/BottomParamA","type_category":"Primitive","published_at":"2019-06-14T22:55:44.830Z"},{"title":"BasePart.CenterOfMass","type":"Vector3","locale":"en-us","tags":["disabled"],"summary":"Describes the world position in which a part's center of mass is located.","description":"The CenterOfMass property describes the position in which a `BasePart|part`'s [center of mass][1] is located. Should a force be applied to the part toward this point, the part would not rotate as a result of this force. **CenterOfMass is currently not enabled.**\n\n  [1]: https://en.wikipedia.org/wiki/Center_of_mass","code_sample":[],"serialization":{"can_save":false,"can_load":false},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"","api_property_url":"/api-reference/property/BasePart/CenterOfMass","roblox_api_tags":["ReadOnly","NotReplicated"],"studio_category":"Data","script_editor_context":[],"wiki_text_reference":"{{Disabled|FFlag=PartInstanceCofMPropertyExposed}}\n{{APIMemberPage\n|Description=Describes the position where the part's mass is concentrated.\n}}","uid":"blt54adbe1343bf08c7","created_by":"blt056181872171cff69cfbc0c3","updated_by":"bltb3147545f90dee1b","created_at":"2018-06-05T12:10:21.257Z","updated_at":"2018-08-07T23:22:14.561Z","_version":9,"display_title":"CenterOfMass","api_dump_signature":"ed525cdc682bf141c1fdebdaa223421b6cbb4508_v2","url":"/api-reference/property/BasePart/CenterOfMass","type_category":"DataType","published_at":"2019-06-14T22:55:42.729Z"},{"title":"BasePart.CollisionGroupId","type":"int","locale":"en-us","tags":[],"summary":"Describes the automatically-set ID number of a part's collision group","description":"The CollisionGroupId property describes the ID number of the part's collision group. Parts start off in the Default group whose ID is 0. Although this property can be directly changed, it is recommended to instead manipulate the collision group of a part using the **name** of the group with the `/PhysicsService/SetPartCollisionGroup` function. You can find the ID of a collision group by using `/PhysicsService/GetCollisionGroupId`.\n\nThis value cannot be negative, and cannot exceed `/PhysicsService/GetMaxCollisionGroups`. Invalid IDs are clamped.","code_sample":[{"title":"How to Use Collision Groups","display_title":"PhysicsService:GetCollisionGroupId1","code_summary":"This example demonstrates one basic use of collision groups. \n\nThe code below attempts to get a group named \"Test\", and creates a group this group if it does not already exist. Then, it sets a `BasePart|part` named *Part1*'s collision group to \"Test\". \n\nIf this group is the first collision group you've made in your game, it's *Id* will be 1. \n\nParts in the same collision group will interact with other collision groups and with each other a predetermined way. Collision groups can be collidable or not collidable - as set by `PhysicsService/CollisionGroupSetCollidable` and checked by `PhysicsService/CollisionGroupsAreCollidable`.","code_sample":"local physicsService = game:GetService(\"PhysicsService\")\n\n-- returns a valid group id (int) or nil\nfunction getGroupId(name)\n\t-- GetCollisionGroupId will throw if it does not exist\n\tlocal ok, groupId = pcall(physicsService.GetCollisionGroupId, physicsService, name)\n\treturn ok and groupId or nil\nend\n\n-- returns a valid group id (int) or nil\nfunction getOrCreateGroupId(name)\n\tlocal ok, groupId = pcall(physicsService.GetCollisionGroupId, physicsService, name)\n\tif not ok then\n\t\t-- Create may fail if we have hit the maximum of 32 different groups\n\t\tok, groupId = pcall(physicsService.CreateCollisionGroup, physicsService, name)\n\tend\n\treturn ok and groupId or nil\nend\n\n-- sets the specified part's collision group to the group with \n-- given group id\nfunction setPartCollisionGroup(part, name)\n\tphysicsService:SetPartCollisionGroup(part, name)\nend\n\n-- returns the id of part's collision\nfunction getPartGroupId(part)\n\treturn part.CollisionGroupId\nend\n\n\t\nprint(\"Get 'Test' Group:\", getGroupId(\"Test\")) -- prints nil\nprint(\"Get/Create 'Test' Group:\", getOrCreateGroupId(\"Test\")) -- prints 1\nprint(\"Get Id of 'Test' Group:\", getGroupId(\"Test\")) -- prints 1\nprint(\"Setting Part1's collision group...\")\nsetPartCollisionGroup(game.Workspace.Part1, \"Test\")\nprint(\"Part1's Collision Group Id:\", getPartGroupId(game.Workspace.Part1)) -- prints 1","locale":"en-us","tags":[],"validated_in_version":"","comments_issues":"","uid":"bltc4b4a7ffdde92172","created_by":"blt056181872171cff69cfbc0c3","updated_by":"bltb3147545f90dee1b","created_at":"2018-06-05T10:11:04.809Z","updated_at":"2018-08-08T00:36:14.090Z","url":"/code-sample/PhysicsService-GetCollisionGroupId1","_version":12,"tutorial_category":[],"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"duration":"","date":null,"sequence_number":null,"summary":"","short_description":"","start_line_number":"","expected_output":"","published_at":"2019-06-15T00:23:58.289Z"}],"serialization":{"can_save":true,"can_load":true},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"","api_property_url":"/api-reference/property/BasePart/CollisionGroupId","roblox_api_tags":[],"studio_category":"Behavior","script_editor_context":[],"wiki_text_reference":"{{Serverside|Type=property}}\n{{APIMemberPage\n|DescriptionShort=The id of the parts collision group.\n|Description=The id of the parts collision group. Parts start off in the Default group (id = 0). While this property can be directly changed, it is recommended to configure the collision group of a part using the name of the group with the {{api|PhysicsService.SetPartCollisionGroup}} function.\n\nThis value is clamped to the range of collision group ids: 0 <= id < maxCollisionGroups. If this value is set outside of this range it will be automatically changed to the nearest valid value.\n}}","uid":"blt6213b6acd7ac0e9a","created_by":"blt056181872171cff69cfbc0c3","updated_by":"bltb3147545f90dee1b","created_at":"2018-06-05T12:10:01.766Z","updated_at":"2018-08-08T00:39:41.630Z","_version":9,"display_title":"CollisionGroupId","api_dump_signature":"3330eced82d35647c786a503461a5fed605990c6_v2","url":"/api-reference/property/BasePart/CollisionGroupId","type_category":"Primitive","published_at":"2019-06-14T22:55:40.665Z"},{"title":"BasePart.Reflectance","type":"float","locale":"en-us","tags":[],"summary":"Determines how much a part reflects the skybox.","description":"The Reflectance property determines how much a `BasePart|part` reflects the skybox.  A value of 0 indicates the part is not reflective at all, and a value of 1 indicates the part should fully reflect. \n\nReflectance is not affected by `/BasePart/Transparency`, unless the part is fully transparent, in which case reflectance will not render at all. Reflectance may or may not be ignored depending on the `/BasePart/Material` of the part.","code_sample":[{"title":"Touch Blink","display_title":"Touch Blink","code_summary":"This code sample causes a part to blink its Reflectance and a PointLight every time it is touched. It uses a pattern that prevents multiple concurrent function calls from fighting with each other.","code_sample":"local part = script.Parent\n\n-- Add a light\nlocal pointLight = Instance.new(\"PointLight\", part)\npointLight.Brightness = 0\npointLight.Range = 12\n\nlocal touchNo = 0\nlocal function blink()\n\t-- Advance touchNo to tell other blink() calls to stop early\n\ttouchNo = touchNo + 1\n\t-- Save touchNo locally so we can tell when it changes globally\n\tlocal myTouchNo = touchNo\n\tfor i = 1, 0, -.1 do\n\t\t-- Stop early if another blink started\n\t\tif touchNo ~= myTouchNo then break end\n\t\t-- Update the blink animation\n\t\tpart.Reflectance = i\n\t\tpointLight.Brightness = i * 2\n\t\twait(0.05)\n\tend\nend\n\npart.Touched:Connect(blink)\n","validated_in_version":"0. 334. 0. 195932","comments_issues":"Perhaps this pattern needs more explaining, but it seems thoroughly described as is. Feel free to add more thoughts on it. -HG","tags":[],"locale":"en-us","uid":"bltc22a199d49a4793f","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:03:23.668Z","updated_at":"2018-10-01T08:30:01.226Z","url":"/code-sample/Touch-Blink","_version":11,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"published_at":"2019-06-15T00:14:38.845Z"}],"serialization":{"can_save":true,"can_load":true},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"","api_property_url":"/api-reference/property/BasePart/Reflectance","roblox_api_tags":[],"studio_category":"Appearance","script_editor_context":[],"wiki_text_reference":"{{APIMemberPage\n|Description=Determines how reflective an object is. This property should be set between 0 and 1.\n}}","uid":"blt2e16dfe74942115b","created_by":"blt056181872171cff69cfbc0c3","updated_by":"bltb3147545f90dee1b","created_at":"2018-06-05T12:10:15.395Z","updated_at":"2018-08-08T01:01:23.902Z","_version":11,"display_title":"Reflectance","api_dump_signature":"566ad1560086b341363b05a112af7d3ce376248d_v2","url":"/api-reference/property/BasePart/Reflectance","type_category":"Primitive","published_at":"2019-06-14T22:55:38.585Z"},{"title":"BasePart.Position","type":"Vector3","locale":"en-us","tags":[],"summary":"Describes the position of the part in the world.","description":"The Position property describes the coordinates of a `BasePart|part` using a `DataType/Vector3`. It reflects the position of the part's `/BasePart/CFrame`, however it can also be set. \n\nWhen setting Position, **overlap checking takes place**: if moving the part would cause it to overlap with another part, the destination position shall be just high enough so no overlap occurs. To avoid this, set the part's CFrame instead.","code_sample":[{"title":"Position Overlap Checking","display_title":"Position Overlap Checking","code_summary":"This code sample demonstrates the overlap checking behavior of the Position property by creating two parts, PartA and PartB. It attempts to place them at the same Position.","code_sample":"-- Create two parts, PartA and PartB\nlocal partA = Instance.new(\"Part\", workspace)\npartA.Name = \"PartA\"\npartA.BrickColor = BrickColor.new(\"Really red\")\npartA.Anchored = true\nlocal partB = Instance.new(\"Part\", workspace)\npartB.Name = \"PartB\"\npartB.BrickColor = BrickColor.new(\"Really blue\")\npartB.Anchored = true\n\n-- Demonstrate overlap\npartA.Position = Vector3.new(0, 50, 0)\npartB.Position = Vector3.new(0, 50, 0) -- This would cause an overlap!\nprint(partB.Position == Vector3.new(0, 50, 0)) --> false\nprint(partB.Position) --> Very close to (0, 51.2, 0)\n","validated_in_version":"0. 334. 0. 195932","comments_issues":"","tags":[],"locale":"en-us","uid":"bltfb2cc0d27892bbc4","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:03:18.306Z","updated_at":"2018-06-26T18:10:09.874Z","url":"/code-sample/Position-Overlap-Checking","_version":10,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"published_at":"2019-06-15T00:36:30.898Z"}],"serialization":{"can_save":false,"can_load":true},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"","api_property_url":"/api-reference/property/BasePart/Position","roblox_api_tags":["NotReplicated"],"studio_category":"Data","script_editor_context":[],"wiki_text_reference":"{{APIMemberPage\n|DescriptionShort=Determines the position of a part in the workspace.\n|Description=$DESCRIPTION_SHORT\nThis property contains the [[Vector3|coordinates]] at the center of the part rather than at the upper-left corner.\n}}","uid":"blta4d0569814a34489","created_by":"blt056181872171cff69cfbc0c3","updated_by":"bltb3147545f90dee1b","created_at":"2018-06-05T12:10:12.657Z","updated_at":"2018-08-08T01:02:58.332Z","_version":10,"display_title":"Position","api_dump_signature":"a81a006c5c352985a13d46a4fb734faaa5b66f22_v2","url":"/api-reference/property/BasePart/Position","type_category":"DataType","published_at":"2019-06-14T22:55:36.137Z"},{"title":"BasePart.RotVelocity","type":"Vector3","locale":"en-us","tags":[],"summary":"Determines a part's change in orientation over time","description":"The RotVelocity of a `BasePart|part` describes how its `BasePart/Orientation` is presently changing. In other words, this property describes how the fast part is rotating. The part only rotates if it is not anchored.\n\n The unit of this property is **degrees per second**.\n\nUsing this in conjunction with `AlignOrientation` allows for aligned parts to have matching RotVelocity and Orientation values.","code_sample":[],"serialization":{"can_save":true,"can_load":true},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"","api_property_url":"/api-reference/property/BasePart/RotVelocity","roblox_api_tags":[],"studio_category":"Data","script_editor_context":[],"wiki_text_reference":"{{APIMemberPage\n|MemberType=Property\n|Description=The rotational velocity of the object.\n}}","uid":"bltb26bb058ab8b4cb3","created_by":"blt056181872171cff69cfbc0c3","updated_by":"bltb3147545f90dee1b","created_at":"2018-06-05T12:10:03.154Z","updated_at":"2018-08-09T02:37:47.137Z","_version":11,"display_title":"RotVelocity","api_dump_signature":"b32cd8ba13a28fd4ab06add8fe14bff799db811d_v2","url":"/api-reference/property/BasePart/RotVelocity","type_category":"DataType","fast_flags":[],"published_at":"2019-06-14T22:55:27.390Z"},{"title":"BasePart.Locked","type":"bool","locale":"en-us","tags":[],"summary":"Determines whether a part is selectable in Studio.","description":"The Locked property determines whether a `BasePart|part` (or a `Model|model` it is contained within) may be selected in Roblox Studio by clicking on it. This property is most often enabled on parts within environment models that aren't being edited at the moment. Roblox Studio has a Lock/Unlock All tool that can toggle the Locked state of every part descendant in a model at once.","code_sample":[{"title":"Recursive Unlock","display_title":"Recursive Unlock","code_summary":"This code sample uses the concept of recursion to unlock all parts that are a descendant of a model.","code_sample":"-- Paste into a Script within a Model you want to unlock\nlocal model = script.Parent\n\n-- This function recurses through a model's heirarchy and unlocks\n-- every part that it encounters. \nlocal function recursiveUnlock(object)\n\tif object:IsA(\"BasePart\") then\n\t\tobject.Locked = false\n\tend\n\t\n\t-- Call the same function on the children of the object\n\t-- Note: The recursive process stops if an object has no children\n\tfor _, child in pairs(object:GetChildren()) do\n\t\trecursiveUnlock(child)\n\tend\nend\n\nrecursiveUnlock(model)\n-- You could unlock every part in the workspace by calling\n-- the function with the workspace, like this:\n--recursiveUnlock(workspace)\n","validated_in_version":"0. 334. 0. 195932","comments_issues":"A good example of recursion, an important computer science topic -HG","tags":[],"locale":"en-us","uid":"bltcff189d6bf4ce27f","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:03:29.254Z","updated_at":"2018-06-26T18:10:08.443Z","url":"/code-sample/Recursive-Unlock","_version":10,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"published_at":"2019-06-15T00:36:35.454Z"}],"serialization":{"can_save":true,"can_load":true},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"","api_property_url":"/api-reference/property/BasePart/Locked","roblox_api_tags":[],"studio_category":"Behavior","script_editor_context":[],"wiki_text_reference":"{{APIMemberPage\n|MemberType=Property\n|Description=If true, the object will not be be selectable by Studio tools or by in-game build tools provided the tools respect this property.\n}}","uid":"blta35a6eb5079c9e0e","created_by":"blt056181872171cff69cfbc0c3","updated_by":"bltb3147545f90dee1b","created_at":"2018-06-05T12:10:23.682Z","updated_at":"2018-08-14T23:11:44.587Z","_version":16,"display_title":"Locked","api_dump_signature":"1c18bc77fec6b64107f31a6766d513afd44d7950_v2","url":"/api-reference/property/BasePart/Locked","type_category":"Primitive","fast_flags":[],"published_at":"2019-06-14T22:55:01.310Z"},{"title":"BasePart.CustomPhysicalProperties","type":"PhysicalProperties","locale":"en-us","tags":[],"summary":"Determines several physical properties of a part","description":"CustomPhysicalProperties lets you customize various physical aspects of a `BasePart|part`, such as its's density, friction, and elasticity. \n\nIf enabled, this property let’s you configure these physical properties. If disabled, these physical properties are determined by the `BasePart/Material` of the part. The page for `Enum/Material` contains list of the various part materials.","code_sample":[{"title":"Set CustomPhysicalProperties","display_title":"Set CustomPhysicalProperties","code_summary":"This code sample demonstrates how to set the CustomPhysicalProperties property of a part.","code_sample":"local part = script.Parent\n\n-- The properties to set\n-- This will make the part light and bouncy!\nlocal density = .3\nlocal friction = .1\nlocal elasticity = 1\nlocal frictionWeight = 1\nlocal elasticityWeight = 1\n\n-- Construct new PhysicalProperties and set\nlocal physProperties = PhysicalProperties.new(density, friction, elasticity, frictionWeight, elasticityWeight)\npart.CustomPhysicalProperties = physProperties","validated_in_version":"0. 334. 0. 195932","comments_issues":"This is a trivial example since it's not really doing anything else interesting and only setting the property -HG","tags":["trivial"],"locale":"en-us","uid":"blte25096cec64e67f7","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:03:24.981Z","updated_at":"2018-06-26T18:10:07.043Z","url":"/code-sample/Set-CustomPhysicalProperties","_version":10,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"published_at":"2019-06-15T00:36:39.921Z"}],"serialization":{"can_save":true,"can_load":true},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"","api_property_url":"/api-reference/property/BasePart/CustomPhysicalProperties","roblox_api_tags":[],"studio_category":"Part ","script_editor_context":[],"wiki_text_reference":"{{APIMemberPage\n|MemberType=Property\n|Description=The specified custom physical properties under this BasePart. See [[API:PhysicalProperties|PhysicalProperties]] for more details. \n}}","uid":"blt2431861c1d9959bb","created_by":"blt056181872171cff69cfbc0c3","updated_by":"bltb3147545f90dee1b","created_at":"2018-06-05T12:10:07.247Z","updated_at":"2018-08-14T23:24:55.842Z","_version":11,"display_title":"CustomPhysicalProperties","api_dump_signature":"ce00facc741c4c8a58d6075e23d38ac1ac72c929_v2","url":"/api-reference/property/BasePart/CustomPhysicalProperties","type_category":"DataType","fast_flags":[],"published_at":"2019-06-14T22:54:59.139Z"},{"title":"BasePart.Transparency","type":"float","locale":"en-us","tags":[],"summary":"Determines how much a part can be seen through (the inverse of part opacity)","description":"The Transparency property controls the visibility of a part on a scale of 0 to 1, where 0 is completely visible (opaque), and a value of 1 is completely invisible (not rendered at all). \n\n`BasePart/Reflectance` can reduce the overall transparency of a brick if set to a value close to 1.\n\nWhile fully transparent parts are not rendered at all, partially transparent objects have some significant rendering costs. Having many translucent parts may slow down the game’s performance.\n\nWhen transparent parts overlap, render order can act unpredictable - try to keep semi-transparent parts from overlapping to avoid this.\n\nThe `BasePart/LocalTransparencyModifier` is a multiplier to Transparency that is only visible to the local client.","code_sample":[{"title":"X-Ray Vision","display_title":"X-Ray Vision","code_summary":"This code sample gives the local client X-ray vision using LocalTransparencyModifier. It allows the player to see through all parts in the Workspace, which are found using recursion.","code_sample":"-- X-ray vision: see through everything!\n\nlocal function makeXRayPart(part)\n\t-- LocalTransparencyModifier will make parts see-through but only for the local\n\t-- client, and it won't replicate to the server\n\tpart.LocalTransparencyModifier = .5 \nend\n\n-- This function uses recursion to search for parts in the game\nlocal function recurseForParts(object)\n\t-- Did we find a part that isn't \n\tif object:IsA(\"BasePart\") then\n\t\tmakeXRayPart(object)\n\tend\n\t\n\t-- Stop if this object has a Humanoid - we don't want to see-through players! \n\tif object:FindFirstChildOfClass(\"Humanoid\") then return end\n\t\n\t-- Check the object's children for more parts\n\tfor _, child in pairs(object:GetChildren()) do\n\t\trecurseForParts(child)\n\tend\nend\n\nrecurseForParts(workspace)\n","validated_in_version":"0. 334. 0. 195932","comments_issues":"","tags":[],"locale":"en-us","uid":"blt302b3485f78c49c7","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:03:10.559Z","updated_at":"2018-06-26T18:10:07.736Z","url":"/code-sample/X-Ray-Vision","_version":11,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"published_at":"2019-06-15T00:36:37.677Z"},{"title":"Fade Door","display_title":"Fade Door","code_summary":"This code sample shows how a part can fade away when touched by a Humanoid then reappear a moment after to create a passable door.","code_sample":"-- Paste into a Script inside a tall part\nlocal part = script.Parent\n\nlocal OPEN_TIME = 1\n\n-- Can the door be opened at the moment?\nlocal debounce = false\n\nlocal function open()\n\tpart.CanCollide = false\n\tpart.Transparency = 0.7\n\tpart.BrickColor = BrickColor.new(\"Black\")\nend\n\nlocal function close()\n\tpart.CanCollide = true\n\tpart.Transparency = 0\n\tpart.BrickColor = BrickColor.new(\"Bright blue\")\nend\n\nlocal function onTouch(part)\n\t-- If the door was already open, do nothing\n\tif debounce then print(\"D\") return end\n\t\n\t-- Check if touched by a Humanoid\n\tlocal human = part.Parent:FindFirstChildOfClass(\"Humanoid\")\n\tif not human then print(\"not human\") return end\n\n\t-- Perform the door opening sequence\t\n\tdebounce = true\n\topen()\n\twait(OPEN_TIME)\n\tclose()\n\tdebounce = false\t\nend\n\npart.Touched:Connect(onTouch)\nclose()\n","validated_in_version":"0. 334. 0. 195932","comments_issues":"","tags":[],"locale":"en-us","uid":"blt5cb4581d47b406f9","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:03:30.587Z","updated_at":"2018-10-01T08:30:06.769Z","url":"/code-sample/Fade-Door","_version":12,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"published_at":"2019-06-15T00:14:34.318Z"}],"serialization":{"can_save":true,"can_load":true},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"","api_property_url":"/api-reference/property/BasePart/Transparency","roblox_api_tags":[],"studio_category":"Appearance","script_editor_context":[],"wiki_text_reference":"{{APIMemberPage\n|ClassName=BasePart\n|MemberType=Property\n|Description=Sets how see-through the object is. A value of 1 is completely invisible, a value of 0 is completely opaque.\n|Example=\nThis will fade the brick called Part in Workspace from opaque to invisible.\n{{Lua|=\nfor i = 0, 1, 0.1 do\n   game.Workspace.Part.Transparency = i -- Make the Transparency of the part equal to i.\n   wait(0.1)\nend\n}}\n|Tutorials=\n* [[Restricted door]]\n}}","uid":"blta98fa980a00c715f","created_by":"blt056181872171cff69cfbc0c3","updated_by":"bltb3147545f90dee1b","created_at":"2018-06-05T12:09:20.600Z","updated_at":"2018-08-14T23:26:36.598Z","_version":12,"display_title":"Transparency","api_dump_signature":"57c10575f0eb55cf7a08c403812f0f1304fedaff_v2","url":"/api-reference/property/BasePart/Transparency","type_category":"Primitive","fast_flags":[],"published_at":"2019-06-14T22:54:57.050Z"},{"title":"BasePart.LocalTransparencyModifier","type":"float","locale":"en-us","tags":[],"summary":"Determines a multiplier for `BasePart/Transparency` that is only visible to the local client","description":"The LocalTransparencyModifier property is a multiplier to `BasePart/Transparency` that is only visible to the local client. It does not replicate from client to server. It is useful for when a part should not render for a specific client, such as how the player does not see their character’s body parts when they zoom into first person mode.\n\nThe property modifies the local part’s transparency increases a part’s transparency on a scale from 0 to 1 using the following formula:\n\n``` lua\n\t-- Calculate the part’s client-side transparency. Values greater than 1 round down to 1.\n\tlocal clientTransparency = part.Transparency + (1 * part.localTransparencyModifier)\n```\n\nTake a look at the table below for an example of how this property affect’s a part’s client-side transparency:\n\n| Transparency | LocalTransparencyModifier | Server-Side Transparency | Client-Side Transparency | Description                                                                                                                                                                              |\n|--------------|---------------------------|--------------------------|--------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| 0.5          | 0                         | 0.5                      | 0.5                      | A modifier value of 0.5 means that the part's client-side transparency is affected as follows: 0.5 + 1*0 = 0.5. The part's client-side transparency equals its server-side transparency. |\n| 0.5          | 0.5                       | 0.5                      | 0.75                     | A modifier value of 0.5 means that the part's client-side transparency is affected as follows: 0.5 + 1*0.5 = 0.75                                                                        |\n| 0.5          | 1                         | 0.5                      | 1                        | A modifier value of 1 means that the part's client-side transparency is affected as follows: 0.5 + 1*1 = >1. The client does not render the part.                                        |","code_sample":[{"title":"X-Ray Vision","display_title":"X-Ray Vision","code_summary":"This code sample gives the local client X-ray vision using LocalTransparencyModifier. It allows the player to see through all parts in the Workspace, which are found using recursion.","code_sample":"-- X-ray vision: see through everything!\n\nlocal function makeXRayPart(part)\n\t-- LocalTransparencyModifier will make parts see-through but only for the local\n\t-- client, and it won't replicate to the server\n\tpart.LocalTransparencyModifier = .5 \nend\n\n-- This function uses recursion to search for parts in the game\nlocal function recurseForParts(object)\n\t-- Did we find a part that isn't \n\tif object:IsA(\"BasePart\") then\n\t\tmakeXRayPart(object)\n\tend\n\t\n\t-- Stop if this object has a Humanoid - we don't want to see-through players! \n\tif object:FindFirstChildOfClass(\"Humanoid\") then return end\n\t\n\t-- Check the object's children for more parts\n\tfor _, child in pairs(object:GetChildren()) do\n\t\trecurseForParts(child)\n\tend\nend\n\nrecurseForParts(workspace)\n","validated_in_version":"0. 334. 0. 195932","comments_issues":"","tags":[],"locale":"en-us","uid":"blt302b3485f78c49c7","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:03:10.559Z","updated_at":"2018-06-26T18:10:07.736Z","url":"/code-sample/X-Ray-Vision","_version":11,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"published_at":"2019-06-15T00:36:37.677Z"}],"serialization":{"can_save":false,"can_load":false},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"","api_property_url":"/api-reference/property/BasePart/LocalTransparencyModifier","roblox_api_tags":["Hidden","NotReplicated"],"studio_category":"Data","script_editor_context":[],"wiki_text_reference":"{{Clientside|Type=property}}\n{{APIMemberPage\n|ClassName=BasePart\n|MemberType=Property\n|Description=Acts as a multiplier for the [[API:Class/BasePart/Transparency|Transparency]] property, which is only visible to the local player.\n|Example=\nOn any member of the character, this must be set every frame, as the engine overrides it:\n{{Lua|=\nlocal player = game.Players.LocalPlayer\nlocal character = player.Character\ngame:GetService(\"RunService\").RenderStepped:connect(function()\n\tcharacter.Head.LocalTransparencyModifier = 0.5\nend)\n}}\nOtherwise, you can simply set it:\n{{Lua|=\nworkspace.BasePlate.Transparency = 0.5 -- make the baseplate semi-opaque\nworkspace.BasePlate.LocalTransparencyModifier = 0.5 -- make the baseplate's transparency 0.5 times more transparent than it is (effectively making the display transparency equal 0.75)\n}}\n}}","uid":"bltea2a912aa2fb5596","created_by":"blt056181872171cff69cfbc0c3","updated_by":"bltb3147545f90dee1b","created_at":"2018-06-05T12:09:22.079Z","updated_at":"2018-08-14T23:31:34.227Z","_version":12,"display_title":"LocalTransparencyModifier","api_dump_signature":"327e4f46cb963a2f39ef696b7276e323f2787192_v2","url":"/api-reference/property/BasePart/LocalTransparencyModifier","type_category":"Primitive","fast_flags":[],"published_at":"2019-06-14T22:54:54.931Z"},{"title":"BasePart.Anchored","type":"bool","locale":"en-us","tags":[],"summary":"Determines whether a part is immovable by physics","description":"The Anchored property determines whether the part will be **immovable** by physics. When enabled, a part will never change position due to gravity, other parts collisions, overlapping other parts, or any other physics-related causes. A part that is not anchored is called **unanchored**. As a result, two anchored parts will never fire the `/BasePart/Touched` event on each other. An anchored part may still be moved by changing its `/BasePart/CFrame` or `/BasePart/Position`, and it still may have a nonzero `/BasePart/Velocity` and `/BasePart/RotVelocity`. Finally, if an unanchored part is joined with an anchored part through an object like a `/Weld`, it too will act anchored. If such a joint breaks the part may be affected by physics again.\n\nIt's a good idea to anchor parts that are part of your game's environment (and therefore shouldn't move). In fact, if you don't have a good reason to keep a part unanchored, you should anchor it. Unanchored parts can cause performance issues if there are many. In Roblox Studio, you can anchor/unanchor an entire model using the Anchor tool. Be sure to keep static environment models anchored, like in-world buttons, signs, and trees.\n\nNetwork ownership cannot be set on anchored parts. If a part's anchored status changes on the server, the network ownership of that part will be affected.","code_sample":[{"title":"Part Anchored Toggle","display_title":"Part Anchored Toggle","code_summary":"This code sample will allow a part to be clicked to toggle its anchored property. When toggled, the visual appearance of the part is updated (red means anchored, yellow means free).","code_sample":"local part = script.Parent\n\n-- Create a ClickDetector so we can tell when the part is clicked \nlocal cd = Instance.new(\"ClickDetector\", part)\n\n-- This function updates how the part looks based on its Anchored state\nlocal function updateVisuals()\n\tif part.Anchored then\n\t\t-- When the part is anchored...\n\t\tpart.BrickColor = BrickColor.new(\"Bright red\")\n\t\tpart.Material = Enum.Material.DiamondPlate\n\telse\n\t\t-- When the part is unanchored...\n\t\tpart.BrickColor = BrickColor.new(\"Bright yellow\")\n\t\tpart.Material = Enum.Material.Wood\n\tend\nend\n\nlocal function onToggle()\n\t-- Toggle the anchored property\n\tpart.Anchored = not part.Anchored\n\t\n\t-- Update visual state of the brick\n\tupdateVisuals()\nend\n\n-- Update, then start listening for clicks\nupdateVisuals()\ncd.MouseClick:Connect(onToggle)\n","validated_in_version":"0. 334. 0. 195932","comments_issues":"","tags":[],"locale":"en-us","uid":"bltcf51c0b96f0c13d2","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:03:26.293Z","updated_at":"2018-10-01T08:30:35.211Z","url":"/code-sample/Part-Anchored-Toggle","_version":11,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"published_at":"2019-06-15T00:14:11.812Z"}],"serialization":{"can_save":true,"can_load":true},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"this is deprecated property","api_property_url":"/api-reference/property/BasePart/Anchored","roblox_api_tags":[],"studio_category":"Behavior","script_editor_context":[],"wiki_text_reference":"{{APIMemberPage\n|ClassName=BasePart\n|MemberType=Property\n|Description=Sets whether or not the object is frozen in place. \n|Example={{Lua|=local part = Instance.new(\"Part\")\npart.Anchored = true -- prevent it from falling\npart.Parent = Workspace\n}}\n}}\n\n'''Note''': When Anchored changes on the server, manual [[NetworkOwnership|network ownership]] will be affected.","uid":"blt1e8225d9b1271f0e","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt0d2e21c80087f7ec0b18bbac","created_at":"2018-06-05T12:10:05.887Z","updated_at":"2018-08-24T08:39:07.120Z","_version":14,"display_title":"Anchored","api_dump_signature":"ab8a8159f0536fe554223782ce0fe3aef5009d76_v2","url":"/api-reference/property/BasePart/Anchored","type_category":"Primitive","fast_flags":[],"published_at":"2019-06-14T22:53:07.809Z"},{"title":"BasePart.RootPriority","display_title":"RootPriority","roblox_api_tags":[],"locale":"en-us","url":"/api-reference/property/BasePart/RootPriority","api_property_url":"/api-reference/property/BasePart/RootPriority","type":"int","type_category":"Primitive","studio_category":"Part ","serialization":{"can_save":true,"can_load":true},"security":{"read_security_tag":"None","write_security_tag":"None"},"uid":"blt71f156b817bf43f2","created_by":"blt917003a0d43f32d8","updated_by":"bltb3147545f90dee1b","created_at":"2018-10-31T20:53:00.702Z","updated_at":"2019-01-19T03:12:46.295Z","_version":6,"tags":[],"api_dump_signature":"59b1510ec06556995c56901f4dd1a017dfaea2c4_v2","summary":"The main rule in determining the root part of an assembly","description":"This property is the main rule in determining the root part of an assembly. It is an integer between -127 and 127 that takes precedence over all other rules for root part sort (including the weird rules based on part `BasePart/Size|size`). A part with a higher RootPriority will take priority over other `BasePart/Anchored|unanchored` parts with equal `BasePart/Massless|Massless` values and a lower RootPriority.\n\n<div class=\"col-4 mr-4 px-0\">\n\t<img src=\"/assets/5c4294eb2404965d50629b57/Screen_Shot_2019-01-18_at_10.09.15_PM.png\" alt=\"RootPriority in Properties window\"> \n</div>\n\nUse this to control which part of an assembly is the root part and keep the root part stable if size changes.\n\n## See also\n- `articles/understanding root parts|Understanding Root Parts`, an article documenting what root parts are and how to use them","deprecation_message":"","code_sample":[],"fast_flags":[],"script_editor_context":[],"wiki_text_reference":"","published_at":"2019-06-14T22:45:42.275Z"},{"title":"BasePart.Massless","display_title":"Massless","roblox_api_tags":[],"locale":"en-us","url":"/api-reference/property/BasePart/Massless","api_property_url":"/api-reference/property/BasePart/Massless","type":"bool","type_category":"Primitive","studio_category":"Behavior","serialization":{"can_save":true,"can_load":true},"security":{"read_security_tag":"None","write_security_tag":"None"},"uid":"blt2198f06363398703","created_by":"blt917003a0d43f32d8","updated_by":"bltb3147545f90dee1b","created_at":"2018-10-31T20:53:00.090Z","updated_at":"2019-01-24T23:53:37.131Z","_version":10,"tags":[],"api_dump_signature":"bdd31dd2b743c499441d9bc934566cd2fd9a028f_v2","summary":"Determines whether the part contributes to the total mass or inertia of its rigid body ","description":"If this property is enabled, the `BasePart|part` will not contribute to the total mass or inertia of its rigid body as long as it is `Weld|welded` to another part that has mass.\n\n<div class=\"col-4 mr-4 px-0\">\n\t<img src=\"/assets/5c4293a3e4d97b585045c5cb/Screen_Shot_2019-01-18_at_10.03.30_PM.png\" alt=\"Massles property in property window\"> \n</div>\n\nIf the part is its own root part according to `BasePart/GetRootPart` then this will be ignored for that part, and it will still contribute mass and inertia to its rigid body like a normal part. Parts that are massless should never become an assembly root part unless all other parts in the assembly are also massless.\n\nThis might be useful for things like optional accessories on vehicles that you don’t want to affect the handling of the car or a massless render mesh welded to a simpler collision mesh. For instance, to create a massless `MeshPart`, you would use the follow code:\n\n```lua\nlocal mesh = Instance.new(\"MeshPart\")\nmesh.Parent = game.Workspace\nmesh.MeshId = \"insert meshId here\"\nmesh.Massless = true\n```\n\n## See also\n- `article/understanding root parts|Understanding Root Parts`, an article documenting what root parts are and how to use them","deprecation_message":"","code_sample":[],"fast_flags":[],"script_editor_context":[],"wiki_text_reference":"","published_at":"2019-06-14T22:44:59.147Z"},{"title":"BasePart.CastShadow","display_title":"CastShadow","roblox_api_tags":[],"locale":"en-us","url":"/api-reference/property/BasePart/CastShadow","api_property_url":"/api-reference/property/BasePart/CastShadow","type":"bool","type_category":"Primitive","studio_category":"Appearance","serialization":{"can_save":true,"can_load":true},"security":{"read_security_tag":"None","write_security_tag":"None"},"uid":"blt30c6eb9594f77fbc","created_by":"blt917003a0d43f32d8","updated_by":"bltb3147545f90dee1b","created_at":"2019-04-18T01:27:50.473Z","updated_at":"2019-04-19T02:37:07.019Z","_version":3,"tags":[],"api_dump_signature":"f208dd009bd5070078b38be390630d8a2adb3e8d_v2","summary":"Determines whether or not a part casts a shadow","description":"Determines whether or not a part casts a shadow. It allows you to disable shadows for a part without having to make that part `BasePart/Transparency|transparent`.","deprecation_message":"","code_sample":[],"fast_flags":[],"script_editor_context":[],"wiki_text_reference":"","published_at":"2019-06-14T22:40:31.868Z"}],"function":[{"title":"BasePart:BreakJoints","url":"/api-reference/function/BasePart/BreakJoints","locale":"en-us","tags":[],"summary":"Breaks any surface connection with any adjacent part, including `Weld` and other `JointInstance`.","description":"Breaks any surface connection with any adjacent part, including `Weld` and other `JointInstance`.","code_sample":[],"roblox_api_tags":[],"returns":[{"return_category":"Primitive","return_type":"void","summary":"No return"}],"argument":[],"deprecation_message":"","wikitext":"{{APIMemberPage\n|MemberType=Function\n|Description=Breaks any surface connection with any adjacent part, including [[API:Class/Weld|Welds]] and other [[API:Class/JointInstance|JointInstances]].\n}}","security":"None","uid":"blt882caf16d94e907a","created_by":"blt056181872171cff69cfbc0c3","updated_by":"bltb3147545f90dee1b","created_at":"2018-06-05T10:49:06.062Z","updated_at":"2018-08-11T21:29:39.880Z","_version":14,"type":"","display_title":"BreakJoints","api_dump_signature":"7ae37280054755669c0493e352867fca30038353_v2","fast_flags":[],"published_at":"2019-06-14T22:21:46.826Z"},{"title":"BasePart:CanCollideWith","url":"/api-reference/function/BasePart/CanCollideWith","locale":"en-us","tags":[],"summary":"Returns whether the parts can collide with each other.","description":"Returns whether the parts can collide with each other or not. This function takes into account the collision groups of the two parts.\n<p>This function will error if the specified part is not a BasePart.<span class=\"API_MEMBER_SUMMARY\" style=\"display:none;\">Returns whether the parts can collide with each other.</span>\n</p>\n<!-- \nNewPP limit report\nCached time: 20180622002909\nCache expiry: 86400\nDynamic content: false\nCPU time usage: 0.024 seconds\nReal time usage: 0.245 seconds\nPreprocessor visited node count: 62/1000000\nPreprocessor generated node count: 339/1000000\nPost‐expand include size: 2968/2097152 bytes\nTemplate argument size: 254/2097152 bytes\nHighest expansion depth: 4/40\nExpensive parser function count: 1/100\nLua time usage: 0.210/7.000 seconds\nLua virtual size: 17.88 MB/50 MB\nLua estimated memory usage: 0 bytes\n-->\n<!--\nTransclusion expansion time report (%,ms,calls,template)\n100.00%  239.879      1 Template:APIMemberPage\n100.00%  239.879      1 -total\n-->\n","code_sample":[],"roblox_api_tags":[],"returns":[{"return_category":"Primitive","return_type":"bool","summary":"Whether the parts can collide with each other"}],"argument":[{"category":"Class","type":"Instance","name":"part","default":"","summary":"The specified part being checked for collidability"}],"deprecation_message":"","wikitext":"{{APIMemberPage\n|DescriptionShort=Returns whether the parts can collide with each other.\n|Description=Returns whether the parts can collide with each other or not. This function takes into account the collision groups of the two parts.\n\nThis function will error if the specified part is not a BasePart.\n|TypeArgs.part=Class/BasePart\n}}","security":"None","uid":"bltad142c827962ac8f","created_by":"blt056181872171cff69cfbc0c3","updated_by":"bltb3147545f90dee1b","created_at":"2018-06-05T10:49:21.550Z","updated_at":"2018-08-11T21:30:38.060Z","_version":13,"display_title":"CanCollideWith","api_dump_signature":"a1dcce1f5f4c4ac9159f169d68425bf621f7e4ce_v2","type":"","fast_flags":[],"published_at":"2019-06-14T22:21:44.685Z"},{"title":"BasePart:GetConnectedParts","url":"/api-reference/function/BasePart/GetConnectedParts","locale":"en-us","tags":[],"summary":"Returns a table of parts connected to the the object by any kind of rigid joint.","description":"Returns a table of parts connected to the the object by any kind of rigid joint.\n<p>If <i>recursive</i> is true this function will return all of the parts in the assembly rigidly connected to the BasePart.\n<br>\n</p>\n<h2><span class=\"mw-headline\" id=\"Rigid_Joints\">Rigid Joints</span></h2>\nWhen a joint connects two parts together <code style=\"color: #000; background-color: rgb(239,239,239);\">(Part0 → Part1)</code>, a joint is <b>rigid</b> if the physics of <code style=\"color: #000; background-color: rgb(239,239,239);\">Part1</code> are completely locked down by <code style=\"color: #000; background-color: rgb(239,239,239);\">Part0</code>.<br>This only applies to the following joint types: <ul>\n<li>`Weld`</li>\n<li>`Snap`</li>\n<li>`ManualWeld`</li>\n<li>`Motor`</li>\n<li>`Motor6D`</li>\n<li>`WeldConstraint`</li>\n</ul>","code_sample":[],"roblox_api_tags":[],"returns":[{"return_category":"DataType","return_type":"Objects","summary":""}],"argument":[{"category":"Primitive","type":"bool","name":"recursive","default":"false","summary":"A table of parts connected to the the object by any kind of `JointInstance|joint`"}],"deprecation_message":"","wikitext":"{{APIMemberPage\n|MemberType=Function\n|TypeArgs.return=Class/BasePart\n|DescriptionShort=Returns a table of parts connected to the the object by any kind of [[API:Class/JointInstance|Joint]].\n|Description=Returns a table of parts connected to the the object by any kind of [[API:Class/JointInstance|Joint]]. If ''recursive'' is false this function will only return the parts that are directly connected to the BasePart. If ''recursive'' is true this function will return all of the parts in the assembly rigidly connected to the BasePart.\n}}","security":"None","uid":"blte7546e516440c1f9","created_by":"blt056181872171cff69cfbc0c3","updated_by":"bltb3147545f90dee1b","created_at":"2018-06-05T10:49:15.481Z","updated_at":"2018-08-11T21:49:10.618Z","_version":14,"display_title":"GetConnectedParts","api_dump_signature":"c07d2a83885f271c0e2a01bf1c8113249cc749c2_v2","type":"","fast_flags":[],"published_at":"2019-06-14T22:21:42.591Z"},{"title":"BasePart:GetJoints","url":"/api-reference/function/BasePart/GetJoints","locale":"en-us","tags":[],"summary":"Return all Joints or Constraints that is connected to this Part.","description":"Return all Joints or Constraints that is connected to this Part.","code_sample":[],"roblox_api_tags":[],"returns":[{"return_category":"DataType","return_type":"Objects","summary":"An array of all Joints or Constraints connected to the Part."}],"argument":[],"deprecation_message":"","wikitext":"{{APIMemberPage\n|MemberType=Function\n|TypeArgs.return=Class/BasePart\n|Description=Return all Joints or Constraints that is connected to this Part.\n}}","security":"None","uid":"blt301b4cadd9fa00ab","created_by":"blt056181872171cff69cfbc0c3","updated_by":"bltb3147545f90dee1b","created_at":"2018-06-05T10:48:30.589Z","updated_at":"2018-08-11T21:49:56.199Z","_version":11,"display_title":"GetJoints","api_dump_signature":"add70f13d6f42a6bbf0f7c959bac732e59ba8266_v2","type":"","fast_flags":[],"published_at":"2019-06-14T22:21:40.524Z"},{"title":"BasePart:GetNetworkOwner","url":"/api-reference/function/BasePart/GetNetworkOwner","locale":"en-us","tags":[],"summary":"Returns the current player who is the network owner of this part, or nil in case of the server.","description":"Returns the current player who is the network owner of this part, or nil in case of the server.","code_sample":[],"roblox_api_tags":[],"returns":[{"return_category":"Class","return_type":"Instance","summary":"The current player who is the network owner of this part, or nil in case of the server"}],"argument":[],"deprecation_message":"","wikitext":"{{APIMemberPage\n|MemberType=Function\n|TypeArgs.return=Ref<Class/Player>\n|Description=Returns the current player who is the network owner of this part, or nil in case of the server.\n|SeeAlso=*[[NetworkOwnership]]\n}}","security":"None","uid":"bltff616202fbb22b39","created_by":"blt056181872171cff69cfbc0c3","updated_by":"bltb3147545f90dee1b","created_at":"2018-06-05T10:48:29.512Z","updated_at":"2018-08-11T21:50:17.819Z","_version":11,"display_title":"GetNetworkOwner","api_dump_signature":"37b70cdf2b95a68cecaad635be18fd1a74fe109c_v2","type":"","fast_flags":[],"published_at":"2019-06-14T22:21:38.327Z"},{"title":"BasePart:GetNetworkOwnershipAuto","url":"/api-reference/function/BasePart/GetNetworkOwnershipAuto","locale":"en-us","tags":[],"summary":"Returns true if the game engine automatically decides the network owner for this part.","description":"Returns true if the game engine automatically decides the network owner for this part.","code_sample":[],"roblox_api_tags":[],"returns":[{"return_category":"Primitive","return_type":"bool","summary":"Whether the game engine automatically decides the network owner for this part"}],"argument":[],"deprecation_message":"","wikitext":"{{APIMemberPage\n|MemberType=Function\n|Description=Returns true if the game engine automatically decides the network owner for this part.\n|SeeAlso=*[[NetworkOwnership]]\n}}","security":"None","uid":"blt60d19249121fb1f9","created_by":"blt056181872171cff69cfbc0c3","updated_by":"bltb3147545f90dee1b","created_at":"2018-06-05T10:49:04.616Z","updated_at":"2018-08-11T21:50:36.868Z","_version":11,"display_title":"GetNetworkOwnershipAuto","api_dump_signature":"7647d2f41eac94099dd2d73a189d50381d606b7d_v2","type":"","fast_flags":[],"published_at":"2019-06-14T22:21:35.998Z"},{"title":"BasePart:IsGrounded","url":"/api-reference/function/BasePart/IsGrounded","locale":"en-us","tags":[],"summary":"Returns true if the object is connected to a part that will hold it in place (eg an `BasePart/Anchored` part), otherwise returns false.","description":"Returns true if the object is connected to a part that will hold it in place (eg an `BasePart/Anchored` part), otherwise returns false.","code_sample":[],"roblox_api_tags":[],"returns":[{"return_category":"Primitive","return_type":"bool","summary":"Whether the object is connected to a part that will hold it in place"}],"argument":[],"deprecation_message":"","wikitext":"{{APIMemberPage\n|MemberType=Function\n|Description=Returns true if the object is connected to a part that will hold it in place (eg an [[API:Class/BasePart/Anchored|Anchored]] part), otherwise returns false.\n}}","security":"None","uid":"blt8a0cdc044236db96","created_by":"blt056181872171cff69cfbc0c3","updated_by":"bltb3147545f90dee1b","created_at":"2018-06-05T10:48:53.834Z","updated_at":"2018-08-11T21:52:27.733Z","_version":12,"display_title":"IsGrounded","api_dump_signature":"3a730e6611fe366a56f78f3c00472bbe7a7a5b4a_v2","type":"","fast_flags":[],"published_at":"2019-06-14T22:21:33.873Z"},{"title":"BasePart:Resize","url":"/api-reference/function/BasePart/Resize","locale":"en-us","tags":[],"summary":"Changes the size of an object just like using the Studio resize tool.","description":"Changes the size of an object just like using the Studio resize tool.","code_sample":[],"roblox_api_tags":[],"returns":[{"return_category":"Primitive","return_type":"bool","summary":"Whether the part is resized"}],"argument":[{"category":"Enum","type":"NormalId","name":"normalId","default":"","summary":"The side to resize"},{"category":"Primitive","type":"int","name":"deltaAmount","default":"","summary":"How much to grow/shrink on the specified side"}],"deprecation_message":"","wikitext":"{{APIMemberPage\n|MemberType=Function\n|Notes=\n*NormalId is a side, DeltaAmount is how much to grow/shrink on that side. The part won't be resized if there is a part blocking the facial direction.\n|Description=Changes the size of an object just like using the Studio resize tool.\n}}","security":"None","uid":"blt08e013b0e49a67b2","created_by":"blt056181872171cff69cfbc0c3","updated_by":"bltb3147545f90dee1b","created_at":"2018-06-05T10:49:48.698Z","updated_at":"2018-08-11T22:17:36.127Z","_version":11,"display_title":"Resize","api_dump_signature":"83f611f818e84bade103bd4eba29435be6d4acdb_v2","type":"","fast_flags":[],"published_at":"2019-06-14T22:21:29.765Z"},{"title":"BasePart:SetNetworkOwnershipAuto","url":"/api-reference/function/BasePart/SetNetworkOwnershipAuto","locale":"en-us","tags":[],"summary":"Lets the game engine dynamically decide who will handle the part's physics (one of the clients or the server).","description":"Lets the game engine dynamically decide who will handle the part's physics (one of the clients or the server).","code_sample":[],"roblox_api_tags":[],"returns":[{"return_category":"Primitive","return_type":"void","summary":"No return"}],"argument":[],"deprecation_message":"","wikitext":"{{APIMemberPage\n|MemberType=Function\n|Description=Lets the game engine dynamically decide who will handle the part's physics (one of the clients or the server).\n|SeeAlso=*[[NetworkOwnership]]\n}}","security":"None","uid":"blt255eb8c15acc9013","created_by":"blt056181872171cff69cfbc0c3","updated_by":"bltb3147545f90dee1b","created_at":"2018-06-05T10:49:35.781Z","updated_at":"2018-08-11T22:19:12.160Z","_version":11,"display_title":"SetNetworkOwnershipAuto","api_dump_signature":"069b61253b0f43afc5a6e2dae1538d200805c9ea_v2","type":"","fast_flags":[],"published_at":"2019-06-14T22:21:25.685Z"},{"title":"BasePart:MakeJoints","url":"/api-reference/function/BasePart/MakeJoints","locale":"en-us","tags":[],"summary":"Creates a joint on any side of the object that has a surface ID that can make a joint.","description":"Creates a joint on any side of the object that has a surface ID that can make a joint.","code_sample":[],"roblox_api_tags":[],"returns":[{"return_category":"Primitive","return_type":"void","summary":"No return"}],"argument":[],"deprecation_message":"","wikitext":"{{APIMemberPage\n|MemberType=Function\n|Description=Creates a joint on any side of the object that has a surface ID that can make a joint.\n|Notes=MakeJoints forms a bond (a joint) between bricks if they have the required surfaces types:\n}}\n{| class=\"wikitable\"\n!SurfaceType !! '''Weld''' !! '''Universal''' !! '''Studs''' !! '''Inlet''' !! '''Glue''' !! '''Smooth'''\n|-\n| '''Weld'''       || Weld || Weld      || Weld || Weld  || Weld || Weld \n|-\n| '''Universal'''  || Weld || Snap      || Snap || Snap || Glue || No Joint  \n|-\n| '''Studs'''      || Weld || Snap      || No Joint || Snap || Glue || No Joint  \n|-\n| '''Inlet'''      || Weld || Snap      || Snap || No Joint || Glue || No Joint  \n|-\n| '''Glue'''       || Weld || Glue      || Glue || Glue || Glue || Glue \n|-\n| '''Smooth'''     || Weld || No Joint  || No Joint || No Joint || Glue || No Joint \n|}","security":"None","uid":"blta448690629d427e0","created_by":"blt056181872171cff69cfbc0c3","updated_by":"bltb3147545f90dee1b","created_at":"2018-06-05T10:48:39.084Z","updated_at":"2018-08-11T23:06:58.608Z","_version":12,"display_title":"MakeJoints","api_dump_signature":"86a9b0ac8be8032f2f3425e9f304443fa9c04a50_v2","type":"","fast_flags":[],"published_at":"2019-06-14T22:21:19.199Z"},{"title":"BasePart:CanSetNetworkOwnership","url":"/api-reference/function/BasePart/CanSetNetworkOwnership","locale":"en-us","tags":[],"summary":"Checks whether you can set a `BasePart|part's` network ownership","description":"The CanSetNetworkOwnership function checks whether you can set a `BasePart|part's` network ownership.\n\nThe function’s return value verifies whether or not you can call `BasePart/SetNetworkOwner` or `BasePart/SetNetworkOwnershipAuto` without encountering an error. It returns true if you can modify/read the network ownership, or returns false and the reason you can't, as a string.\n\n##See Also\n * [Network ownership][1]\n\n  [1]: /articles/Network-Ownership","code_sample":[{"title":"Check if a Part's Network Ownership Can Be Set","display_title":"Check if a Part's Network Ownership Can Be Set","code_summary":"This example checks whether or not the network ownership of the first `BasePart` named *Part* in the `Workspace` can be set.","code_sample":"local part = workspace:FindFirstChild(\"Part\")\n\nif part and part:IsA(\"BasePart\") then\n\tlocal canSet,errorReason = part:CanSetNetworkOwnership()\n\tif canSet then\n\t\tprint(part:GetFullName()..\"'s Network Ownership can be changed!\")\n\telse\n\t\twarn(\"Cannot change the Network Ownership of \"..part:GetFullName()..\" because: \"..errorReason)\n\tend\nend","locale":"en-us","tags":[],"uid":"blte0824a1d141b293b","created_by":"blt056181872171cff69cfbc0c3","updated_by":"bltb3147545f90dee1b","created_at":"2018-06-05T10:07:31.813Z","updated_at":"2018-08-11T00:21:25.119Z","url":"/code-sample/BasePart-CanSetNetworkOwnership1","_version":14,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"duration":"","date":null,"sequence_number":null,"summary":"","expected_output":"","validated_in_version":"","comments_issues":"","short_description":"","start_line_number":"","published_at":"2019-06-15T00:23:31.140Z"}],"roblox_api_tags":[],"returns":[{"return_category":"Group","return_type":"Tuple","summary":"Whether you can modify/read the network ownership, as well as a reason if you cannot"}],"argument":[],"deprecation_message":"","wikitext":"{{APIMemberPage\n|TypeArgs.return=bool, Variant<string,void>\n|Description=\nVerifies whether or not you can call [[SetNetworkOwner]] or [[SetNetworkOwnershipAuto]] without encountering an error.\nReturns true if you can modify/read the network ownership, or returns false + the reason you can't, as a {{type|string}}.\n|Example=\nThis example checks whether or not the network ownership of the first `/BasePart` named \"Part\" in the `/Workspace` can be set.\n{{lua|=local part = workspace:FindFirstChild(\"Part\")\n\nif part and part:IsA(\"BasePart\") then\n\tlocal canSet,errorReason = part:CanSetNetworkOwnership()\n\tif canSet then\n\t\tprint(part:GetFullName()..\"'s Network Ownership can be changed!\")\n\telse\n\t\twarn(\"Cannot change the Network Ownership of \"..part:GetFullName()..\" because: \"..errorReason)\n\tend\nend\n}}\n|SeeAlso=\n* [[Network ownership]]\n}}","security":"None","uid":"blt3eb6e14dbb5babfc","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:49:22.672Z","updated_at":"2018-08-22T00:29:30.716Z","_version":23,"display_title":"CanSetNetworkOwnership","api_dump_signature":"975b498e7f0849b196057dfa57f07d8401001a7e_v2","type":"","fast_flags":[],"published_at":"2019-06-14T22:20:53.823Z"},{"title":"BasePart:GetTouchingParts","url":"/api-reference/function/BasePart/GetTouchingParts","locale":"en-us","tags":[],"summary":"Returns a table of all <a href=\"/api-reference/property/BasePart/CanCollide\" class=\"mw-redirect\" title=\"CanCollide\">CanCollide</a> true parts that intersect with this part.","description":"Returns a table of all parts that are physically interacting with this part. If the part itself has CanCollide set to false, then this function will return an empty table UNLESS it has a `TouchInterest` (AKA: Something is connected to its Touched event). Parts that are adjacent but not intersecting are not considered touching. ","code_sample":[],"roblox_api_tags":[],"returns":[{"return_category":"DataType","return_type":"Objects","summary":"A table of all parts that intersect and can collide with this part"}],"argument":[],"deprecation_message":"","wikitext":"{{APIMemberPage\n|MemberType=Function\n|TypeArgs.return=Class/BasePart\n|DescriptionShort=Returns a table of all [[CanCollide]] true parts that intersect with this part.\n|Description=Returns a table of all [[CanCollide]] true parts that intersect with this part. If the part itself is CanCollide false, then this function will return an empty table UNLESS it has a TouchInterest (AKA: Something is connected to its Touched event). Parts that are adjacent but not intersecting are not considered touching.  \n\n[[File:NotTouching.png|thumb|none|200px|These parts are not touching]]\n\n[[File:TouchingParts.png|thumb|none|200px|These parts are touching]]\n}}","security":"None","uid":"blt2cf35679912a196b","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:48:34.900Z","updated_at":"2018-08-22T00:29:47.465Z","_version":16,"display_title":"GetTouchingParts","api_dump_signature":"333c9ec4e0b8df30de985416918f25668d0644cd_v2","type":"","fast_flags":[],"published_at":"2019-06-14T22:20:51.716Z"},{"title":"BasePart:SetNetworkOwner","url":"/api-reference/function/BasePart/SetNetworkOwner","locale":"en-us","tags":[],"summary":"Sets the given player as network owner for this and all connected parts","description":"Sets the given player as network owner for this and all connected parts.\n<p>When playerInstance is nil, the server will be the owner instead of a player.<span class=\"API_MEMBER_SUMMARY\" style=\"display:none;\">Sets the given player as network owner for this and all connected parts.</span>\n</p><p><br>\n</p>\n<h2><span class=\"mw-headline\" id=\"See_Also\">See Also</span></h2>\n<ul><li><a href=\"/articles/Network-Ownership\" class=\"mw-redirect\" title=\"NetworkOwnership\">NetworkOwnership</a></li></ul>\n\n<!-- \nNewPP limit report\nCached time: 20180622002919\nCache expiry: 86400\nDynamic content: false\nCPU time usage: 0.024 seconds\nReal time usage: 0.253 seconds\nPreprocessor visited node count: 66/1000000\nPreprocessor generated node count: 351/1000000\nPost‐expand include size: 2944/2097152 bytes\nTemplate argument size: 210/2097152 bytes\nHighest expansion depth: 4/40\nExpensive parser function count: 1/100\nLua time usage: 0.210/7.000 seconds\nLua virtual size: 17.57 MB/50 MB\nLua estimated memory usage: 0 bytes\n-->\n<!--\nTransclusion expansion time report (%,ms,calls,template)\n100.00%  247.263      1 Template:APIMemberPage\n100.00%  247.263      1 -total\n-->\n","code_sample":[],"roblox_api_tags":[],"returns":[{"return_category":"Primitive","return_type":"void","summary":"No return"}],"argument":[{"category":"Class","type":"Instance","name":"playerInstance","default":"nil","summary":"The player being given network ownership of the part"}],"deprecation_message":"","wikitext":"{{APIMemberPage\n|TypeArgs.playerInstance=Class/Player\n|DescriptionShort=Sets the given player as network owner for this and all connected parts.\n|Description=$DESCRIPTION_SHORT\nWhen playerInstance is nil, the server will be the owner instead of a player.\n|SeeAlso=*[[NetworkOwnership]]\n}}","security":"None","uid":"blt68a602f939d5eeb8","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:54:19.849Z","updated_at":"2018-08-22T00:29:50.222Z","_version":16,"display_title":"SetNetworkOwner","api_dump_signature":"daef43b7438729cd68c629333484e99ab70e9238_v2","type":"","fast_flags":[],"published_at":"2019-06-14T22:20:49.477Z"},{"title":"BasePart:GetRootPart","url":"/api-reference/function/BasePart/GetRootPart","locale":"en-us","tags":[],"summary":"Returns the base part of an assembly of parts.","description":"Returns the base part of an assembly (a collection of parts connected together). When moving an assembly of parts using a <a href=\"/api-reference/datatype/CFrame\" title=\"CFrame\">CFrame</a> it is important to move this base part (this will move all other parts connected to it accordingly.","code_sample":[],"roblox_api_tags":[],"returns":[{"return_category":"Class","return_type":"Instance","summary":"The base part of an assembly (a collection of parts connected together)"}],"argument":[],"deprecation_message":"","wikitext":"{{APIMemberPage\n|MemberType=Function\n|TypeArgs.return=Class/BasePart\n|Description=Returns the base part of an assembly (a collection of parts connected together). When moving an assembly of parts using a [[CFrame]] it is important to move this base part (this will move all other parts connected to it accordingly.\n|DescriptionShort=Returns the base part of an assembly of parts.}}","security":"None","uid":"bltc6f65e8ac07b2fc5","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:49:18.710Z","updated_at":"2018-08-22T20:12:28.674Z","_version":14,"display_title":"GetRootPart","api_dump_signature":"90ddc306484189abd4cd7884b39db95d59354560_v2","type":"","fast_flags":[],"published_at":"2019-06-14T22:20:03.227Z"},{"title":"BasePart:GetMass","url":"/api-reference/function/BasePart/GetMass","locale":"en-us","tags":[],"summary":"Returns the part's mass based on the part's material and size","description":"The GetMass function returns the `BasePart|part's` mass. \n\nThis can vary depending on the part's `BasePart/Material|material` and the size. The `Enum/Material| material enum` page contains a table of all materials and their densities. Parts made of materials with greater densities have more mass than equally sized parts made of materials with lesser densities.\n\nNote that a part’s density differs from the densities listed on the [material][1] page if the part’s `BasePart/CustomPhysicalProperties` property is set.\n\nYou can also determine location of the part's center of mass via the `BasePart/CenterOfMass` property.\n\n  [1]: http://wiki.roblox.com/index.php?title=API:Enum/Material","code_sample":[{"title":"Finding a Part's Mass","display_title":"Finding a Part's Mass","code_summary":"This example creates a new part, myPart, in the game's Workspace, with dimensions 4x6x4 studs. The part is also anchored.\n\nThen, myMass is set to equal the mass of the new part. The mass of the part is printed at the end of the print statement:\n\n> My part's mass is ...","code_sample":"local myPart = Instance.new(\"Part\")\nmyPart.Parent = game.Workspace\nmyPart.Size = Vector3.new(4, 6, 4)\nmyPart.Anchored = true\n \nlocal myMass = myPart:GetMass()\n \nprint(\"My part's mass is \" .. myMass)","locale":"en-us","tags":[],"validated_in_version":"","comments_issues":"","uid":"blt6d4d0518ef399423","created_by":"blt056181872171cff69cfbc0c3","updated_by":"bltb3147545f90dee1b","created_at":"2018-06-05T10:10:49.899Z","updated_at":"2018-08-11T21:13:06.609Z","url":"/code-sample/BasePart-GetMass1","_version":12,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"duration":"","date":null,"sequence_number":null,"summary":"","expected_output":"","short_description":"","start_line_number":"","published_at":"2019-06-15T00:23:28.947Z"}],"roblox_api_tags":["CustomLuaState"],"returns":[{"return_category":"Primitive","return_type":"float","summary":"The part's mass"}],"argument":[],"deprecation_message":"","wikitext":"{{APIMemberPage\n|MemberType=Function\n|Description=Returns the object's mass. This can vary depending on the [[Material]] in use by the object, and the size of the object.\n|Example=\n{{lua|=\nlocal myPart = Instance.new(\"Part\")\nmyPart.Parent = game.Workspace\nmyPart.Size = Vector3.new(4, 6, 4)\nmyPart.Anchored = true\n \nlocal myMass = myPart:GetMass()\n \nprint(\"My part's mass is \" .. myMass)\n}}\n}}","security":"None","uid":"blt800a4be4372bed8a","created_by":"blt056181872171cff69cfbc0c3","updated_by":"bltb3147545f90dee1b","created_at":"2018-06-05T10:49:53.058Z","updated_at":"2018-09-18T00:05:39.664Z","_version":24,"display_title":"GetMass","api_dump_signature":"36f491084ca96b8e9cc694a200eb24b8db38d4c0_v2","type":"","fast_flags":[],"published_at":"2019-06-14T22:16:43.246Z"},{"title":"BasePart:SubtractAsync","display_title":"SubtractAsync","roblox_api_tags":["Yields"],"locale":"en-us","url":"/api-reference/function/BasePart/SubtractAsync","security":"None","argument":[{"category":"DataType","type":"Objects","name":"parts","default":"","summary":"The objects taking part in the subtraction"},{"category":"Enum","type":"CollisionFidelity","name":"collisionfidelity","default":"Default","summary":""},{"category":"Enum","type":"RenderFidelity","name":"renderFidelity","default":"Automatic","summary":""}],"returns":[{"return_category":"Class","return_type":"Instance","summary":"The resulting union from the subtraction operation"}],"uid":"blt5d6d393c0e0203ed","created_by":"blt917003a0d43f32d8","updated_by":"bltb3147545f90dee1b","created_at":"2018-09-06T22:17:54.636Z","updated_at":"2019-04-10T22:44:06.575Z","_version":26,"tags":[],"api_dump_signature":"070a2d8f6487f415b664d65ced9878abbb28c5e8_v2","type":"","summary":"Performs a subtraction Union operation on the calling `BasePart` and the list of parts passed in as the first parameter","description":"This is a server-only function that uses `articles/3D Modeling with Parts|CSG` to subtract the geometry of a table of `BasePart|BaseParts` from the calling BasePart.\n\n<div>\nThe following properties from the calling part will be applied to the resulting part:\n<div class=\"row\">\n<div class=\"col-auto\">\n<ul class=\"mb-0 mt-1\">\n<li>Color</li>\n<li>Material</li>\n<li>Reflectance</li>\n<li>Transparency</li>\n</ul>\n</div>\n<div class=\"col-auto\">\n<ul class=\"mb-0 mt-1\">\n<li>Anchored</li>\n<li>CanCollide</li>\n<li>Density</li>\n<li>Friction</li>\n</ul>\n</div>\n<div class=\"col-auto\">\n<ul class=\"mb-0 mt-1\">\n<li>Elasticity</li>\n<li>FrictionWeight</li>\n<li>ElasticityWeight</li>\n</ul>\n</div>\n</div>\n</div>\n\nThe resulting union instance will have a null parent and will be named “Union”. If the resulting union’s `PartOperation/UsePartColor` is false, it is rendered with face colors. Face colors of the result come from colors of its constituent parts. Its `PartOperation/UsePartColor|UsePartColor` property defaults to false and its `PartOperation/CollisionFidelity|CollisionFidelity` matches the provided enum.\n\nThe original parts remain in the same state and location in the game’s tree as before operation.\n\nThe code snippet below demonstrates how to perform the operation as described above:\n\n```lua\nlocal part = workspace.Part1\nlocal otherParts = {workspace.Part2, workspace.Part3, workspace.Part4}\n \n-- Perform union operation\nlocal newUnion = part:SubtractAsync(otherParts)\n```\n\nThe image below visualizes parts before and after the operation. The red negated parts are subtracted from the grey part.\n\n![SubtractAsync Visualization][1]\n\n<div class=\"alert alert-warning\" role=\"alert\">\nThe original parts remain unchanged following a successful subtract operation. In most cases, you should destroy all of the original parts and parent the returned <code>UnionOperation</code> to the same place as the calling <code>BasePart</code>.\n</div>\n\n## Potential Errors\n<ul class=\"mb-0\">\n<li>There is a limit to how many parts can be generated. If a union operation would result in a part with more than 5000 triangles, it will fail and Studio will alert you to the error in the Output window.</li>\n<li>A part made with solid modeling can only use <b>one</b> color and material. If you union two parts with different colors/materials, the result will use the characteristics of just one of the parts.</li>\n<li>A unioned or negated part can only be scaled uniformly (all of the dimensions must be scaled at the same proportion). If you need to change the size of just one part in a solid model construction, it may be easier to <span class=\"text-nowrap\">un-union</span> that part, resize it, and then redo the union process.</li>\n<li>This function can only be called from the server. It cannot be called by the client.</li>\n<li>All parts must be supported by CSG. Only `BasePart|BaseParts` are supported, not `Terrain` or meshes. If A union operation involving any non-supported part will fail and Studio will alert you to the error in the Output window.</li>\n<li>The resulting union cannot be empty due to subtractions. If a union operation would result in an empty part, it will fail and Studio will alert you to the error in the Output window.</li>\n</ul>\n\n## Solid-Modeling Playground\nNow that you understand basic in-game solid modeling, experience it within a sample place!\n\n<div class=\"card text-white bg-dark mb-3\">\n  <div class=\"card-body\">\n    <div class=\"row px-0\">\n      <div class=\"col-4 pr-3\"><a href=\"https://www.roblox.com/games/2309627316/Rotating-Windows\" target=\"_new\"><img src=\"/assets/5b5bb3c7ba048a343db85a65/In-Game-CSG-Playground1.jpg\" class=\"img-fluid half-sized mb-0\"></a></div>\n      <div class=\"col pl-0\">\n        <h4 class=\"card-title text-white\">Rotating Windows</h4>\n        <div class=\"text-white-50\">Blast pieces out of rotating windows or fuse new material onto them. Includes a helper module script that rebuilds mechanisms with constraints and attachments!</div>\n      </div>\n    </div>\n  </div>\n</div>\n\n\n## See also\n  - `articles/In Game Solid Modeling`, create custom plugins for solid modeling techniques like unions, negations, and separations\n  - `articles/3D Modeling with Parts`, how to combine and subtract parts to create complex solid shapes\n  - `articles/Making an Arch`, make an arch for your environment using the Negate tool\n\n\n  [1]: /assets/5cad5e7d23c3e3b178f1fb2f/SubtractAsync.jpg","code_sample":[{"title":"Basic SubtractAsync","url":"/code-samples/basic-subtractasync","display_title":"Basic In-Game Subtract Operation","duration":"","date":null,"sequence_number":null,"tutorial_category":[],"thumbnail_image":null,"summary":"<p>This example assumes there are three parts named **Part1**, **Part2**, and **Part3** in the `Workspace`. It creates a union by subtracting **Part2** and **Part3** from **Part1**, destroys the original parts, and inserts the resulting `UnionOperation`.</p>","short_description":"","code_summary":"This example assumes there are three parts named **Part1**, **Part2**, and **Part3** in the `Workspace`. It creates a union by subtracting **Part2** and **Part3** from **Part1**, destroys the original parts, and inserts the resulting `UnionOperation`.","start_line_number":"","code_sample":"local part = workspace.Part1\nlocal otherParts = {workspace.Part2, workspace.Part3}\n\n-- Perform subtract operation\nlocal newUnion = part:SubtractAsync(otherParts)\n\n-- Destroy source parts\npart:Destroy()\nfor _, otherPart in pairs(otherParts) do\n\totherPart:Destroy()\nend\n\n-- Insert new union into workspace\nnewUnion.Parent = workspace","expected_output":"","validated_in_version":"","comments_issues":"","tags":[],"locale":"en-us","uid":"bltb031e88c604036a1","created_by":"blt1135fe0153024444","updated_by":"blt47935daab13ee531","created_at":"2018-09-07T19:43:03.497Z","updated_at":"2019-02-08T19:13:05.052Z","_version":3,"highlight_lines":"","published_at":"2019-06-15T00:04:43.339Z"},{"title":"CSG Operations - Subtraction","url":"/code-samples/csg-operations---subtraction","display_title":"CSG Operations - Subtraction","duration":"","date":null,"sequence_number":null,"tutorial_category":[],"thumbnail_image":null,"summary":"","short_description":"","code_summary":"Let’s test out in-game solid modeling with a quick demo script! You can copy and paste this into a `Script` within `ServerScriptService`, or wherever is most convenient.\n\nIn this example, a basic order of operations occurs:\n\n1. A red glass window is created in the center of the place <span class=\"text-nowrap\">(lines 2-10)</span>.\n2. A smaller block is created in the center of the window part <span class=\"text-nowrap\">(lines 13-19)</span>.\n3. After 2 seconds, `BasePart/SubtractAsync|SubtractAsync()` is called on the window, using the smaller block as the part to subtract.\n\n<div class=\"alert alert-warning list-indent\" role=\"alert\">\nThere are a few reasons why an <span class=\"text-nowrap\">in-game</span> solid modeling operation may fail <span class=\"text-nowrap\">(see the API docs)</span>. Because of this, you should always use <code>pcall()</code> to catch any unexpected errors.\n</div>\n\n4. If successful, the resulting part is returned with a name of **Union**. This instance will **not** be parented to the workspace, so it's your job to parent it back into the game world.\n\n<div class=\"alert alert-danger list-indent\" role=\"alert\">\nThe original parts remain in the game, including both the instance that the operation is called on <span class=\"text-nowrap\">(<code>window</code>)</span> and the parts that are added to or subtracted from it <span class=\"text-nowrap\">(<code>subBlock</code>)</span>. As a result, these parts are explicitly destroyed following a successful modeling operation <span class=\"text-nowrap\">(lines 33-34)</span>.\n</div>","start_line_number":"","highlight_lines":"","code_sample":"-- Create a basic window part\nlocal window = Instance.new(\"Part\")\nwindow.Size = Vector3.new(10, 16, 0.5)\nwindow.Material = \"Glass\"\nwindow.BrickColor = BrickColor.new(\"Persimmon\")\nwindow.Reflectance = 0.2\nwindow.Transparency = 0.5\nwindow.Position = Vector3.new(0, 8, 0)\nwindow.Anchored = true\nwindow.Parent = game.Workspace\n \n-- Create a part to subtract from window\nlocal subBlock = Instance.new(\"Part\")\nsubBlock.Size = Vector3.new(4, 4, 4)\nsubBlock.Material = \"SmoothPlastic\"\nsubBlock.CanCollide = false\nsubBlock.Position = Vector3.new(0, 8, 0)\nsubBlock.Anchored = true\nsubBlock.Parent = game.Workspace\n \nwait(2)\n \n-- Subtract smaller block from window\nlocal success, newUnion = pcall(function()\n\treturn window:SubtractAsync({subBlock})\nend)\n \nif success and newUnion then\n\tnewUnion.Position = window.Position\n\tnewUnion.Anchored = true\n\tnewUnion.Parent = game.Workspace\n\t-- Remove original parts\n\twindow:Destroy()\n\tsubBlock:Destroy()\nend","expected_output":"","validated_in_version":"","comments_issues":"","tags":[],"locale":"en-us","uid":"blt4773e4baa3b2ca99","created_by":"bltb3147545f90dee1b","updated_by":"bltb3147545f90dee1b","created_at":"2019-04-10T03:30:30.456Z","updated_at":"2019-04-10T20:45:52.115Z","_version":2,"published_at":"2019-06-15T00:02:51.548Z"}],"fast_flags":[],"deprecation_message":"","wikitext":"","published_at":"2019-06-14T22:06:43.420Z"},{"title":"BasePart:UnionAsync","display_title":"UnionAsync","roblox_api_tags":["Yields"],"locale":"en-us","url":"/api-reference/function/BasePart/UnionAsync","security":"None","argument":[{"category":"DataType","type":"Objects","name":"parts","default":"","summary":"List of `Part|Parts` that are unioned with the calling part"},{"category":"Enum","type":"CollisionFidelity","name":"collisionfidelity","default":"Default","summary":"Optional `enum/CollisionFidelity|enum` argument that specifies how similar the collision model of this solid model is, compared to the actual geometry of the solid model. Defaults to Enum.CollisionFidelity.Default\n - Default - detailed geometry based on convex decomp representation\n - Hull - convex hull of the result\n - Box - bounding box"},{"category":"Enum","type":"RenderFidelity","name":"renderFidelity","default":"Automatic","summary":"Optional `enum/RenderFidelity|enum` argument that specifies the level of detail that solid-modeled parts will be shown in\n - Automatic - Dynamically control a solid-modeled part’s level of detail depending on its distance from the camera (see table above)\n - Precise - Specifically set a solid-modeled part’s level of detail regardless of its distance from the camera (lowest, medium, or highest)"}],"returns":[{"return_category":"Class","return_type":"Instance","summary":"Resulting `UnionOperation` with default name “Union”"}],"uid":"bltd5fc09aeba1cf9ca","created_by":"blt917003a0d43f32d8","updated_by":"bltb3147545f90dee1b","created_at":"2018-09-06T22:17:55.365Z","updated_at":"2019-04-10T22:47:31.632Z","_version":33,"tags":[],"api_dump_signature":"523557e394eb555f0ba869342ecbab99162891fc_v2","type":"","summary":"Performs a Union operation on the calling `BasePart` and the list of parts passed in as the first parameter","description":"This is a server-only function that uses `articles/3D Modeling with Parts|CSG` to combine the geometry of the calling `BasePart` with a table of other BaseParts. <div>\nThe following properties from the calling part will be applied to the resulting part:\n<div class=\"row\">\n<div class=\"col-auto\">\n<ul class=\"mb-0 mt-1\">\n<li>Color</li>\n<li>Material</li>\n<li>Reflectance</li>\n<li>Transparency</li>\n</ul>\n</div>\n<div class=\"col-auto\">\n<ul class=\"mb-0 mt-1\">\n<li>Anchored</li>\n<li>CanCollide</li>\n<li>Density</li>\n<li>Friction</li>\n</ul>\n</div>\n<div class=\"col-auto\">\n<ul class=\"mb-0 mt-1\">\n<li>Elasticity</li>\n<li>FrictionWeight</li>\n<li>ElasticityWeight</li>\n</ul>\n</div>\n</div>\n</div>\n\nThe resulting union instance will have a null parent and will be named “Union”. If the resulting union’s `PartOperation/UsePartColor` is false, it is rendered with face colors. Face colors of the result come from colors of its constituent parts. Its `PartOperation/UsePartColor|UsePartColor` property defaults to false and its `PartOperation/CollisionFidelity|CollisionFidelity` matches the provided enum.\n\nThe original parts remain in the same state and location in the game’s tree as before operation.\n\nThe code snippet below demonstrates how to perform the operation as described above:\n\n```lua\nlocal part = workspace.Part1\nlocal otherParts = {workspace.Part2, workspace.Part3, workspace.Part4}\n \n-- Perform union operation\nlocal newUnion = part:UnionAsync(otherParts)\n```\nThe image below visualizes parts before and after the operation. The green parts are combined with the grey part.\n\n![Union Visualization][1]\n\n<div class=\"alert alert-primary\" role=\"alert\">\nNote that if a <code>NegateOperation</code> is provided, it will also be unioned additively. For subtraction, use <code>BasePart/SubtractAsync|SubtractAsync()</code>.\n</div>\n\n<div class=\"alert alert-warning\" role=\"alert\">\nThe original parts remain unchanged following a successful union operation. In most cases, you should destroy all of the original parts and parent the returned <code>UnionOperation</code> to the same place as the calling <code>BasePart</code>.\n</div>\n\n## Potential Errors\n<ul class=\"mb-0\">\n<li>There is a limit to how many parts can be generated. If a union operation would result in a part with more than 5000 triangles, it will fail and Studio will alert you to the error in the Output window.</li>\n<li>A part made with solid modeling can only use <b>one</b> color and material. If you union two parts with different colors/materials, the result will use the characteristics of just one of the parts.</li>\n<li>A unioned or negated part can only be scaled uniformly (all of the dimensions must be scaled at the same proportion). If you need to change the size of just one part in a solid model construction, it may be easier to <span class=\"text-nowrap\">un-union</span> that part, resize it, and then redo the union process.</li>\n<li>This function can only be called from the server. It cannot be called by the client.</li>\n<li>All parts must be supported by CSG. Only `BasePart|BaseParts` are supported, not `Terrain` or meshes. If A union operation involving any non-supported part will fail and Studio will alert you to the error in the Output window.</li>\n<li>The resulting union cannot be empty due to subtractions. If a union operation would result in an empty part, it will fail and Studio will alert you to the error in the Output window.</li>\n</ul>\n\n## Solid-Modeling Playground\nNow that you understand basic in-game solid modeling, experience it within a sample place!\n\n<div class=\"card text-white bg-dark mb-3\">\n  <div class=\"card-body\">\n    <div class=\"row px-0\">\n      <div class=\"col-4 pr-3\"><a href=\"https://www.roblox.com/games/2309627316/Rotating-Windows\" target=\"_new\"><img src=\"/assets/5b5bb3c7ba048a343db85a65/In-Game-CSG-Playground1.jpg\" class=\"img-fluid half-sized mb-0\"></a></div>\n      <div class=\"col pl-0\">\n        <h4 class=\"card-title text-white\">Rotating Windows</h4>\n        <div class=\"text-white-50\">Blast pieces out of rotating windows or fuse new material onto them. Includes a helper module script that rebuilds mechanisms with constraints and attachments!</div>\n      </div>\n    </div>\n  </div>\n</div>\n\n## See also\n  - `articles/In Game Solid Modeling`, create custom plugins for solid modeling techniques like unions, negations, and separations\n  - `articles/3D Modeling with Parts`, how to combine and subtract parts to create complex solid shapes\n  - `articles/Making an Arch`, make an arch for your environment using the Negate tool\n\n\n  [1]: /assets/5cad525c4a3a4aa802c91f88/UnionAsync.jpg","code_sample":[{"title":"Basic UnionAsync","url":"/code-samples/basic-unionasync","display_title":"Basic In-Game Union Operation","duration":"","date":null,"sequence_number":null,"tutorial_category":[],"thumbnail_image":null,"summary":"<p>This example assumes there are three parts named **Part1**, **Part2**, and **Part3** in the `Workspace`. It creates a union, destroys the original parts, then inserts the resulting `UnionOperation`.</p>","short_description":"","code_summary":"This example assumes there are three parts named **Part1**, **Part2**, and **Part3** in the `Workspace`. It creates a union, destroys the original parts, then inserts the resulting `UnionOperation`.","start_line_number":"","code_sample":"local part = workspace.Part1\nlocal otherParts = {workspace.Part2, workspace.Part3}\n\n-- Perform union operation\nlocal newUnion = part:UnionAsync(otherParts)\n\n-- Destroy source parts\npart:Destroy()\nfor _, otherPart in pairs(otherParts)\n\totherPart:Destroy()\nend\n\n-- Insert new union into workspace\nnewUnion.Parent = workspace","expected_output":"","validated_in_version":"","comments_issues":"","tags":[],"locale":"en-us","uid":"bltd240eae28c6faacb","created_by":"blt1135fe0153024444","updated_by":"blt1135fe0153024444","created_at":"2018-09-07T19:21:39.940Z","updated_at":"2018-09-07T19:27:22.727Z","_version":3,"published_at":"2019-06-15T00:20:23.695Z"}],"fast_flags":[],"deprecation_message":"","wikitext":"","published_at":"2019-06-14T22:06:41.313Z"}],"event":[{"title":"BasePart.Touched","summary":"Fired when a part comes in contact with another part","description":"The Touched event fires when a part comes in contact with another part. For instance, if PartA bumps into PartB, then PartA.Touched fires with PartB, and PartB fires with PartA.\n\nThis event only fires as a result of physics movement, so it will not fire if the CFrame property was changed such that the part overlaps another part. This also means that at least one of the parts involved must not be `/BasePart/Anchored` at the time of the collision.\n\nMany types of parts are removed or destroyed as soon as they hit another part. This means that it is possible for the other part's `/Instance/Parent` to be nil. Be sure to check that `otherPart.Parent` is not nil before using it, such as calling `/Instance/FindFirstChild`.","code_sample":[{"title":"Model Touched","url":"/code-sample/Model-Touched","display_title":"Model Touched","code_summary":"This code sample demonstrates how to connect the Touched event of multiple parts in a Model to one function.","code_sample":"local model = script.Parent\n\nlocal function onModelTouched(part)\n\t-- Filter any instances of the model coming in contact with itself\n\tif part:IsDescendantOf(model) then return end\n\tprint(model:GetFullName() .. \" was touched by \" .. part:GetFullName())\nend\n\nfor _, child in pairs(model:GetChildren()) do\n\tif child:IsA(\"BasePart\") then\n\t\tchild.Touched:Connect(onModelTouched)\n\tend\nend\n","validated_in_version":"0. 335. 0. 197549","comments_issues":"","tags":[],"locale":"en-us","uid":"blt2eabec3e9a670416","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:03:04.970Z","updated_at":"2018-10-01T08:29:55.611Z","_version":10,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"published_at":"2019-06-15T00:14:43.335Z"},{"title":"Touching Parts Count","url":"/code-sample/Touching-Parts-Count","display_title":"Touching Parts Count","code_summary":"This code sample creates a BillboardGui on a part that displays the number of parts presently touching it.","code_sample":"local part = script.Parent\n\n-- Create a BillboardGui\nlocal bbgui = Instance.new(\"BillboardGui\", part)\nbbgui.Size = UDim2.new(0, 200, 0, 50)\nbbgui.Adornee = part\nbbgui.AlwaysOnTop = true\nlocal tl = Instance.new(\"TextLabel\", bbgui)\ntl.Size = UDim2.new(1, 0, 1, 0)\ntl.BackgroundTransparency = 1\n\nlocal numTouchingParts = 0\n\nlocal function onTouch(part)\n\tprint(\"Touch started: \" .. part.Name)\n\tnumTouchingParts = numTouchingParts + 1\n\ttl.Text = numTouchingParts\nend\n\nlocal function onTouchEnded(part)\n\tprint(\"Touch ended: \" .. part.Name)\n\tnumTouchingParts = numTouchingParts - 1\n\ttl.Text = numTouchingParts\nend\n\npart.Touched:Connect(onTouch)\npart.TouchEnded:Connect(onTouchEnded)\n","validated_in_version":"0. 335. 0. 197549","comments_issues":"","tags":[],"locale":"en-us","uid":"blt0e24261f5e868884","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:03:06.380Z","updated_at":"2018-10-01T08:29:58.494Z","_version":11,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"published_at":"2019-06-15T00:14:41.118Z"},{"title":"Touch Blink","display_title":"Touch Blink","code_summary":"This code sample causes a part to blink its Reflectance and a PointLight every time it is touched. It uses a pattern that prevents multiple concurrent function calls from fighting with each other.","code_sample":"local part = script.Parent\n\n-- Add a light\nlocal pointLight = Instance.new(\"PointLight\", part)\npointLight.Brightness = 0\npointLight.Range = 12\n\nlocal touchNo = 0\nlocal function blink()\n\t-- Advance touchNo to tell other blink() calls to stop early\n\ttouchNo = touchNo + 1\n\t-- Save touchNo locally so we can tell when it changes globally\n\tlocal myTouchNo = touchNo\n\tfor i = 1, 0, -.1 do\n\t\t-- Stop early if another blink started\n\t\tif touchNo ~= myTouchNo then break end\n\t\t-- Update the blink animation\n\t\tpart.Reflectance = i\n\t\tpointLight.Brightness = i * 2\n\t\twait(0.05)\n\tend\nend\n\npart.Touched:Connect(blink)\n","validated_in_version":"0. 334. 0. 195932","comments_issues":"Perhaps this pattern needs more explaining, but it seems thoroughly described as is. Feel free to add more thoughts on it. -HG","tags":[],"locale":"en-us","uid":"bltc22a199d49a4793f","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:03:23.668Z","updated_at":"2018-10-01T08:30:01.226Z","url":"/code-sample/Touch-Blink","_version":11,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"published_at":"2019-06-15T00:14:38.845Z"}],"wikitext":"{{APIMemberPage\n|ClassName=BasePart\n|MemberType=Event\n|TypeArgs.otherPart=Class/BasePart\n|Description=Fired when another object comes in contact with this object.\n|Example=This code would print the name of any object touching the part:\n{{Lua|=\nWorkspace.Part.Touched:connect(function(otherPart)\n  print(otherPart)\nend)\n}}\n|Notes=\n* This event does not fire if the part is being CFramed through something. \n* Lots of objects (such as projectiles in weapons) have scripts that remove a part as soon as it hits something. This means that it is possible for the otherPart argument's Parent to be nil. Scripts that use the Touched event should check for this, otherwise they will break if they try to use members of otherPart's parent.\n|Tutorials=\n* [[Lighting Parts on Fire]]\n* [[Making a Health Pickup]]\n}}","security":"None","roblox_api_tags":[],"argument":[{"type":"Instance","name":"otherPart","default":"","summary":"The other part that came in contact with the given part."}],"deprecation_message":"","locale":"en-us","tags":[],"uid":"blt844ab383b6c23a8c","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:26:47.415Z","updated_at":"2018-07-24T01:13:44.146Z","_version":13,"display_title":"Touched","api_dump_signature":"d052248648edf26c76ae0b6adb29779f0e98fb6b_v2","api_event_url":"/api-reference/event/BasePart/Touched","type":"RBXScriptSignal","url":"/api-reference/event/BasePart/Touched","published_at":"2019-06-14T22:02:05.002Z"},{"title":"BasePart.TouchEnded","summary":"Fired when a part stops touching another part.","description":"Fired when a `BasePart|part` stops touching another part. This event fires under similar conditions to those of `/BasePart/Touched`.","code_sample":[{"title":"Touching Parts Count","url":"/code-sample/Touching-Parts-Count","display_title":"Touching Parts Count","code_summary":"This code sample creates a BillboardGui on a part that displays the number of parts presently touching it.","code_sample":"local part = script.Parent\n\n-- Create a BillboardGui\nlocal bbgui = Instance.new(\"BillboardGui\", part)\nbbgui.Size = UDim2.new(0, 200, 0, 50)\nbbgui.Adornee = part\nbbgui.AlwaysOnTop = true\nlocal tl = Instance.new(\"TextLabel\", bbgui)\ntl.Size = UDim2.new(1, 0, 1, 0)\ntl.BackgroundTransparency = 1\n\nlocal numTouchingParts = 0\n\nlocal function onTouch(part)\n\tprint(\"Touch started: \" .. part.Name)\n\tnumTouchingParts = numTouchingParts + 1\n\ttl.Text = numTouchingParts\nend\n\nlocal function onTouchEnded(part)\n\tprint(\"Touch ended: \" .. part.Name)\n\tnumTouchingParts = numTouchingParts - 1\n\ttl.Text = numTouchingParts\nend\n\npart.Touched:Connect(onTouch)\npart.TouchEnded:Connect(onTouchEnded)\n","validated_in_version":"0. 335. 0. 197549","comments_issues":"","tags":[],"locale":"en-us","uid":"blt0e24261f5e868884","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:03:06.380Z","updated_at":"2018-10-01T08:29:58.494Z","_version":11,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"published_at":"2019-06-15T00:14:41.118Z"}],"wikitext":"{{APIMemberPage\n|ClassName=BasePart\n|MemberType=Event\n|TypeArgs.otherPart=Class/BasePart\n|Description=Fired when otherPart stops touching this object. \n|Example=This code would print the name of any object which stopped touching a part in Workspace:\n{{Lua|=\nWorkspace.Part.TouchEnded:connect(function(otherPart)\n  print(otherPart)\nend)\n}}\n}}","security":"None","roblox_api_tags":[],"argument":[{"type":"Instance","name":"otherPart","default":"","summary":""}],"deprecation_message":"","locale":"en-us","tags":[],"uid":"blt9b15847f35f44e8f","created_by":"blt056181872171cff69cfbc0c3","updated_by":"bltb3147545f90dee1b","created_at":"2018-06-05T10:26:48.772Z","updated_at":"2018-08-09T00:36:08.229Z","_version":14,"display_title":"TouchEnded","api_dump_signature":"e4f68b20baa0f378c9156bcd4f1e021e9cf35451_v2","api_event_url":"/api-reference/event/BasePart/TouchEnded","type":"RBXScriptSignal","url":"/api-reference/event/BasePart/TouchEnded","published_at":"2019-06-14T21:59:21.128Z"}],"callback":[],"locale":"en-us","tags":["abstract"],"uid":"bltc770f5a425a11e88","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T12:43:40.615Z","updated_at":"2019-04-18T01:31:32.141Z","_version":27,"class_url":"/api-reference/class/BasePart","url":"/api-reference/class/BasePart","api_dump_signature":"a30e15b82ad354182f10a414afb861c45950994c_v2","deprecated_property":[{"title":"BasePart.Friction","type":"float","locale":"en-us","tags":[],"summary":"Used to control the Friction of the part, but now it no longer does anything.","description":"Used to control the Friction of the part, but now it no longer does anything. The Friction of a part is now determined by either its <a href=\"/api-reference/property/BasePart/Material\" class=\"mw-redirect\" title=\"Material\">Material</a> or its <a href=\"/api-reference/property/BasePart/CustomPhysicalProperties\" class=\"mw-redirect\" title=\"CustomPhysicalProperties\">CustomPhysicalProperties</a>.","code_sample":[],"serialization":{"can_save":false,"can_load":true},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"This is only one of multiple physics-related properties. It has been deprecated in favor of `/BasePart/CustomPhysicalProperties`, which combines these properties into one.","api_property_url":"/api-reference/property/BasePart/Friction","roblox_api_tags":["Hidden","NotReplicated","Deprecated"],"studio_category":"Part ","script_editor_context":[],"wiki_text_reference":"{{APIMemberPage\n|Description=$DESCRIPTION_SHORT The Friction of a part is now determined by either its [[Material]] or its [[CustomPhysicalProperties]].\n|DescriptionShort=Used to control the Friction of the part, but now it no longer does anything.\n}}","uid":"blt022e400e250d7fe9","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T12:09:09.967Z","updated_at":"2018-08-23T20:16:58.432Z","_version":15,"display_title":"Friction","api_dump_signature":"2c50cdd8a28bfb2e4a163c21d72edc4c6d6fa774_v2","url":"/api-reference/property/BasePart/Friction","type_category":"Primitive","published_at":"2019-06-14T22:53:16.439Z"},{"title":"BasePart.brickColor","type":"BrickColor","locale":"en-us","tags":[],"summary":"","description":"","code_sample":[],"serialization":{"can_save":false,"can_load":true},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"This deprecated property is an old Camel Case variant of the Pascal Case `BasePart/BrickColor`, which should be used instead.","api_property_url":"/api-reference/property/BasePart/brickColor","roblox_api_tags":["NotReplicated","Deprecated"],"studio_category":"Appearance","script_editor_context":[],"wiki_text_reference":"Error fetching documentation from Wiki","uid":"blteaf525d3ac6bbc90","created_by":"blt056181872171cff69cfbc0c3","updated_by":"bltb3147545f90dee1b","created_at":"2018-06-05T12:09:15.334Z","updated_at":"2019-01-20T03:43:51.688Z","_version":10,"display_title":"brickColor","api_dump_signature":"76d6a24450e748e733df69b51ebe4d9e11a3ebe7_v2","url":"/api-reference/property/BasePart/brickColor","type_category":"DataType","fast_flags":[],"published_at":"2019-06-14T22:45:40.164Z"},{"title":"BasePart.Elasticity","type":"float","locale":"en-us","tags":[],"summary":"Used to control the Elasticity of the part, but it no longer does anything","description":"The Elasticity of a part is now determined by either its `Material` or its `CustomPhysicalProperties`.","code_sample":[],"serialization":{"can_save":false,"can_load":true},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"This is only one of multiple physics-related properties. It has been deprecated in favor of `BasePart/CustomPhysicalProperties`, which combines these properties into one.","api_property_url":"/api-reference/property/BasePart/Elasticity","roblox_api_tags":["Hidden","NotReplicated","Deprecated"],"studio_category":"Part ","script_editor_context":[],"wiki_text_reference":"{{APIMemberPage\n|Description=$DESCRIPTION_SHORT\nThe Elasticity of a part is now determined by either its [[Material]] or its [[CustomPhysicalProperties]].\n|DescriptionShort=Used to control the Elasticity of the part, but now it no longer does anything.\n}}","uid":"blt3bc59a8b45e673e8","created_by":"blt056181872171cff69cfbc0c3","updated_by":"bltb3147545f90dee1b","created_at":"2018-06-05T12:09:08.638Z","updated_at":"2019-01-20T03:46:30.869Z","_version":10,"display_title":"Elasticity","api_dump_signature":"bfe973d9247e972b9b4a0eba589fcc4e46f9905e_v2","url":"/api-reference/property/BasePart/Elasticity","type_category":"Primitive","fast_flags":[],"published_at":"2019-06-14T22:45:37.982Z"},{"title":"BasePart.SpecificGravity","type":"float","locale":"en-us","tags":[],"summary":"The ratio of the part's density to the density of water determined by the `BasePart/Material`","description":"The ratio of the part's density to the density of water determined by the `BasePart/Material`. Effects the part's behavior when in a water terrain cell. Essentially, SpecificGravity refers to how many times more dense a part is than water.\n\n<table class=\"table table-striped table-bordered w-75\">\n\t<thead class=\"thead-dark\">\n\t\t<tr>\n\t\t\t<th scope=\"col\" class=\"text-nowrap\">Material</th>\n\t\t\t<th scope=\"col\" class=\"text-nowrap\">SpecificGravity</th>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Plastic</td>\n\t\t\t<td>0.7</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Wood</td>\n\t\t\t<td>0.35</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Slate</td>\n\t\t\t<td>2.7</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Concrete</td>\n\t\t\t<td>2.4</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>CorrodedMetal</td>\n\t\t\t<td>7.85</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>DiamondMetal</td>\n\t\t\t<td>7.85</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Foil</td>\n\t\t\t<td>7.6</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Grass</td>\n\t\t\t<td>0.9</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Ice</td>\n\t\t\t<td>0.91</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Marble</td>\n\t\t\t<td>2.56</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Granite</td>\n\t\t\t<td>2.7</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Brick</td>\n\t\t\t<td>1.92</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Pebble</td>\n\t\t\t<td>2.4</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Sand</td>\n\t\t\t<td>1.6</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Fabric</td>\n\t\t\t<td>0.7</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>SmoothPlastic</td>\n\t\t\t<td>0.7</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Metal</td>\n\t\t\t<td>7.85</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>WoodPlanks</td>\n\t\t\t<td>0.35</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Cobblestone</td>\n\t\t\t<td>2.7</td>\n\t\t</tr>\n\t</thead>\n</table>","code_sample":[],"serialization":{"can_save":false,"can_load":false},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"This item is deprecated. See `BasePart/CustomPhysicalProperties` to see how to configure the physical properties of BaseParts. Do not use it for new work.","api_property_url":"/api-reference/property/BasePart/SpecificGravity","roblox_api_tags":["ReadOnly","NotReplicated","Deprecated"],"studio_category":"Data","script_editor_context":[],"wiki_text_reference":"{{EmphasisBox|This property is obsolete. See {{api|BasePart.CustomPhysicalProperties}} to see how to configure the physical properties of BaseParts.|red|dark=yes}}\n{{APIMemberPage\n|MemberType=Property\n|Description=The ratio of the part's density to the density of water determined by the [[API:Class/BasePart/Material|Material]]. Effects the part's behavior when in a water terrain cell. Essentially, SpecificGravity refers to how many times more dense a part is than water.\n|DescriptionShort=The ratio of the part's density to the density of water determined by the [[API:Class/BasePart/Material|Material]].\n|Notes=}}\n{| class=\"wikitable\"\n|-\n! Material !! SpecificGravity\n|-\n| Plastic || 0.7\n|-\n| Wood || 0.35\n|-\n| Slate || 2.7\n|-\n| Concrete || 2.4\n|-\n| CorrodedMetal || 7.85\n|-\n| DiamondPlate || 7.85\n|-\n| Foil || 7.6\n|-\n| Grass || 0.9\n|-\n| Ice || 0.91\n|-\n| Marble || 2.56\n|-\n| Granite || 2.7\n|-\n| Brick || 1.92\n|-\n| Pebble || 2.4\n|-\n| Sand || 1.6\n|-\n| Fabric || 0.7\n|-\n| SmoothPlastic || 0.7\n|-\n| Metal || 7.85\n|-\n| WoodPlanks || 0.35\n|-\n| Cobblestone || 2.7\n|-\n|}","uid":"blt3570ec4142385124","created_by":"blt056181872171cff69cfbc0c3","updated_by":"bltb3147545f90dee1b","created_at":"2018-06-05T11:59:15.362Z","updated_at":"2019-01-20T04:40:53.271Z","_version":10,"display_title":"SpecificGravity","api_dump_signature":"9894485c537e54fa408b9b692c02592a5395dbcf_v2","url":"/api-reference/property/BasePart/SpecificGravity","type_category":"Primitive","fast_flags":[],"published_at":"2019-06-14T22:45:35.770Z"}],"deprecated_function":[{"title":"BasePart:getMass","url":"/api-reference/function/BasePart/getMass","locale":"en-us","tags":[],"summary":"","description":"","code_sample":[],"roblox_api_tags":["Deprecated","CustomLuaState"],"returns":[{"return_category":"Primitive","return_type":"float","summary":""}],"argument":[],"deprecation_message":"This Camel Case property has been deprecated in favor of its Pascal Case variant, `BasePart/GetMass`.","wikitext":"Error fetching documentation from Wiki","security":"None","uid":"bltb09b3385f9c1a1f1","created_by":"blt056181872171cff69cfbc0c3","updated_by":"bltb3147545f90dee1b","created_at":"2018-06-05T10:43:10.634Z","updated_at":"2019-01-20T03:25:55.860Z","_version":10,"display_title":"getMass","api_dump_signature":"deca4c1f5b39dbe045e47918c3d8e65b46b41b68_v2","type":"","fast_flags":[],"published_at":"2019-06-14T22:12:31.057Z"},{"title":"BasePart:breakJoints","url":"/api-reference/function/BasePart/breakJoints","locale":"en-us","tags":[],"summary":"","description":"","code_sample":[],"roblox_api_tags":["Deprecated"],"returns":[{"return_category":"Primitive","return_type":"void","summary":"No return"}],"argument":[],"deprecation_message":"This deprecated function is a variant of `BasePart/BreakJoints` which should be used instead.","wikitext":"","security":"None","uid":"blt097e00fc6789af5f","created_by":"blt056181872171cff69cfbc0c3","updated_by":"bltb3147545f90dee1b","created_at":"2018-06-05T10:42:59.095Z","updated_at":"2019-01-20T03:36:51.780Z","_version":12,"display_title":"breakJoints","api_dump_signature":"ae8ebc4ee8fcf12a47b9ea44e53af5db3add22e8_v2","type":"","fast_flags":[],"published_at":"2019-06-14T22:12:28.933Z"},{"title":"BasePart:GetRenderCFrame","url":"/api-reference/function/BasePart/GetRenderCFrame","locale":"en-us","tags":[],"summary":"*(OBSOLETE)* Returns a CFrame describing where the part is being rendered at","description":"This function used to be relevant when Roblox's lag-compensating interpolation of parts online was internal. The interpolation is now applied to the `CFrame` directly.","code_sample":[],"roblox_api_tags":["Deprecated"],"returns":[{"return_category":"DataType","return_type":"CFrame","summary":""}],"argument":[],"deprecation_message":"This item is been deprecated since interpolation is now applied to the `CFrame` directly. Do not use it for new work.","wikitext":"{{Clientside|Type=method}}\n{{APIMemberPage\n|DescriptionShort='''(OBSOLETE)''' Returns a CFrame describing where the part is being rendered at.\n|Description=$DESCRIPTION_SHORT\nThis function used to be relevant when Roblox's lag-compensating interpolation of parts online was internal. The interpolation is now applied to the CFrame directly.\n}}","security":"None","uid":"blt94e27c66d3b427ce","created_by":"blt056181872171cff69cfbc0c3","updated_by":"bltb3147545f90dee1b","created_at":"2018-06-05T10:36:55.061Z","updated_at":"2019-01-20T03:38:25.524Z","_version":10,"display_title":"GetRenderCFrame","api_dump_signature":"e352247976f4553659c498ae9c9a35f52fcb6ff8_v2","type":"","fast_flags":[],"published_at":"2019-06-14T22:12:26.895Z"},{"title":"BasePart:makeJoints","url":"/api-reference/function/BasePart/makeJoints","locale":"en-us","tags":[],"summary":"","description":"","code_sample":[],"roblox_api_tags":["Deprecated"],"returns":[{"return_category":"Primitive","return_type":"void","summary":""}],"argument":[],"deprecation_message":"This deprecated function is a variant of `BasePart/MakeJoints` which should be used instead.","wikitext":"Error fetching documentation from Wiki","security":"None","uid":"blt323b949e2c59fde7","created_by":"blt056181872171cff69cfbc0c3","updated_by":"bltb3147545f90dee1b","created_at":"2018-06-05T10:43:00.431Z","updated_at":"2019-01-20T03:39:45.140Z","_version":11,"display_title":"makeJoints","api_dump_signature":"c03c59006da97512d6c2f209b7814dc1eec8a2c3_v2","type":"","fast_flags":[],"published_at":"2019-06-14T22:12:24.758Z"},{"title":"BasePart:resize","url":"/api-reference/function/BasePart/resize","locale":"en-us","tags":[],"summary":"","description":"","code_sample":[],"roblox_api_tags":["Deprecated"],"returns":[{"return_category":"Primitive","return_type":"bool","summary":""}],"argument":[{"category":"Enum","type":"NormalId","name":"normalId","default":"","summary":""},{"category":"Primitive","type":"int","name":"deltaAmount","default":"","summary":""}],"deprecation_message":"This deprecated function is a variant of `BasePart/Resize` which should be used instead.","wikitext":"Error fetching documentation from Wiki","security":"None","uid":"bltf8a77dae022add8f","created_by":"blt056181872171cff69cfbc0c3","updated_by":"bltb3147545f90dee1b","created_at":"2018-06-05T10:42:57.772Z","updated_at":"2019-01-20T03:39:55.351Z","_version":10,"display_title":"resize","api_dump_signature":"f3da1ba3b9d2f32fbc3220c3383ecd8ba1f0c584_v2","type":"","fast_flags":[],"published_at":"2019-06-14T22:12:22.615Z"}],"deprecated_event":[{"title":"BasePart.LocalSimulationTouched","summary":".","description":"Fired when another part comes in contact with another object. This event only sends data to the client notifying it that two parts have collided, whereas `BasePart/Touched` sends data to the server.","code_sample":[{"title":"BasePart.LocalSimulationTouched","display_title":"BasePart.LocalSimulationTouched","code_summary":"","code_sample":"Workspace.Part.LocalSimulationTouched:Connect(function(p)\n    print(p.Name)\nend)\n","locale":"en-us","tags":[],"validated_in_version":"","comments_issues":"","uid":"bltab565a7bf009c16b","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt47935daab13ee531","created_at":"2018-06-05T10:11:26.398Z","updated_at":"2018-06-28T21:47:46.745Z","url":"/code-sample/BasePart-LocalSimulationTouched1","_version":11,"tutorial_category":[],"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"duration":"","date":null,"sequence_number":null,"summary":"","expected_output":"","published_at":"2019-06-15T00:32:00.216Z"}],"wikitext":"{{APIMemberPage\n|MemberType=Event\n|ClassName=BasePart\n|TypeArgs.part=Class/BasePart\n|Description=Fired when another part comes in contact with another object. This event only sends data to the client notifying it that two parts have collided, whereas [[API:Class/BasePart/Touched|Touched]] sends data to the server.\n|Example=\n{{Lua|=\nWorkspace.Part.LocalSimulationTouched:connect(function(p)\n    print(p.Name)\nend)\n}}\n}}","security":"None","roblox_api_tags":["Deprecated"],"argument":[{"type":"Instance","name":"part","default":"","summary":""}],"deprecation_message":"This event is deprecated in favor of `/BasePart/Touched`.","locale":"en-us","tags":[],"uid":"bltfa68009c47329ce4","created_by":"blt056181872171cff69cfbc0c3","updated_by":"bltb3147545f90dee1b","created_at":"2018-06-05T10:26:54.359Z","updated_at":"2019-01-20T03:47:06.084Z","_version":14,"display_title":"LocalSimulationTouched","api_dump_signature":"6d111d596dd360c8a9212f5abd9d46517790d24f_v2","api_event_url":"/api-reference/event/BasePart/LocalSimulationTouched","type":"RBXScriptSignal","url":"/api-reference/event/BasePart/LocalSimulationTouched","fast_flags":[],"published_at":"2019-06-14T21:54:57.772Z"},{"title":"BasePart.OutfitChanged","summary":".","description":"Fired if the part's appearance is affected by the `Shirt` class.","code_sample":[],"wikitext":"{{APIMemberPage\n|MemberType=Event\n|Description=Fired if the part's appearance is affected by the {{api|Shirt}} or {{api|Pants}} class.\n}}","security":"None","roblox_api_tags":["Deprecated"],"argument":[],"deprecation_message":"This event is deprecated. Do not use it for new work.","locale":"en-us","tags":[],"uid":"blte591c5f295fc9653","created_by":"blt056181872171cff69cfbc0c3","updated_by":"bltb3147545f90dee1b","created_at":"2018-06-05T10:26:51.411Z","updated_at":"2019-01-20T03:48:45.892Z","_version":14,"display_title":"OutfitChanged","api_dump_signature":"604e894e7c6f8d65258a9a39307559d8120af4ec_v2","api_event_url":"/api-reference/event/BasePart/OutfitChanged","type":"RBXScriptSignal","url":"/api-reference/event/BasePart/OutfitChanged","fast_flags":[],"published_at":"2019-06-14T21:54:55.660Z"},{"title":"BasePart.StoppedTouching","summary":".","description":".","code_sample":[],"wikitext":"{{APIMemberPage\n|MemberType=Event\n|TypeArgs.otherPart=Class/BasePart\n|Description=}}","security":"None","roblox_api_tags":["Deprecated"],"argument":[{"type":"Instance","name":"otherPart","default":"","summary":""}],"deprecation_message":"This event is deprecated in favor of `BasePart/TouchEnded`, which should be used instead.","locale":"en-us","tags":[],"uid":"blt4faec923698a46c4","created_by":"blt056181872171cff69cfbc0c3","updated_by":"bltb3147545f90dee1b","created_at":"2018-06-05T10:26:50.091Z","updated_at":"2019-01-20T04:47:37.978Z","_version":14,"display_title":"StoppedTouching","api_dump_signature":"0b07a4753c97c94a5df6057da88ff0265b3ff4d9_v2","api_event_url":"/api-reference/event/BasePart/StoppedTouching","type":"RBXScriptSignal","url":"/api-reference/event/BasePart/StoppedTouching","fast_flags":[],"published_at":"2019-06-14T21:54:53.660Z"},{"title":"BasePart.touched","summary":"","description":"","code_sample":[],"wikitext":"Error fetching documentation from Wiki","security":"None","roblox_api_tags":["Deprecated"],"argument":[{"type":"Instance","name":"otherPart","default":"","summary":""}],"deprecation_message":"This deprecated event is a variant of `BasePart/Touched` which should be used instead.","locale":"en-us","tags":[],"uid":"blt369dad300f5a33eb","created_by":"blt056181872171cff69cfbc0c3","updated_by":"bltb3147545f90dee1b","created_at":"2018-06-05T10:26:55.681Z","updated_at":"2019-01-20T04:58:50.826Z","_version":15,"display_title":"touched","api_dump_signature":"be1e4566e845cafcf7257e67d0d295e06f80cd60_v2","api_event_url":"/api-reference/event/BasePart/touched","type":"RBXScriptSignal","url":"/api-reference/event/BasePart/touched","fast_flags":[],"published_at":"2019-06-14T21:54:51.555Z"}],"deprecated_callback":[],"fast_flags":[],"published_at":"2019-06-14T21:20:48.448Z"},{"title":"Instance","category":null,"code_sample":[],"roblox_api_tags":["NotCreatable","NotBrowsable"],"summary":"Instance is the base class for all classes in the Roblox class hierarchy.","description":"Instance is the base class for all classes in the Roblox class hierarchy. Every other class that the Roblox engine defines inherits all of the members of Instance.  It is not possible to directly create Instance objects.\n\nInstance has a special function called `Instance.new` which is used to create objects via code. This function takes the name of the class as a parameter and returns the created object. Abstract classes and services cannot be created with the Instance.new function.","deprecation_message":"","wikitext":"{{redirect|Instance|Instance (disambiguation)}}\n{{APIClassPage\n|Description=Instance is the base class for all classes in the Roblox class hierarchy. Every other class that the Roblox engine defines inherits all of the members of instance.  It is not possible to directly create Instance objects.\n\nInstance has a special function called [[Instance.new|new]] which is used to create objects via code. This function takes the name of the class as a parameter and returns the created object. Abstract classes and services cannot be created with the Instance.new function.\n==Example==\n{{Code|=\nlocal part = Instance.new(\"Part\")\nprint(part.ClassName)\n>>Part\n\nlocal decal = Instance.new(\"Decal\")\nprint(decal.ClassName)\n>>Decal\n}}\n}}","property":[{"title":"Instance.DataCost","type":"int","locale":"en-us","tags":["deprecated"],"summary":"The cost of saving the instance using data persistence.","description":"The cost of saving the instance using data persistence.","code_sample":[],"serialization":{"can_save":false,"can_load":false},"security":{"read_security_tag":"LocalUserSecurity","write_security_tag":"LocalUserSecurity"},"deprecation_message":"Roblox's data persistence saving system has been superseded by the `DataStoreService`. As such, this property has no function.","api_property_url":"/api-reference/property/Instance/DataCost","roblox_api_tags":["ReadOnly","NotReplicated"],"studio_category":"Data","script_editor_context":[],"wiki_text_reference":"{{APIMemberPage|\n|MemberType=Property\n|ClassName=Instance\n|Description=The cost of saving the instance using [[Data Persistence]].\n|DescriptionShort=The cost of saving the instance using [[Data Persistence]].\n|Notes\n*If the total DataCost of all the instances saved to a player exceed 45,000, it cannot be saved with Data Persistence.\n|SeeAlso=[[API:Class/Player/SaveInstance|SaveInstance]]\n}}","uid":"blt76bb2ccab9bbe9d2","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt1135fe0153024444","created_at":"2018-06-05T11:56:33.587Z","updated_at":"2018-09-05T20:13:49.862Z","_version":15,"display_title":"DataCost","api_dump_signature":"56e963bfb83d70df851bd5db001c542baf03413d_v2","url":"/api-reference/property/Instance/DataCost","type_category":"Primitive","fast_flags":[],"published_at":"2019-06-14T22:52:11.690Z"},{"title":"Instance.Parent","type":"Instance","locale":"en-us","tags":[],"summary":"Determines the hierarchical parent of the `Instance`","description":"The Parent property determines the hierarchical parent of the `Instance`. The following terminology is commonly used when talking about how this property is set:\n  - An object is a **child** (**parented to**) another object when its Parent is set to that object.\n  - The **descendants** of an `Instance` are the children of that object, plus the descendants of the children as well.\n  - The **ancestors** of an `Instance` are all the objects that the Instance is a descendant of.\n\nIt is from this property that many other API members get their name, such as `Instance/GetChildren|GetChildren` and `Instance/FindFirstChild|FindFirstChild`.\n\nThe `Instance/Remove|Remove` function sets this property to nil. Calling `Instance/Destroy|Destroy` will set the Parent of an `Instance` and all of its descendants to `nil`, and also **lock** the Parent property. An error is raised when setting the Parent of a destroyed object.\n\nThis property is also used to manage whether an object exists in the game or needs be be removed. As long as an objects parent is in the `DataModel`, is stored in a variable, or is referenced by another objects property, then the object remains in the game. Otherwise, the object will automatically be removed. The top level `DataModel` object (the one referred to as the `game` by scripts) has no parent, but always has a reference held to it by the game engine, and exists for the duration of a session.\n\nNewly created objects using `Instance.new` will not have a parent, and usually will not be visible or function until one is set. The most elementary creation of an object has two steps: creating the object, then setting its parent.\n```\n-- Create a part and parent it to the workspace\nlocal part = Instance.new(\"Part\")\npart.Parent = workspace\n-- Instance new can also take Parent as a second parameter\nInstance.new(\"NumberValue\", workspace)\n```\n\n# Object Replication\nAn object created by server will not replicate to clients until it is parented to some object that is replicated. When creating an object then setting many properties, it's recommended to **set Parent last**. This ensures the object replicates once, instead of replicating many property changes.\n```lua\nlocal part = Instance.new(\"Part\") -- Avoid using the second parameter here\npart.Anchored = true\npart.BrickColor = BrickColor.new(\"Really red\")\n-- Potentially many other property changes could go here here...\n-- Always set parent last!\npart.Parent = workspace\n```\nHowever, if you were parenting your parts to a `Model` whose parent hasn't been set yet, then setting the parent first would not matter as the model would not have replicated yet.","code_sample":[],"serialization":{"can_save":false,"can_load":true},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"","api_property_url":"/api-reference/property/Instance/Parent","roblox_api_tags":[],"studio_category":"Data","script_editor_context":[],"wiki_text_reference":"{{APIMemberPage\n|ClassName=Instance\n|MemberType=Property\n|TypeArgs.value=Instance\n|Description=This property shows the hierarchical parent of an object. This property is also used to manage whether an object exists in the game or needs be be removed. As long as an objects parent is in the {{api|DataModel}}, is stored in a variable, or is referenced by another objects property, then the object will remain in the game. Otherwise, the game engine will automatically remove the object.For example, after using [[Instance.new]] to create an object the objects parent is nil. Unless the object is assigned a parent, such as game.Workspace, it will no longer exist once the variable pointing to it has been removed. The top level DataModel object (the one referred to as the \"game\" by scripts) has no parent, but always has a reference held to it by the game engine, and exists for the duration of a session.\n|DescriptionShort=The hierarchical parent of the object.\n|Example=\nThis example will output nil because game has no Parent.\n{{Code|=\nprint(game.Parent)\n}}\n\nThis example will output \"game\" because the game (or game Instance) is Workspace's parent.\n{{Code|=\nprint(Workspace.Parent)\n}}\n|SeeAlso=[[Instance Hierarchy]]}}","uid":"blt55798596a966e9d3","created_by":"blt056181872171cff69cfbc0c3","updated_by":"bltb3147545f90dee1b","created_at":"2018-06-05T11:56:14.326Z","updated_at":"2018-09-16T15:46:36.443Z","_version":23,"display_title":"Parent","api_dump_signature":"2329aa2ae597cd79f47d2adb2362a0ef444efebb_v2","url":"/api-reference/property/Instance/Parent","type_category":"Class","fast_flags":[],"published_at":"2019-06-14T22:51:37.006Z"},{"title":"Instance.RobloxLocked","type":"bool","locale":"en-us","tags":[],"summary":"If true, the `Instance` and its descendants cannot be indexed or edited by a `Script` or `LocalScript` and will throw an error if it is attempted","description":"If true, the `Instance` and its descendants cannot be indexed or edited by a `Script` or `LocalScript` and will throw an error if it is attempted.\n\nThis property currently cannot be changed by developers.\n\nThis property is primarily intended to protect objects in the `CoreGui` service from being altered by users in an unauthorized manner. Developers looking to alter the `CoreGui` should use `StarterGui/SetCore` and `StarterGui/GetCore`.","code_sample":[],"serialization":{"can_save":false,"can_load":false},"security":{"read_security_tag":"PluginSecurity","write_security_tag":"PluginSecurity"},"deprecation_message":"","api_property_url":"/api-reference/property/Instance/RobloxLocked","roblox_api_tags":[],"studio_category":"Data","script_editor_context":[],"wiki_text_reference":"{{APIMemberPage\n|Description=If true, the object and its descendants cannot be indexed or edited by a {{api|Script}} or {{api|LocalScript}} and will throw an error if it is attempted.\n|Notes=\n* This property is technically read-only, but it won't throw an error if you attempt to change it. \n** It could be changed in the past (via [[plugins]] or the [[command bar]]), but this functionality has been disabled.\n** Any attempts to change this property's value will be silently discarded.\n* This property is primarily intended to protect objects in the {{api|CoreGui}} service from being altered by users in an unauthorized manner.\n** If you'd like to alter certain states of the CoreGui, check out some of these methods from the {{api|StarterGui}} service:\n*** {{api|StarterGui.SetCore}}\n*** {{api|StarterGui.GetCore}}\n}}","uid":"blt4429c5ae6987e473","created_by":"blt056181872171cff69cfbc0c3","updated_by":"bltb3147545f90dee1b","created_at":"2018-06-05T11:56:37.944Z","updated_at":"2018-09-16T15:48:33.460Z","_version":17,"display_title":"RobloxLocked","api_dump_signature":"97352d656dd79c7d1618b76024031578bb1cdc97_v2","url":"/api-reference/property/Instance/RobloxLocked","type_category":"Primitive","fast_flags":[],"published_at":"2019-06-14T22:51:34.911Z"},{"title":"Instance.Name","type":"string","locale":"en-us","tags":[],"summary":"A non-unique identifier of the `Instance`","description":"A non-unique identifier of the `Instance`.\n\nThis property is an identifier that describes an object. Names are not necessarily unique identifiers however; multiple children of an object may share the same name. Names are used to keep the object hierarchy organized, along with allowing scripts to access specific objects.\n\nThe name of an object is often used to access the object through the data model hierarchy using the following methods:\n\n```\nlocal baseplate = workspace.Baseplate\nlocal baseplate = workspace[\"Baseplate\"]\nlocal baseplate = workspace:FindFirstChild(\"BasePlate\")\n```\nIn order to make an object accessible using the dot operator, an object's Name must follow a certain syntax. The objects name must start with an underscore or letter. The rest of the name can only contain letters, numbers, or underscores (no other special characters). If an objects name does not follow this syntax it will not be accessible using the dot operator and Lua will not interpret its name as an identifier.\n\nIf more than one object with the same name are siblings then any attempt to index an object by that name will return the only one of the objects found similar to `Instance/FindFirstChild`, but not always the desired object. If a specific object needs to be accessed through code, it is recommended to give it a unique name, or guarantee that none of its siblings share the same name as it. \n\nNote, a full name showing the instance's hierarchy can be obtained using `Instance/GetFullName`.","code_sample":[],"serialization":{"can_save":true,"can_load":true},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"","api_property_url":"/api-reference/property/Instance/Name","roblox_api_tags":[],"studio_category":"Data","script_editor_context":[],"wiki_text_reference":"{{APIMemberPage\n|ClassName=Instance\n|MemberType=Property\n|DescriptionShort=A non-unique identifier for the object.\n|Description=This property is an identifier that describes an object. Names are not necessarily unique identifiers however; multiple children of an object may share the same name. Names are used to keep the object hierarchy organized, along with allowing scripts to access specific objects.\n\nThe name of an object can be used to access the object through the data model hierarchy using the dot . operator. For example, game.Workspace.Baseplate will access the baseplate part in a default place. In order to make an object accessible using the . operator, an object's Name must follow a certain syntax. The objects name must start with an underscore or letter. The rest of the name can only contain letters, numbers, or underscores (no other special characters). If an objects name does not follow this syntax it will not be accessible using the . operator and Lua will not interpret its name as an identifier.\n\nIf more than one object with the same name are siblings then any attempt to index an object by that name will return the only one of the objects found similar to {{api|Instance.FindFirstChild}}, but not always the desired object. If a specific object needs to be accessed through code, it is recommended to give it a unique name, or guarantee that none of its siblings share the same name as it. \n\nIf an object's Name is equal to the name of a member (property/function/etc.) of its {{api|Instance.Parent}}, using the . operator on the parent will give reference the member instead of the the object with that Name. For this reason FindFirstChild is preferred over indexing when the Name of the object might vary (e.g. {{api|Player}} names).\n\n|Example=\n{{lua|=\nlocal brick = Instance.new(\"Part\")\nbrick.Name = \"Brick\"\nbrick.Parent = game.Workspace\n \n-- Change the part's name\nbrick.Name = \"Brick2\"\n-- Now the brick can be found using \"game.Workspace.Brick2\"\nlocal brick2 = game.Workspace.Brick2\nprint(brick2 == brick)\n--> true\nlocal brick3 = game.Workspace.Brick\n-- This code errors because there is no longer an object with Name \"Brick\" in the workspace\n}}\n}}","uid":"bltb6116df70dea59d4","created_by":"blt056181872171cff69cfbc0c3","updated_by":"bltb3147545f90dee1b","created_at":"2018-06-05T11:56:05.607Z","updated_at":"2018-09-16T15:48:48.610Z","_version":25,"display_title":"Name","api_dump_signature":"ab6eed37f60eb66c0c350396ab6bb3b45a024449_v2","url":"/api-reference/property/Instance/Name","type_category":"Primitive","fast_flags":[],"published_at":"2019-06-14T22:51:32.873Z"},{"title":"Instance.ClassName","type":"string","locale":"en-us","tags":[],"summary":"A read-only string representing the class this `Instance` belongs to","description":"A read-only string representing the class this `Instance` belongs to.\n\nThis property can be used with various other functions of Instance that are used to identify objects by type, such as `Instance/IsA` or `Instance/FindFirstChildOfClass`.\n\nNote this property is read only and cannot be altered by scripts. Developers wishing to change an `Instance`'s class will instead have to create a new `Instance`.\n\nUnlike `Instance/IsA`, ClassName can be used to check if an object belongs to a specific class ignoring class inheritance. For example:\n```\nfor _, child in ipairs(game.Workspace:GetChildren()) do\n    if child.ClassName == \"Part\" then\n        print(\"Found a Part\")\n        -- will find Parts in model, but NOT TrussParts, WedgeParts, etc\n    end\nend\n```","code_sample":[],"serialization":{"can_save":false,"can_load":false},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"","api_property_url":"/api-reference/property/Instance/ClassName","roblox_api_tags":["ReadOnly","NotReplicated"],"studio_category":"Data","script_editor_context":[],"wiki_text_reference":"{{APIMemberPage\n|ClassName=Instance\n|MemberType=Property\n|DescriptionShort=The unique name of this type of Instance.\n|Description=This property represents the unique name of this type of Instance (e.g. Part, TrussPart, WedgePart, etc.). This property can be used with various other functions of Instance that are used to identify objects by type, such as {{api|Instance.IsA}} or {{api|Instance.FindFirstChildOfClass}}.\n\n{{EmphasisBox|Of the various ways of identifying an object by type ({{api|Instance.ClassName}}, {{api|Instance.IsA}}, and {{api|Instance.FindFirstChildOfClass}}), only IsA will also check the base class of an object. ClassName and FindFirstChildOfClass will only check the class itself, not any of its base classes.|yellow}}\n|Example=\n{{Lua|=\nfor _, child in ipairs(game.Workspace:GetChildren()) do\n    if child.ClassName == \"Part\" then\n        print(\"Found a Part\")\n        -- will find Parts in model, but NOT TrussParts, WedgeParts, etc\n    end\nend\n}}\n}}","uid":"bltdf15d746eca91c9b","created_by":"blt056181872171cff69cfbc0c3","updated_by":"bltb3147545f90dee1b","created_at":"2018-06-05T11:56:36.848Z","updated_at":"2018-09-16T15:48:54.648Z","_version":15,"display_title":"ClassName","api_dump_signature":"d1cddb9929d76c472be03592021a8942473ade75_v2","url":"/api-reference/property/Instance/ClassName","type_category":"Primitive","fast_flags":[],"published_at":"2019-06-14T22:51:30.787Z"},{"title":"Instance.Archivable","type":"bool","locale":"en-us","tags":[],"summary":"Determines if an `Instance` can be cloned using `/Instance/Clone` or saved to file.","description":"This property determines whether an `Instance|object` should be included when the game is published or saved, or when `Instance/Clone` is called on one of the object's ancestors. Calling Clone directly on an object will return nil if the cloned object is not archivable. Copying an object in Studio (using the 'Duplicate' or 'Copy' options) will ignore the Archivable property and set Archivable to true for the copy.\n\n```\nlocal part = Instance.new(\"Part\")\nprint(part:Clone()) --&gt; Part\npart.Archivable = false\nprint(part:Clone()) --&gt; nil\n```\n","code_sample":[],"serialization":{"can_save":false,"can_load":false},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"","api_property_url":"/api-reference/property/Instance/Archivable","roblox_api_tags":[],"studio_category":"Behavior","script_editor_context":[],"wiki_text_reference":"{{APIMemberPage\n|DescriptionShort=Determines if an object can be {{api|Instance.Clone}} or saved to file.\n|Description=This property determines whether an object should be included when the game is published or saved, or when {{api|Instance.Clone}} is called on one of the objects ancestors. Calling Clone directly on an object will return nil if the cloned object is not archivable. Copying an object in Studio will ignore the Archivable property and set Archivable to true for the copy.\n\n|Example=\n{{code and output|=\n|code=\nlocal part = Instance.new(\"Part\")\nprint(part:Clone())\n|output=Part\n}}\n{{code and output|=\n|code=\npart.Archivable = false\nprint(part:Clone())\n|output=nil\n}}\n}}","uid":"blt42a6dd7bbb9e9dd7","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt0d2e21c80087f7ec0b18bbac","created_at":"2018-06-05T11:56:35.432Z","updated_at":"2018-10-01T13:11:48.517Z","_version":23,"display_title":"Archivable","api_dump_signature":"e8d11abddad060b547ae783552eb6eaa5653075b_v2","url":"/api-reference/property/Instance/Archivable","type_category":"Primitive","fast_flags":[],"published_at":"2019-06-14T22:51:17.807Z"}],"function":[{"title":"Instance:Clone","url":"/api-reference/function/Instance/Clone","locale":"en-us","tags":[],"summary":"Create a deep copy of a Roblox instance and descendants where `Archivable = true`.","description":"Create a deep copy of a Roblox Instance and all of its descendants, with all the same property values. Returns a new, separate object whose Parent property is `nil`. The next step after cloning an object is setting the Parent, and optionally re-positioning the new object if it has 3d geometry.\n\nAny references to objects not in the cloned hierarchy are maintained (i.e. if an ObjectValue refers to an external object it will refer to the same external object). Any internal references are relative (ie if an ObjectValue refers to an internal object it will refer to a similar internal object in the copy).\n\nAny objects in the cloned object's hierarchy (including the object itself) that does not have the `Archivable` property enabled are ignored. If the root object is not Archivable, the function returns `nil`.\n\nClone is useful for regenerating models by saving the original and spawning copies. It's also useful for taking a snapshot of the current state of a model if it is changing over time.","code_sample":[{"title":"Clone Example","display_title":"Clone Example","code_summary":"This code first references an existing object in the `original` variable. Then, it makes a copy of the object, sets the parent to that of the original, and finally moves the copy to (0, 50, 0).","code_sample":"    -- Get a reference to an existing object\n    local original = workspace.Model\n    -- Create the model copy\n    local copy = original:Clone()\n    -- Parent the copy to the same parent as the original\n    copy.Parent = original.Parent\n    -- Move the copy so it's not overlapping the original\n    copy:SetPrimaryPartCFrame(CFrame.new(0, 50, 0))","validated_in_version":"","comments_issues":"","tags":[],"locale":"en-us","uid":"blt7798e28ca9c97508","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt98b1f091c7c6cc80","created_at":"2018-06-05T10:13:52.411Z","updated_at":"2018-09-30T15:18:01.432Z","url":"/code-sample/Clone-Example","_version":12,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"duration":"","date":null,"sequence_number":null,"summary":"","short_description":"","start_line_number":"","expected_output":"","published_at":"2019-06-15T00:18:51.557Z"}],"roblox_api_tags":[],"returns":[{"return_type":"Instance","return_category":"Class"}],"argument":[],"deprecation_message":"","wikitext":"{{APIMemberPage\n|TypeArgs.return=Ref<Instance>\n|Notes=\n* The copy's {{api|Instance.Parent}} is initially nil.\n* Calling Clone on an object whose {{api|Instance.Archivable}} property is false returns nil.\n* If using Clone to copy a {{api|Model}} it is important to call {{api|Model.MakeJoints}} on the clone as joints made via {{typex|SurfaceType}}s are not copied.\n|Description=Returns a copy of the object, including descendants, but only if the object is {{api|Instance.Archivable}}.\n|Example=\n{{Code|=\nlocal part = Instance.new(\"Part\")\npart.Parent = Workspace\n\nlocal clone = part:Clone()\nprint(clone.Parent)\n--> nil\n}}\n}}","security":"None","uid":"blta5692d8657324468","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:54:15.900Z","updated_at":"2018-07-23T23:34:36.236Z","_version":13,"display_title":"Clone","api_dump_signature":"6c0ef4b56f3c5f7c22022385fdf00d9b59fd3cb8_v2","published_at":"2019-06-14T22:38:49.587Z"},{"title":"Instance:GetDebugId","url":"/api-reference/function/Instance/GetDebugId","locale":"en-us","tags":[],"summary":"Returns a coded string of the `Instance`s DebugId used internally by Roblox.","description":"Returns a coded string of the `Instance`s DebugId used internally by Roblox.\n\n## Notes\n - This item is protected. Attempting to use it in a `Script` or `LocalScript` will cause an error\n - A debug ID is an ID used in debugging processes. It allows a debugger to read each instruction before an application processes it. All objects in Roblox act like processes and each run instructions (or 'code') that can be debugged if needed\n - This can be helpful for plugins which need to distinguish similar objects from one-another (such as objects that share the same name)\n","code_sample":[{"title":"Instance:GetDebugId","display_title":"Instance:GetDebugId","code_summary":"","code_sample":"\nprint(Workspace:GetDebugId()) --> 39FA_12\nprint(Workspace:GetDebugId(10)) --> 39FA2FEF4D_12\nprint(Workspace:GetDebugId(math.huge)) --> 12\n","locale":"en-us","tags":[],"uid":"blte7ae1985ac99f8ad","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt47935daab13ee531","created_at":"2018-06-05T10:10:42.724Z","updated_at":"2018-06-28T21:54:10.018Z","url":"/code-sample/Instance-GetDebugId1","_version":12,"tutorial_category":[],"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"duration":"","date":null,"sequence_number":null,"summary":"","expected_output":"","validated_in_version":"","comments_issues":"","published_at":"2019-06-15T00:31:43.961Z"}],"roblox_api_tags":["NotBrowsable"],"returns":[{"return_type":"string","return_category":"Primitive","summary":"The Debug ID string."}],"argument":[{"type":"int","category":"Primitive","name":"scopeLength","default":"4","summary":"The scope length."}],"deprecation_message":"","wikitext":"{{APIMemberPage\n|MemberType=Function\n|ClassName=Instance\n|Example=\n{{Lua|=\nprint(Workspace:GetDebugId()) --> 39FA_12\nprint(Workspace:GetDebugId(10)) --> 39FA2FEF4D_12\nprint(Workspace:GetDebugId(math.huge)) --> 12\n}}\n|Notes=\n*This item is protected. Attempting to use it in a [[API:Class/Script|Script]] or [[API:Class/LocalScript|LocalScript]] will cause an error.\n*A debug ID is an ID used in debugging processes. It allows a debugger to read each instruction before an application processes it. All objects in Roblox act like processes and each run instructions (or 'code') that can be debugged if needed.\n*This can be helpful for plugins which need to distinguish similar objects from one-another (such as objects that share the same name).\n|Description=Returns a coded string of the object's DebugId used internally by Roblox.\n}}","security":"PluginSecurity","uid":"bltb8c5d0b9b87e79af","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:35:16.951Z","updated_at":"2018-07-23T23:35:51.927Z","_version":15,"display_title":"GetDebugId","api_dump_signature":"57782b176671380063f01804f6403dbd4ee21fc5_v2","type":"","published_at":"2019-06-14T22:38:47.305Z"},{"title":"Instance:FindFirstAncestor","url":"/api-reference/function/Instance/FindFirstAncestor","locale":"en-us","tags":[],"summary":"Returns the first ancestor of the `Instance` whose `Instance/Name` is equal to the given name.","description":"Returns the first ancestor of the `Instance` whose `Instance/Name` is equal to the given name.\n\nThis function works upwards, meaning it starts at the `Instance`'s immediate `Instance/Parent` and works up towards the `DataModel`. If no matching ancestor is found, it returns nil.\n\nThe following code snippet would find the first ancestor of the object named 'Car'.\n\n```\nlocal car = object:FindFirstAncestor(\"Car\")\n```\n\nFor variants of this function that find ancestors of a specific class, please see `Instance/FindFirstAncestorOfClass` and `Instance/FindFirstAncestorWhichIsA`.","code_sample":[],"roblox_api_tags":[],"returns":[{"return_category":"Class","return_type":"Instance","summary":"The `Instance` found."}],"argument":[{"category":"Primitive","type":"string","name":"name","default":"","summary":"The `Instance/Name` to be looked for."}],"deprecation_message":"","wikitext":"{{APIMemberPage\n|Description=Returns the first ancestor whose {{api|Instance.Name}} is equal to ''name'', or {{type|nil}} if none can be found.\n|TypeArgs.return=Ref<Instance>\n}}","security":"None","uid":"bltc4d07508998fc344","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt6445dfad3bc18afb","created_at":"2018-06-05T10:35:24.915Z","updated_at":"2018-08-21T02:07:08.647Z","_version":15,"display_title":"FindFirstAncestor","api_dump_signature":"ea16dbaef00c72e1ce7d822c65c3271d0712e896_v2","type":"","fast_flags":[],"published_at":"2019-06-14T22:21:14.954Z"},{"title":"Instance:FindFirstAncestorOfClass","url":"/api-reference/function/Instance/FindFirstAncestorOfClass","locale":"en-us","tags":[],"summary":"Returns the first ancestor of the `Instance` whose `Instance/ClassName` is equal to the given className.","description":"Returns the first ancestor of the `Instance` whose `Instance/ClassName` is equal to the given className.\n\nThis function works upwards, meaning it starts at the `Instance`'s immediate `Instance/Parent` and works up towards the `DataModel`. If no matching ancestor is found, it returns nil.\n\nA common use of this function is finding the `Model` a `BasePart` belongs to. For example:\n```\nlocal model = part:FindFirstAncestorOfClass(\"Model\")\n```\n\nThis function is a variant of `Instance/FindFirstAncestor` which checks the `Instance/ClassName` property rather than `Instance/Name`. `Instance/FindFirstAncestorWhichIsA` also exists, using the `Instance/IsA` method instead to respect class inheritance. \n","code_sample":[],"roblox_api_tags":[],"returns":[{"return_category":"Class","return_type":"Instance","summary":"The `Instance` found."}],"argument":[{"category":"Primitive","type":"string","name":"className","default":"","summary":"The `Instance/ClassName` to be looked for."}],"deprecation_message":"","wikitext":"{{Disabled|FFlag=InstanceNavigationAdditionsEnabled}}\n{{APIMemberPage\n|Description=Returns the first ancestor whose {{api|Instance.ClassName}} is equal to ''className'', or {{type|nil}} if none can be found.\n|TypeArgs.return=Ref<Instance>\n}}","security":"None","uid":"blt7a354a9dac374854","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt6445dfad3bc18afb","created_at":"2018-06-05T10:35:27.556Z","updated_at":"2018-08-21T02:07:30.339Z","_version":15,"display_title":"FindFirstAncestorOfClass","api_dump_signature":"a56973824bf7cb0e2fcdc354b321ca563201fccf_v2","type":"","fast_flags":[],"published_at":"2019-06-14T22:21:12.885Z"},{"title":"Instance:FindFirstAncestorWhichIsA","url":"/api-reference/function/Instance/FindFirstAncestorWhichIsA","locale":"en-us","tags":[],"summary":"Returns the first ancestor of the `Instance` for whom `Instance/IsA` returns true for the given className.","description":"Returns the first ancestor of the `Instance` for whom `Instance/IsA` returns true for the given className.\n\nThis function works upwards, meaning it starts at the `Instance`'s immediate `Instance/Parent` and works up towards the `DataModel`. If no matching ancestor is found, it returns nil.\n\nUnlike `Instance/FindFirstAncestorOfClass`, this function uses `Instance/IsA` which respects class inheritance. For example:\n\n```\nprint(part:IsA(\"Part\")) --&gt; true\nprint(part:IsA(\"BasePart\")) --&gt; true\nprint(part:IsA(\"Instance\")) --&gt; true\n```\n\nTherefore, the following code sample will return the first `BasePart` ancestor, regardless of if it is a `WedgePart`, `MeshPart` or `Part`.\n\n```\nlocal part = object:FindFirstAncestorWhichIsA(\"BasePart\")\n```\n\nSee also, `Instance/FindFirstAncestor`.","code_sample":[],"roblox_api_tags":[],"returns":[{"return_category":"Class","return_type":"Instance","summary":"The `Instance` found."}],"argument":[{"category":"Primitive","type":"string","name":"className","default":"","summary":"The `Instance/ClassName` to be looked for."}],"deprecation_message":"","wikitext":"{{Disabled|FFlag=InstanceNavigationAdditionsEnabled}}\n{{APIMemberPage\n|Description=Returns the first ancestor that inherits the class ''className'', or {{type|nil}} if none can be found.\n|TypeArgs.return=Ref<Instance>\n}}","security":"None","uid":"bltcac0427cb0b96e3a","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt6445dfad3bc18afb","created_at":"2018-06-05T10:35:26.259Z","updated_at":"2018-08-21T02:07:59.680Z","_version":16,"display_title":"FindFirstAncestorWhichIsA","api_dump_signature":"4481fc526f8787fb7b9c0dc77b2320d39015410a_v2","type":"","fast_flags":[],"published_at":"2019-06-14T22:21:10.767Z"},{"title":"Instance:FindFirstChildOfClass","url":"/api-reference/function/Instance/FindFirstChildOfClass","locale":"en-us","tags":[],"summary":"Returns the first child of the `Instance` whose `Instance/ClassName|ClassName` is equal to the given className.","description":"Returns the first child of the `Instance` whose `Instance/ClassName|ClassName` is equal to the given className.\n\nIf no matching child is found, this function returns nil.\n\nUnlike `Instance/FindFirstChildWhichIsA` this function uses only returns objects whose class matches the given className, ignoring class inheritance. \n\nDevelopers looking for a child by name, should use `Instance/FindFirstChild` instead.","code_sample":[{"title":"Instance:FindFirstChildOfClass","display_title":"Instance:FindFirstChildOfClass","code_summary":"","code_sample":"local player = game:GetService(\"Players\").LocalPlayer\nlocal character = player.Character or player.CharacterAdded:wait()\nlocal humanoid\nwhile not humanoid do\n    humanoid = character:FindFirstChildOfClass(\"Humanoid\")\n    if not humanoid then\n        character.ChildAdded:wait()\n    end\nend\n","locale":"en-us","tags":[],"uid":"blt0169df8a9f60179e","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt47935daab13ee531","created_at":"2018-06-05T10:10:39.995Z","updated_at":"2018-06-28T21:54:27.846Z","url":"/code-sample/Instance-FindFirstChildOfClass1","_version":11,"tutorial_category":[],"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"duration":"","date":null,"sequence_number":null,"summary":"","expected_output":"","validated_in_version":"","comments_issues":"","published_at":"2019-06-15T00:31:39.485Z"}],"roblox_api_tags":[],"returns":[{"return_category":"Class","return_type":"Instance","summary":"The `Instance` found."}],"argument":[{"category":"Primitive","type":"string","name":"className","default":"","summary":"The `Instance/ClassName` to be looked for."}],"deprecation_message":"","wikitext":"{{APIMemberPage\n|Description=Returns the first {{api|Instance}} whose {{api|Instance.ClassName}} is equal to ''className'', or nil, if no such object is found with that ClassName.\n|Example=\n{{lua|=local player = game:GetService(\"Players\").LocalPlayer\nlocal character = player.Character or player.CharacterAdded:wait()\nlocal humanoid\nwhile not humanoid do\n    humanoid = character:FindFirstChildOfClass(\"Humanoid\")\n    if not humanoid then\n        character.ChildAdded:wait()\n    end\nend\n}}\n\n|TypeArgs.return=Ref<Instance>\n}}","security":"None","uid":"bltb4b0116eda18c99a","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt6445dfad3bc18afb","created_at":"2018-06-05T10:35:20.938Z","updated_at":"2018-08-21T02:09:50.289Z","_version":15,"display_title":"FindFirstChildOfClass","api_dump_signature":"7dfa21ed6eb98a3990a07cfe221191b7aa195f89_v2","type":"","fast_flags":[],"published_at":"2019-06-14T22:21:08.553Z"},{"title":"Instance:IsDescendantOf","url":"/api-reference/function/Instance/IsDescendantOf","locale":"en-us","tags":[],"summary":"Returns true if an `Instance` is a descendant of the given ancestor.","description":"Returns true if an `Instance` is a descendant of the given ancestor.\n\nAn `Instance` is considered the descendant of an object if the `Instance`'s parent or one of its parent's parent is set to the object.\n\nNote, `DataModel` is a descendant of nil. This means IsDescendantOf cannot be used with a parameter of nil to check if an object has been removed. \n\nSee also, `Instance/IsAncestorOf`.","code_sample":[{"title":"Instance:IsDescendantOf","display_title":"Instance:IsDescendantOf","code_summary":"","code_sample":"local part = Instance.new(\"Part\")\nprint(part:IsDescendantOf(game))\n--> false\n\npart.Parent = game.Workspace\nprint(part:IsDescendantOf(game))\n--> true\n\npart.Parent = game\nprint(part:IsDescendantOf(game))\n--> true\n","locale":"en-us","tags":[],"validated_in_version":"","comments_issues":"","uid":"blt0ebe01c15e723b8b","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt47935daab13ee531","created_at":"2018-06-05T10:09:52.777Z","updated_at":"2018-06-28T21:53:41.524Z","url":"/code-sample/Instance-IsDescendantOf1","_version":12,"tutorial_category":[],"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"duration":"","date":null,"sequence_number":null,"summary":"","expected_output":"","published_at":"2019-06-15T00:31:53.392Z"}],"roblox_api_tags":[],"returns":[{"return_category":"Primitive","return_type":"bool","summary":"True if the `Instance` is a descendant of the given ancestor."}],"argument":[{"category":"Class","type":"Instance","name":"ancestor","default":"","summary":"The ancestor `Instance`."}],"deprecation_message":"","wikitext":"{{APIMemberPage\n|MemberType=Function\n|ClassName=Instance\n|TypeArgs.ancestor=Class/Instance\n|Notes=\n* Because the {{ClassLink|DataModel}} is a descendant of [[nil]], you cannot use {{`|Instance:IsDescendantOf(nil)}} to check if an object has been removed.{{clr}}Instead, you could use: {{`|not Instance:IsDescendantOf(game)}}\n|Example=\n{{Lua|=\nlocal part = Instance.new(\"Part\")\nprint(part:IsDescendantOf(game))\n--> false\n\npart.Parent = game.Workspace\nprint(part:IsDescendantOf(game))\n--> true\n\npart.Parent = game\nprint(part:IsDescendantOf(game))\n--> true\n}}\n|Description=Returns true if the object is a descendant of the given ancestor.\n|DescriptionShort=Returns true if the object is a descendant of the given ancestor.\n}}","security":"None","uid":"bltbc8a4c4e3956a250","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt6445dfad3bc18afb","created_at":"2018-06-05T10:35:18.285Z","updated_at":"2018-08-21T02:48:35.697Z","_version":15,"display_title":"IsDescendantOf","api_dump_signature":"3c9ab3ddbdd9cac0ca910531d1f0e00f4326bea3_v2","type":"","fast_flags":[],"published_at":"2019-06-14T22:21:04.350Z"},{"title":"Instance:IsAncestorOf","url":"/api-reference/function/Instance/IsAncestorOf","locale":"en-us","tags":[],"summary":"Returns true if an `Instance` is an ancestor of the given descendant.","description":"Returns true if an `Instance` is an ancestor of the given descendant.\n\nAn `Instance` is considered the ancestor of an object if the object's `Instance/Parent` or one of it's parent's `Instance/Parent` is set to the `Instance`.\n\nSee also, `Instance/IsDescendantOf`.","code_sample":[{"title":"Instance:IsAncestorOf","display_title":"Instance:IsAncestorOf","code_summary":"","code_sample":"print(game.Workspace:IsAncestorOf(game.Workspace.Player.Torso)) --> true\n","locale":"en-us","tags":[],"validated_in_version":"","comments_issues":"","uid":"bltf012592a9fd996dd","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt47935daab13ee531","created_at":"2018-06-05T10:09:51.041Z","updated_at":"2018-06-28T21:53:49.041Z","url":"/code-sample/Instance-IsAncestorOf1","_version":10,"tutorial_category":[],"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"duration":"","date":null,"sequence_number":null,"summary":"","expected_output":"","published_at":"2019-06-15T00:31:51.023Z"}],"roblox_api_tags":[],"returns":[{"return_category":"Primitive","return_type":"bool","summary":"True if the `Instance` is an ancestor of the given descendant."}],"argument":[{"category":"Class","type":"Instance","name":"descendant","default":"","summary":"The descendant `Instance`."}],"deprecation_message":"","wikitext":"{{APIMemberPage\n|TypeArgs.descendant=Class/Instance\n|Example=\n{{lua|=\nprint(game.Workspace:IsAncestorOf(game.Workspace.Player.Torso)) --> true\n}}\n|Description=Returns true if the object is an ancestor of the given descendant.\n}}","security":"None","uid":"blt947dcdcaf6a6e4f5","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt6445dfad3bc18afb","created_at":"2018-06-05T10:33:09.936Z","updated_at":"2018-08-21T02:48:53.116Z","_version":15,"display_title":"IsAncestorOf","api_dump_signature":"9c833b0c566ef963678dd4b668b1125ade2edc58_v2","type":"","fast_flags":[],"published_at":"2019-06-14T22:21:02.326Z"},{"title":"Instance:FindFirstChildWhichIsA","url":"/api-reference/function/Instance/FindFirstChildWhichIsA","locale":"en-us","tags":[],"summary":"Returns the first child of the `Instance` for whom `Instance/IsA` returns true for the given className.","description":"Returns the first child of the `Instance` for whom `Instance/IsA` returns true for the given className.\n\nIf no matching child is found, this function returns nil. If the optional recursive argument is true, this function searches all descendants rather than only the immediate children of the `Instance`.\n\nUnlike `Instance/FindFirstChildOfClass`, this function uses `Instance/IsA` which respects class inheritance. For example:\n\n```lua\nprint(part:IsA(\"Part\")) --> true\nprint(part:IsA(\"BasePart\")) --> true\nprint(part:IsA(\"Instance\")) --> true\n```\n\nTherefore, the following code sample will return the first `BasePart` child, regardless of if it is a `WedgePart`, `MeshPart` or `Part`.\n\n```\nlocal part = object:FindFirstChildWhichIsA(\"BasePart\")\n```\n\nDevelopers looking for a child by name, should use `Instance/FindFirstChild` instead.","code_sample":[],"roblox_api_tags":[],"returns":[{"return_category":"Class","return_type":"Instance","summary":"The `Instance` found."}],"argument":[{"category":"Primitive","type":"string","name":"className","default":"","summary":"The `Instance/ClassName` to be searched for."},{"category":"Primitive","type":"bool","name":"recursive","default":"false","summary":"Whether or not the search should be conducted recursively. "}],"deprecation_message":"","wikitext":"{{Disabled|FFlag=InstanceNavigationAdditionsEnabled}}\n{{APIMemberPage\n|Description=Returns the first child that inherits the class ''className'', or {{type|nil}} if none can be found.\n|TypeArgs.return=Ref<Instance>\n}}","security":"None","uid":"blt451d8552e33e83e0","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt98b1f091c7c6cc80","created_at":"2018-06-05T10:35:22.257Z","updated_at":"2018-09-30T15:15:50.433Z","_version":18,"display_title":"FindFirstChildWhichIsA","api_dump_signature":"f7cbb98db88d54adce213d39670955bce818dee4_v2","type":"","fast_flags":[],"published_at":"2019-06-14T22:16:02.614Z"},{"title":"Instance:GetFullName","url":"/api-reference/function/Instance/GetFullName","locale":"en-us","tags":[],"summary":"Returns a string describing the `Instance`'s ancestry.","description":"Returns a string describing the `Instance`'s ancestry. The string is a concatenation of the `Instance/Name|Name` of the object and its ancestors, separated by periods. The `DataModel` (`game`) is not considered. For example, a `Part` in the `Workspace` may return `Workspace.Part`.\n\nWhen called on an `Instance` that is not a descendant of the `DataModel`, this function considers all ancestors up to and including the topmost one without a `Instance/Parent|Parent`.\n\nThis function is useful for logging and debugging. You shouldn't attempt to parse the returned string for any useful operation; this function does not escape periods (or any other symbol) in object names. In other words, although its output often appears to be a valid Lua identifier, it is not guaranteed. ","code_sample":[{"title":"Instance:GetFullName","display_title":"Instance:GetFullName","code_summary":"This code sample demonstrates the behavior of `Instance/GetFullName`. It shows how the function behaves when called on an object not in the `DataModel` hierarchy, and it also shows how the return value does not escape special characters.","code_sample":"-- Create a simple hierarchy\nlocal model = Instance.new(\"Model\")\nlocal part = Instance.new(\"Part\", model)\nlocal fire = Instance.new(\"Fire\", part)\nprint(fire:GetFullName()) --> Model.Part.Fire\nmodel.Parent = workspace\nprint(fire:GetFullName()) --> Workspace.Model.Part.Fire\npart.Name = \"Hello, world\"\nprint(fire:GetFullName()) --> Workspace.Model.Hello, world.Fire","locale":"en-us","tags":[],"url":"/code-sample/Instance-GetFullName1","expected_output":"Model.Part.Fire\nWorkspace.Model.Part.Fire\nWorkspace.Model.Hello, world.Fire","validated_in_version":"","comments_issues":"","uid":"bltb3d91bf6f4062807","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt799ea0ef2eb3638e","created_at":"2018-06-05T10:02:00.521Z","updated_at":"2018-11-20T20:09:20.910Z","_version":14,"duration":"","date":null,"sequence_number":null,"tutorial_category":[],"summary":"","thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"short_description":"","start_line_number":"","highlight_lines":"5, 7, 9","published_at":"2019-06-15T00:08:42.446Z"},{"title":"Instance:GetFullName Lua Implementation","url":"/code-samples/instance-getfullname-lua-implementation","display_title":"Instance:GetFullName Lua Implementation","duration":"","date":null,"sequence_number":null,"tutorial_category":[],"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"summary":"","short_description":"","code_summary":"This code sample re-implements the `Instance/GetFullName` function in Lua.","start_line_number":"","highlight_lines":"12","code_sample":"local function getFullName(object)\n\tlocal result = object.Name\n\tobject = object.Parent\n\twhile object and object ~= game do\n\t\t-- Prepend parent name\n\t\tresult = object.Name .. \".\" .. result\n\t\t-- Go up the hierarchy\n\t\tobject = object.Parent\n\tend\n\treturn result\nend\nprint(getFullName(workspace.Camera)) --> Workspace.Camera","expected_output":"Workspace.Camera","validated_in_version":"","comments_issues":"","tags":[],"locale":"en-us","uid":"bltb604fa96bdfb2133","created_by":"blt799ea0ef2eb3638e","updated_by":"blt799ea0ef2eb3638e","created_at":"2018-11-20T20:13:36.710Z","updated_at":"2018-11-20T20:13:36.710Z","_version":1,"published_at":"2019-06-15T00:08:40.220Z"}],"roblox_api_tags":[],"returns":[{"return_category":"Primitive","return_type":"string","summary":"The full name of the `Instance`."}],"argument":[],"deprecation_message":"","wikitext":"{{APIMemberPage\n|MemberType=Function\n|ClassName=Instance\n|Description=Returns a string which shows the object's ancestry chain.\n|Example={{code and output|\ncode=\nprint(workspace:GetFullName())\nprint(workspace.Camera:GetFullName())\n|output=\nWorkspace\nWorkspace.Camera\n}}\n|Notes=\n* This method is mainly intended for logging and debugging. You aren't advised to parse the returned string.\n* If used on an Instance that is not parented to the {{ClassLink|DataModel}}, its [[Name]] will be returned instead.\n** Since the DataModel is not parented to itself, this also applies if you use {{`|game:GetFullName()}}\n}}","security":"None","uid":"blt7a8a67b2b39580a2","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt799ea0ef2eb3638e","created_at":"2018-06-05T10:35:12.910Z","updated_at":"2018-11-20T20:18:15.093Z","_version":22,"type":"","display_title":"GetFullName","api_dump_signature":"1d57739a315180542a6d1d6f77b68e8f981b77a0_v2","fast_flags":[],"published_at":"2019-06-14T22:14:50.615Z"},{"title":"Instance:WaitForChild","url":"/api-reference/function/Instance/WaitForChild","locale":"en-us","tags":[],"summary":"Returns the child of the `Instance` with the given name. If the child does not exist, it will yield the current thread until it does.","description":"Returns the child of the `Instance` with the given name. If the child does not exist, it will yield the current thread until it does.\n\nIf the *timeOut* parameter is specified, this function will return nil and time out after *timeOut* seconds elapsing without the child being found.\n\n## Where should WaitForChild be used?\nWaitForChild is extremely important when working on code ran by the client (in a `LocalScript`). Roblox does not guarantee the time or order in which objects are replicated from the server to the client. This can cause scripts to break when indexing objects that do not exist yet. \n\nFor example, a `LocalScript` may access a `Model` in the `Workspace` called 'Ship' like so:\n\n```\nlocal ship = workspace.Ship\n-- Will error if ship hasn't replicated\n```\n\nHowever if the model 'Ship' has not replicated to the client when this code is ran an error will be returned breaking the `LocalScript`.\n\nAnother alternative is using `Instance/FindFirstChild`. Not only is this good practice when indexing objects in the `DataModel` (as it avoids accidentally accessing properties) but it does not break if the object does not exist. For example:\n\n```\nlocal ship = workspace:FindFirstChild(\"Ship\")\n-- Won't error, but ship will be nil if the ship hasn't replicated\n```\n\nHere, if the model doesn't exist the code will not error. Instead the value ship will be equal to nil. This is better, but still not much good if we want to use the ship model.\n\nInstead WaitForChild should be used:\n\n```\nlocal ship = workspace:WaitForChild(\"Ship\")\n-- Will wait until the ship has replicated before continuing\n```\n\nHere, the thread will be yielded until the ship model has been found. This means the ship model can be used as soon as it is ready.\n\n\n## Notes\n - If a call to this function exceeds 5 seconds without returning, and no *timeOut* parameter has been specified, a warning will be printed to the output that the thread may yield indefinitely; this warning takes the form `Infinite yield possible on 'X:WaitForChild(\"Y\")'`, where X is the parent name and Y is the child object name.\n - This function does not yield if a child with the given name exists when the call is made.\n - This function is less efficient than `Instance/FindFirstChild` or the dot operator. Therefore, it should only be used when the developer is not sure if the object has replicated to the client. Generally this is only the first time the object is accessed\n\n","code_sample":[{"title":"Instance:WaitForChild","display_title":"Instance:WaitForChild","code_summary":"The following code waits for an instance named \"Part\" to be added to Workspace.","code_sample":"local part = Workspace:WaitForChild(\"Part\")\nprint(part.Name .. \" has been added to the Workspace\")","locale":"en-us","tags":[],"validated_in_version":"","comments_issues":"","uid":"blt76c852a5a8095cdd","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt47935daab13ee531","created_at":"2018-06-05T10:09:55.524Z","updated_at":"2018-06-28T21:53:27.432Z","url":"/code-sample/Instance-WaitForChild1","_version":12,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"duration":"","date":null,"sequence_number":null,"summary":"","expected_output":"","published_at":"2019-06-15T00:31:57.949Z"}],"roblox_api_tags":["CustomLuaState","CanYield"],"returns":[{"return_category":"Class","return_type":"Instance","summary":"The `Instance` found."}],"argument":[{"category":"Primitive","type":"string","name":"childName","default":"","summary":"The `Instance/Name` to be looked for."},{"category":"Primitive","type":"double","name":"timeOut","default":"","summary":"An optional time out parameter."}],"deprecation_message":"","wikitext":"{{APIMemberPage\n\n|Description=Yields the current thread until a child with the given name is found, then returns the child. \nIf the ''timeOut'' parameter is specified, this function will time out and return nil if ''timeOut'' seconds elapse without the child being found.\n\n|TypeArgs.return=Ref<Instance>\n|MarkOptional:timeOut\n\n|Example=\nThe following code waits for an instance named \"Part\" to be added to Workspace.\n{{Lua|=\nlocal part = Workspace:WaitForChild(\"Part\")\nprint(part.Name .. \" has been added to the Workspace\")\n}}\n\n|Notes=\n* If a call to this function exceeds 5 seconds without returning, and the ''timeOut'' parameter isn't specified,  then a warning will be printed to the output stating that it may never terminate with a stack-trace to the line that called it.\n* WaitForChild will act either as a regular Function or a Yield Function based on whether the child exists at the moment of calling or not. If the child exists when the function is called, then WaitForChild will not yield. Otherwise it will.\n* When working on LocalScripts, it is recommended to always use WaitForChild to access children (instead of other access functions such as the dot operator or FindFirstChild) so that the script is resilient to any loading issues. If there are circumstances where it is known for certain that the instance has already replicated to the client, then the code can be optimized to use the dot operator instead of WaitForChild.\n}}","security":"None","uid":"bltade126b150511a50","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt799ea0ef2eb3638e","created_at":"2018-06-05T10:35:23.550Z","updated_at":"2018-11-20T20:29:10.109Z","_version":15,"display_title":"WaitForChild","api_dump_signature":"b25c1c033beb463ec62b1b5b1e19bf311b59a1e7_v2","type":"","fast_flags":[],"published_at":"2019-06-14T22:14:48.397Z"},{"title":"Instance:GetPropertyChangedSignal","url":"/api-reference/function/Instance/GetPropertyChangedSignal","locale":"en-us","tags":[],"summary":"Get an event that fires when a given property of an object changes.","description":"This method returns an event that behaves exactly like the `Changed` event, except that the event only fires when the given property changes. It's generally a good idea to use this method instead of a connection to `Changed` with a function that checks the property name. Subsequent calls to this method on the same object with the same property name return the same event.\n\n`print(object:GetPropertyChangedSignal(\"Name\") == object:GetPropertyChangedSignal(\"Name\")) --&gt; always true`\n\n`ValueBase` objects, such as `IntValue` and `StringValue`, use a modified `Changed` event that fires with the contents of the `Value` property. As such, this method provides a way to detect changes in other properties of those objects. For example, to detect changes in the `Name` property of an `IntValue`, use `IntValue:GetPropertyChangedSignal(\"Name\"):Connect(someFunc)` since the `Changed` event of `IntValue` objects only detect changes on the `Value` property.","code_sample":[{"title":"Changed and GetPropertyChangedSignal","display_title":"Changed and GetPropertyChangedSignal","code_summary":"This code sample demonstrates the equivalence of the `Changed` event and event returned by `GetPropertyChangedSignal`.","code_sample":"local part = Instance.new(\"Part\")\n\nlocal function onBrickColorChanged()\n\tprint(\"My color is now \" .. part.BrickColor.Name)\nend\n\n-- Manual detection of a property change\nlocal function onChanged(property)\n\tif property == \"BrickColor\" then\n\t\tonBrickColorChanged()\n\tend\nend\n\n-- Connect both events\npart:GetPropertyChangedSignal(\"BrickColor\"):Connect(onBrickColorChanged)\npart.Changed:Connect(onChanged)\n\n-- Trigger some changes (because we connected twice,\n-- both of these will cause two calls to onBrickColorChanged)\npart.BrickColor = BrickColor.new(\"Really red\")\npart.BrickColor = BrickColor.new(\"Institutional white\")\n","validated_in_version":"0. 330. 0. 189424","comments_issues":"","tags":[],"locale":"en-us","uid":"blt5bfe7a2045b3d589","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:12:12.170Z","updated_at":"2018-10-01T08:30:44.101Z","url":"/code-sample/Changed-and-GetPropertyChangedSignal","_version":12,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"published_at":"2019-06-15T00:14:05.263Z"},{"title":"Changed Old-to-New","display_title":"Old-to-New Values with Changed","code_summary":"This code sample demonstrates how to save a value before a changed event fires on it in order to get more information about a change.","code_sample":"local part = Instance.new(\"Part\")\n\n-- Save the current state\nlocal currentColor = part.BrickColor\n\nlocal function onBrickColorChanged()\n\tlocal newColor = part.BrickColor\n\tprint(\"Color changed from \" .. currentColor.Name .. \" to \" .. newColor.Name)\n\tcurrentColor = newColor\nend \npart:GetPropertyChangedSignal(\"BrickColor\"):Connect(onBrickColorChanged)\n\n-- Make some changes\npart.BrickColor = BrickColor.new(\"Really red\")\npart.BrickColor = BrickColor.new(\"Really blue\")","validated_in_version":"0. 330. 0. 189424","comments_issues":"","tags":[],"locale":"en-us","uid":"bltee21c8b1762589a9","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:12:13.470Z","updated_at":"2018-10-01T08:30:46.930Z","url":"/code-sample/Changed-Old-to-New","_version":11,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"published_at":"2019-06-15T00:14:03.014Z"}],"roblox_api_tags":[],"returns":[{"return_category":"DataType","return_type":"RBXScriptSignal","summary":""}],"argument":[{"category":"Primitive","type":"string","name":"property","default":"","summary":""}],"deprecation_message":"","wikitext":"{{disabled|FFlag=GetChangedSignalEnabled}}\n{{APIMemberPage\n|Description=Returns a signal that is fired when the specified ''property'' is changed on this object.\n|Example=\n{{Lua|=\nlocal SomeGui = script.Parent\nlocal connection = SomeGui:GetPropertyChangedSignal(\"AbsoluteSize\"):Connect(function()\n    -- SomeGui.AbsoluteSize has changed\nend)\n\n-- later:\nconnection:Disconnect()\n}}\n}}","security":"None","uid":"blt098c61b4c55d7a11","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt799ea0ef2eb3638e","created_at":"2018-06-05T10:54:14.539Z","updated_at":"2018-11-27T21:08:14.810Z","_version":17,"display_title":"GetPropertyChangedSignal","api_dump_signature":"729ae68623c67b99f3b3d1535377697ade025087_v2","type":"","fast_flags":[],"published_at":"2019-06-14T22:14:46.303Z"},{"title":"Instance:Destroy","url":"/api-reference/function/Instance/Destroy","locale":"en-us","tags":[],"summary":"Sets the `Instance/Parent` property to nil, locks the `Instance/Parent` property, disconnects all connections and calls Destroy on all children.","description":"Sets the `Instance/Parent` property to nil, locks the `Instance/Parent` property, disconnects all connections and calls Destroy on all children. This function is the correct way to dispose of objects that are no longer required. Disposing of unneeded objects is important, since unnecessary objects and connections in a place use up memory (this is called a **memory leak**) which can lead to serious performance issues over time.\n\n<div class=\"alert alert-info\" role=\"alert\">\n\n**Tip:** After calling Destroy on an object, set any variables referencing the object (or its descendants) to nil. This prevents your code from accessing anything to do with the object.\n\n```lua\nlocal part = Instance.new(\"Part\")\npart.Name = \"Hello, world\"\npart:Destroy()\n-- Don't do this:\nprint(part.Name) --> \"Hello, world\"\n-- Do this to prevent the above line from working:\npart = nil\n```\n\n</div>\n\nOnce an `Instance` has been destroyed by this method it cannot be reused because the `Instance/Parent` property is locked. To temporarily remove an object, set `Instance/Parent|Parent` it to nil instead. For example:\n\n```\nobject.Parent = nil\nwait(2)\nobject.Parent = workspace\n```\n\nTo Destroy an object after a set amount of time, use `Debris/AddItem`.\n\n","code_sample":[{"title":"Instance:Destroy","display_title":"Instance:Destroy","code_summary":"","code_sample":"\nlocal Part = Workspace.Part\nPart:Destroy()\nPart.Parent = Workspace --> The Parent property of Part is locked\n","locale":"en-us","tags":[],"uid":"blteffb7792957f6413","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt47935daab13ee531","created_at":"2018-06-05T10:10:36.829Z","updated_at":"2018-06-28T21:54:42.853Z","url":"/code-sample/Instance-Destroy1","_version":11,"tutorial_category":[],"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"duration":"","date":null,"sequence_number":null,"summary":"","expected_output":"","validated_in_version":"","comments_issues":"","published_at":"2019-06-15T00:31:35.073Z"}],"roblox_api_tags":[],"returns":[{"return_category":"Primitive","return_type":"void","summary":""}],"argument":[],"deprecation_message":"","wikitext":"{{APIMemberPage\n|MemberType=Function\n|ClassName=Instance\n|Example=\n{{Lua|=\nlocal Part = Workspace.Part\nPart:Destroy()\nPart.Parent = Workspace --> The Parent property of Part is locked\n}}\n|Description=Sets the [[API:Class/Instance/Parent|Parent]] property to nil, locks the Parent property, disconnects all connections and calls Destroy() on all children.\n|Notes=\n* This will throw an error if you attempt to destroy a [[service]].\n}}","security":"None","uid":"bltb4e8a05cc15f88f0","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt799ea0ef2eb3638e","created_at":"2018-06-05T10:35:31.535Z","updated_at":"2018-11-27T22:44:35.498Z","_version":15,"display_title":"Destroy","api_dump_signature":"ba0e928ce53bc28dd71b6c5258585c70b2187c55_v2","type":"","fast_flags":[],"published_at":"2019-06-14T22:14:44.141Z"},{"title":"Instance:GetChildren","url":"/api-reference/function/Instance/GetChildren","locale":"en-us","tags":[],"summary":"Returns an array containing all of the `Instance`'s children.","description":"Returns an array (a numerically indexed table) containing all of the `Instance`'s direct children, or every `Instance` whose `Instance/Parent|Parent` is equal to the object. The array can be iterated upon using either a numeric or generic for-loop:\n\n```lua\n-- Numeric for-loop example\nlocal children = workspace:GetChildren()\nfor i = 1, #children do\n\tlocal child = children[i]\n\tprint(child.Name .. \" is child number \" .. i)\nend\n```\n\n```lua\n-- Generic for-loop example\nlocal children = workspace:GetChildren()\nfor i, child in ipairs(children) do\n\tprint(child.Name .. \" is child number \" .. i)\nend\n```\n\nThe children are sorted by the order in which their `Instance/Parent|Parent` property was set to the object.\n\nSee also the `Instance/GetDescendants|GetDescendants` function.","code_sample":[{"title":"Instance:GetChildren","display_title":"Instance:GetChildren","code_summary":"The below would print the name of all objects currently in Workspace when ran.","code_sample":"\nlocal children = workspace:GetChildren()\nfor i = 1, #children do\n    print(i, children[i].Name)\nend\n","locale":"en-us","tags":[],"uid":"blted2f41e0d389fbef","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt47935daab13ee531","created_at":"2018-06-05T10:10:41.324Z","updated_at":"2018-06-28T21:54:20.337Z","url":"/code-sample/Instance-GetChildren1","_version":12,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"duration":"","date":null,"sequence_number":null,"tutorial_category":[],"summary":"","expected_output":"","validated_in_version":"","comments_issues":"","published_at":"2019-06-15T00:31:41.718Z"}],"roblox_api_tags":[],"returns":[{"return_category":"DataType","return_type":"Objects","summary":"An array containing the `Instance`'s children."}],"argument":[],"deprecation_message":"","wikitext":"{{APIMemberPage\n|MemberType=Function\n|ClassName=Instance\n|Example=\nThe below would print the name of all objects currently in Workspace when ran. In this example it's done using a [[Loops#For|for loop]]. \n{{Lua|=\nlocal children = workspace:GetChildren()\nfor i = 1, #children do\n    print(i, children[i].Name)\nend\n}}\nIt is recommended, however, that you use a [[Generic_for|generic for]] loop, as seen below.\n{{Lua|=\nfor index, child in pairs(workspace:GetChildren()) do\n    print(index, child.Name)\nend\n}}\n|Description=Returns an array of the object's children.\n}}","security":"None","uid":"blt72e3c48d8042b286","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt799ea0ef2eb3638e","created_at":"2018-06-05T10:35:28.852Z","updated_at":"2018-11-27T23:03:59.095Z","_version":16,"display_title":"GetChildren","api_dump_signature":"9aa5ea10dccd3808dbb8bf12f06a61f77197fa2c_v2","type":"","fast_flags":[],"published_at":"2019-06-14T22:14:41.866Z"},{"title":"Instance:ClearAllChildren","url":"/api-reference/function/Instance/ClearAllChildren","locale":"en-us","tags":[],"summary":"This function destroys all of an `Instance`'s children.","description":"This function destroys all of an `Instance`'s children.\n\nAs `Instance/Destroy` also calls itself on the children of an object it is used on, this function will destroy all descendants.\n\n## Alternatives to ClearAllChildren \n\nIf the developer does not wish to destroy all descendants, they should use `Instance/GetChildren` or `Instance/GetDescendants` to loop through an object and select what to destroy. For example, the following code sample will destroy all parts in an object.\n\n```\nfor _, instance in pairs(object:GetDescendants()) do\n\tif instance:IsA(\"BasePart\") then\n\t\tinstance:Destroy()\n\tend\nend\n```","code_sample":[{"title":"Instance:ClearAllChildren","display_title":"Instance:ClearAllChildren","code_summary":"This example creates a Part and adds a few sparkle objects to the part. Then it calls Part:ClearAllChildren() to remove all of the children.","code_sample":"\nlocal part = Instance.new(\"Part\")\n\n-- add some sparkles\nfor i = 1, 3 do\n  Instance.new(\"Sparkles\", part)\nend\n\nprint(\"Part has \" .. #part:GetChildren() .. \" children\")\n--> Part has 3 children\n\npart:ClearAllChildren()\n\nprint(\"Part has \" .. #part:GetChildren() .. \" children\")\n--> Part has 0 children\n","locale":"en-us","tags":[],"uid":"blte134a677b6878b67","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt47935daab13ee531","created_at":"2018-06-05T10:10:34.768Z","updated_at":"2018-06-28T21:54:50.488Z","url":"/code-sample/Instance-ClearAllChildren1","_version":11,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"duration":"","date":null,"sequence_number":null,"summary":"","expected_output":"","validated_in_version":"","comments_issues":"","published_at":"2019-06-15T00:31:32.687Z"}],"roblox_api_tags":[],"returns":[{"return_category":"Primitive","return_type":"void","summary":""}],"argument":[],"deprecation_message":"","wikitext":"{{APIMemberPage\n|MemberType=Function\n|ClassName=Instance\n|Example=\nThis example creates a Part and adds a few sparkle objects to the part. Then it calls Part:ClearAllChildren() to remove all of the children.\n{{Lua|=\nlocal part = Instance.new(\"Part\")\n\n-- add some sparkles\nfor i = 1, 3 do\n  Instance.new(\"Sparkles\", part)\nend\n\nprint(\"Part has \" .. #part:GetChildren() .. \" children\")\n--> Part has 3 children\n\npart:ClearAllChildren()\n\nprint(\"Part has \" .. #part:GetChildren() .. \" children\")\n--> Part has 0 children\n}}\n|Notes=\nClearAllChildren uses [[API:Class/Instance/Destroy|Destroy]] to remove the descendants of the Instance.\n|Description=Removes all descendants of the object.\n}}","security":"None","uid":"bltb93f169ef856f801","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt0d2e21c80087f7ec0b18bbac","created_at":"2018-06-05T10:35:32.894Z","updated_at":"2019-01-24T12:17:43.794Z","_version":20,"display_title":"ClearAllChildren","api_dump_signature":"3743f4267ae2b55823c56763f3e18fa16087f584_v2","type":"","fast_flags":[],"published_at":"2019-06-14T22:12:03.722Z"},{"title":"Instance:GetDescendants","url":"/api-reference/function/Instance/GetDescendants","locale":"en-us","tags":[],"summary":"Returns an array containing all of the descendants of the instance","description":"The **GetDescendants** function of an object returns an array that contains all of the descendants of that object. Unlike `Instance/GetChildren`, which only returns the immediate children of an object, GetDescendants will find every child of the object, every child of those children, and so on and so forth.\n\nThe arrays returned by GetDescendants are arranged so that parents come earlier than their children. For example, let’s look at the following setup:\n\n![Workspace Descendants][1]\n\nHere we have a `Model` in the `Workspace`. Inside this model is three parts (C, D, and E) and another model (InnerModel). Inside the inner model are two more parts (A and B). If we use GetDescendants on the first model and print out the contents of the returned array, we can see that the first level of children, InnerModel, C, D, and E, are printed out before A and B.\n\n```lua\nlocal descendants = game.Workspace.Model:GetDescendants()\n \n-- Loop through all of the descendants of the model and\n-- print out their name\nfor index, descendant in pairs(descendants) do\n\tprint(descendant.Name)\nend\n \n-- Prints:\n-- C\n-- D\n-- E\n-- InnerModel\n-- A\n-- B\n```\n\n\n  [1]: /assets/5c5622a2005d89b20bb84fee/GetDescendantsExample.png","code_sample":[{"title":"Instance:GetDescendants","display_title":"Instance:GetDescendants","code_summary":"GetDescendants is often used to do something to all the descendants that are a particular type of object. The code in this example uses GetDescendants and `/Instance/IsA` to find all of the parts in the workspace and turns them green.","code_sample":"\nlocal descendants = game.Workspace:GetDescendants()\n\n-- Loop through all of the descendants of the Workspace. If a\n-- BasePart is found, the code changes that parts color to green\nfor index, descendant in pairs(descendants) do\n\tif descendant:IsA(\"BasePart\") then\n\t\tdescendant.BrickColor = BrickColor.Green()\n\tend\nend","locale":"en-us","tags":[],"uid":"blt7d254b39dbcff1b9","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt47935daab13ee531","created_at":"2018-06-05T10:07:33.176Z","updated_at":"2018-06-28T21:54:02.483Z","url":"/code-sample/Instance-GetDescendants1","_version":10,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"duration":"","date":null,"sequence_number":null,"summary":"","expected_output":"","validated_in_version":"","comments_issues":"","published_at":"2019-06-15T00:31:46.157Z"}],"roblox_api_tags":["CustomLuaState"],"returns":[{"return_category":"Group","return_type":"Array","summary":"An array containing the `Instance`'s descendants."}],"argument":[],"deprecation_message":"","wikitext":"{{APIMemberPage\n|DescriptionShort=Returns an array containing all of the descendants of the instance.\n|Description=The '''GetDescendants''' function of an object returns an array that contains all of the descendants of that object. Unlike {{api|Instance.GetChildren}}, which only returns the immediate children of an object, GetDescendants will find every child of the object, every child of those children, and so on and so forth.\n\n|Example=\nGetDescendants is often used to do something to all the descendants that are a particular type of object. The code in this example uses GetDescendants and `/Instance/IsA` to find all of the parts in the workspace and turns them green.\n{{Code|=\nlocal descendants = game.Workspace:GetDescendants()\n\n-- Loop through all of the descendants of the Workspace. If a\n-- BasePart is found, the code changes that parts color to green\nfor index, descendant in pairs(descendants) do\n\tif descendant:IsA(\"BasePart\") then\n\t\tdescendant.BrickColor = BrickColor.Green()\n\tend\nend\n|highlight=1}}\n|TypeArgs.return=Instance\n}}","security":"None","uid":"blt1777417657da87bf","created_by":"blt056181872171cff69cfbc0c3","updated_by":"bltb3147545f90dee1b","created_at":"2018-06-05T10:33:08.617Z","updated_at":"2019-02-02T23:21:27.434Z","_version":22,"display_title":"GetDescendants","api_dump_signature":"3a4a4cbe45e4311b39d3e5abc4b4e2f12fdf5d4c_v2","type":"","fast_flags":[],"published_at":"2019-06-14T22:09:26.408Z"},{"title":"Instance:FindFirstChild","url":"/api-reference/function/Instance/FindFirstChild","locale":"en-us","tags":[],"summary":"Returns the first child of the `Instance` found with the given name.","description":"Returns the first child of the `Instance` found with the given name. If no child exists with the given name, this function returns nil. If the optional recursive argument is true, this function searches all descendants rather than only the immediate children of the `Instance`. Use this function if your code cannot guarantee the existence of an object with a given name.\n\n## Checking the Existence of An Object\nFindFirstChild is necessary if you need to verify an object something exists before continuing. Attempting to index a child by name using the dot operator throws an error if the child doesn't exist.\n\n```lua\n -- The following line errors if Part doesn't exist in the Workspace:\nworkspace.Part.Transparency = .5\n```\n\nUse FindFirstChild to first check for Part, then use an if-statement to run code that needs it.\n```lua\nlocal part = workspace:FindFirstChild(\"Part\")\nif part then\n\tpart.Transparency = .5\nend\n```\n## Finding a Child Whose Name Matches a Property\nSometimes the `Instance/Name|Name` of an object is the same as that of a property of its `Instance/Parent|Parent`. When using the dot operator, properties take precedence over children if they share a name.\n\nIn the following example, a `Folder` called \"Color\" is added to a `Part`, which also has the `Part/Color` property. `Part.Color` refers to the `datatype/Color3`, not the Folder.\n\n```lua\nlocal part = Instance.new(\"Part\")\nlocal folder = Instance.new(\"Folder\")\nfolder.Name = \"Color\"\nfolder.Parent = part\nlocal c = part.Color --> A Color3\nlocal c2 = part:FindFirstChild(\"Color\") --> The Folder\n```\n\nA benefit of using FindFirstChild in this way is that the introduction of new properties does not impose a risk on your code.\n\n<div class=\"alert alert-info\" role=\"alert\" style=\"margin-top: 10px;\">\n\n**Tip:** If you only need to use the result of a FindFirstChild call once, such as getting the property of a child if it exists, you can use the following syntax with the `and` operator:\n\n```lua\nlocal myColor = workspace:FindFirstChild(\"SomePart\") and workspace.SomePart.Color\n```\n\nIf SomePart exists, `myColor` will contain the Color of SomePart. Otherwise, it'll be nil without throwing an error. This works due to short-circuiting: Lua ignores the right side if the left is nil/false\n\n</div>\n\n## Performance Note\nFindFirstChild takes about 20% longer than using dot operator, and almost 8 times longer than simply storing a reference to an object. Therefore, you should avoid calling FindFirstChild in performance dependent code, such as in tight loops or functions connected to `RunService/Heartbeat`/`RunService/RenderStepped`. **Store the result in a variable,** or consider using `Instance/ChildAdded|ChildAdded` or `Instance/WaitForChild|WaitForChild` to detect when a child of a given name becomes available.","code_sample":[{"title":"Instance:FindFirstChild","display_title":"Instance:FindFirstChild","code_summary":"The below would look in Workspace for an object name \"Brick\". If found, it will change the name of the object to \"Foo\".","code_sample":"\nlocal found = workspace:FindFirstChild(\"Brick\")\nif found then \n  found.Name = \"Foo\"\nend\n","locale":"en-us","tags":[],"uid":"blt85aa7061a912c9fd","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt47935daab13ee531","created_at":"2018-06-05T10:10:38.231Z","updated_at":"2018-06-28T21:54:34.680Z","url":"/code-sample/Instance-FindFirstChild1","_version":11,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"duration":"","date":null,"sequence_number":null,"summary":"","expected_output":"","validated_in_version":"","comments_issues":"","published_at":"2019-06-15T00:31:37.259Z"}],"roblox_api_tags":[],"returns":[{"return_category":"Class","return_type":"Instance","summary":"The `Instance` found."}],"argument":[{"category":"Primitive","type":"string","name":"name","default":"","summary":"The `Instance/Name` to be searched for."},{"category":"Primitive","type":"bool","name":"recursive","default":"false","summary":"Whether or not the search should be conducted recursively."}],"deprecation_message":"","wikitext":"{{APIMemberPage\n|TypeArgs.return=Ref<Instance>\n|Description=Returns the first child found with the given name, or {{nil}} if no such child exists. If the optional recursive argument is true, recursively descends the hierarchy while searching rather than only searching the immediate object.\n|Example=\nThe below would look in Workspace for an object name \"Brick\". If found, it will change the name of the object to \"Foo\". \n{{Lua|=\nlocal found = workspace:FindFirstChild(\"Brick\")\nif found then \n  found.Name = \"Foo\"\nend\n}}\n|Notes=\nHere's a pure Lua implementation of FindFirstChild to demonstrate how it works:\n{{Lua|=\nlocal function findFirstChild(instance, name, recursive)\n    for _, child in pairs(instance:GetChildren()) do\n        if child.Name == name then\n            return child\n        elseif recursive then\n            return findFirstChild(child, name, true)\n        end\n    end\nend\n}}\n}}","security":"None","uid":"blt9046fd7e44bfee2a","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt799ea0ef2eb3638e","created_at":"2018-06-05T10:35:14.286Z","updated_at":"2019-02-25T03:56:53.046Z","_version":17,"display_title":"FindFirstChild","api_dump_signature":"b951d94f70c8ed223e2ca8f6bba8e3f7ca6d1c5e_v2","type":"","fast_flags":[],"published_at":"2019-06-14T22:08:22.937Z"},{"title":"Instance:IsA","url":"/api-reference/function/Instance/IsA","locale":"en-us","tags":[],"summary":"Returns true if an `Instance`'s class matches or inherits from a given class","description":"IsA returns true if the `Instance`'s class is **equivalent to** or a **subclass** of a given class. This function is similar to the **instanceof** operators in other languages, and is a form of [type introspection](https://en.wikipedia.org/wiki/Type_introspection). To ignore class inheritance, test the `Instance/ClassName|ClassName` property directly instead. For checking native Lua data types (number, string, etc) use the functions `type` and `typeof`.\n\nMost commonly, this function is used to test if an object is some kind of part, such as `Part` or `WedgePart`, which inherits from `BasePart` (an abstract class). For example, if your goal is to change all of a `Player/Character|Character`'s limbs to the same color, you might use `Instance/GetChildren|GetChildren` to iterate over the children, then use IsA to filter non-`BasePart` objects which lack the `BrickColor` property:\n```lua\nlocal function paintFigure(character, color)\n\t-- Iterate over the child objects of the character\n\tfor _, child in pairs(character:GetChildren()) do\n\t\t-- Filter out non-part objects, such as Shirt, Pants and Humanoid\n\t\t-- R15 use MeshPart and R6 use Part, so we use BasePart here to detect both:\n\t\tif child:IsA(\"BasePart\") then\n\t\t\tchild.BrickColor = color\n\t\tend\n\tend\nend\npaintFigure(game.Players.Player.Character, BrickColor.new(\"Bright blue\"))\n```\n\nSince all classes inherit from `Instance`, calling `object:IsA(\"Instance\")` will always return true.","code_sample":[{"title":"Instance:IsA","display_title":"Instance:IsA","code_summary":"Usage of IsA to test class inheritance:","code_sample":"\nprint(Workspace:IsA(\"Instance\" )) --> true\nprint(Workspace:IsA(\"Workspace\")) --> true\nprint(game:IsA(\"Workspace\")) --> false\nprint(game:IsA(\"DataModel\")) --> true\n","locale":"en-us","tags":[],"uid":"bltb3874b89e1c62bed","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt47935daab13ee531","created_at":"2018-06-05T10:10:44.465Z","updated_at":"2018-06-28T21:53:56.025Z","url":"/code-sample/Instance-IsA1","_version":11,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"duration":"","date":null,"sequence_number":null,"summary":"","expected_output":"","validated_in_version":"","comments_issues":"","published_at":"2019-06-15T00:31:48.740Z"}],"roblox_api_tags":["CustomLuaState"],"returns":[{"return_type":"bool","return_category":"Primitive","summary":"Describes whether the Instance's class matched or is a subclass of the given class"}],"argument":[{"type":"string","category":"Primitive","name":"className","default":"","summary":"The class against which the Instance's class will be checked. Case-sensitive."}],"deprecation_message":"","wikitext":"{{APIMemberPage\n|MemberType=Function\n|ClassName=Instance\n|Example=\n\nUsage of IsA to test class inheritance:\n\n{{Lua|=\nprint(Workspace:IsA(\"Instance\" )) --> true\nprint(Workspace:IsA(\"Workspace\")) --> true\nprint(game:IsA(\"Workspace\")) --> false\nprint(game:IsA(\"DataModel\")) --> true\n}}\n\nA script that will change the [[BrickColor]] of any part parented directly to the [[Workspace]].\n\n{{Lua|=\nfor i,child in pairs(game.Workspace:GetChildren()) do\n\tif child:IsA(\"BasePart\") then\n\t\tchild.BrickColor = BrickColor.new(\"Bright red\")\n\tend\nend\n}}\n|Description=Returns true if the object is an instance of the given class, or if the object's class inherits from the given class.\n}}","security":"None","uid":"blt5ae09736896b6355","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:35:15.624Z","updated_at":"2019-05-08T20:47:15.037Z","_version":19,"display_title":"IsA","api_dump_signature":"2565acbd47f283a698f21e650bb45a843676388a_v2","type":"","fast_flags":[],"published_at":"2019-06-14T22:05:54.787Z"}],"event":[{"title":"Instance.Changed","summary":"Fired immediately after a property of an object changes.","description":"<div class=\"alert alert-info\" role=\"alert\">\nIf you want to detect changes of a single property only, you should use `Instance/GetPropertyChangedSignal` instead!\n</div>\n\nThe Changed event fires right after most properties change on objects. It is possible to find the present value of a changed property by using `object[property]`. To get the value of a property before it changes, you must have stored the value of the property before it changed.\n\nIf you are only interested in listening to the change of a specific property, consider using the `GetPropertyChangedSignal` method instead to get an event that only fires when a given property changes.\n\nThis event does not fire for physics-related changes, like when the `CFrame`, `Velocity`, `RotVelocity`, `Position`, `Orientation` and `CFrame` properties of a `BasePart` change due to gravity. To detect changes in these properties, consider using a physics-based event like `RunService.Stepped` or `BasePart.Touched`. A while-true-do loop can also work.\n\nFor \"-Value\" objects, this event behaves differently: it only fires when the `Value` property changes. See individual pages for `IntValue`, `StringValue`, etc for more information. To detect other changes in these objects, you must use `GetPropertyChangedSignal` instead.","code_sample":[{"title":"Change Detector","display_title":"Change Detector","code_summary":"This code sample demonstrates the Changed event firing within a parent object.","code_sample":"local object = script.Parent\nlocal function onChanged(property)\n\t-- Get the current value of the property\n\tlocal value = object[property]\n\t-- Print a message saying what changed\n\tprint(object:GetFullName() .. \".\" .. property .. \" (\" .. typeof(value) .. \") changed to \" .. tostring(value))\nend\nobject.Changed:Connect(onChanged)\n-- Trigger a simple change in the object (add an underscore to the name)\nobject.Name = \"_\" .. object.Name \n","validated_in_version":"0. 330. 0. 189424","comments_issues":"Known issue: In 0. 330. 0. 189424, DraggingV1 changes within BasePart while dragging within studio, but this property cannot be queried by the `object[property]` line, and so this throws an error. -HG","tags":[],"locale":"en-us","uid":"blt7391a0b073bc841e","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:12:14.872Z","updated_at":"2018-10-01T08:30:38.218Z","url":"/code-sample/Change-Detector","_version":11,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"published_at":"2019-06-15T00:14:09.591Z"},{"title":"Changed Event","display_title":"Changed Event","code_summary":"This sample demonstrates the subtleties of the Changed event on normal objects and \"-Value\" objects.","code_sample":"-- Demonstrate the Changed event by creating a Part\nlocal part = Instance.new(\"Part\")\npart.Changed:Connect(print)\n-- This fires Changed with \"Transparency\"\npart.Transparency = .5\n-- Similarly, this fires Changed with \"Number\"\npart.Name = \"SomePart\"\n-- Since changing BrickColor will also change other\n-- properties at the same time, this line fires Changed\n-- with \"BrickColor\", \"Color3\" and \"Color3uint16\".\npart.BrickColor = BrickColor.Red()\n\n-- A NumberValue holds a double-precision floating-point number \nlocal vNumber = Instance.new(\"NumberValue\")\nvNumber.Changed:Connect(print)\n-- This fires Changed with 123.456 (not \"Value\")\nvNumber.Value = 123.456\n-- This does not fire Changed\nvNumber.Name = \"SomeNumber\"\n\n-- A StringValue stores one string\nlocal vString = Instance.new(\"StringValue\")\nvString.Changed:Connect(print)\n-- This fires Changed with \"Hello\" (not \"Value\")\nvString.Value = \"Hello\"","validated_in_version":"0. 330. 0. 189424","comments_issues":"","tags":[],"locale":"en-us","uid":"bltdf5d34889c58c608","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:12:17.577Z","updated_at":"2018-10-01T08:30:41.173Z","url":"/code-sample/Changed-Event","_version":11,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"published_at":"2019-06-15T00:14:07.408Z"}],"wikitext":"{{APIMemberPage\n|MemberType=Event\n|ClassName=Instance\n|Description=Fires after a property of the object changes.\n|Example=\n{{Lua|=\nlocal part = Instance.new(\"Part\",workspace)\npart.Anchored = true\npart.Changed:connect(function (property)\n\tprint(\"Property of\",part:GetFullName(),\"changed:\",property)\nend)\n}}\n|Notes=\n* Setting a property to its current value will not fire the Changed event.\n}}","security":"None","roblox_api_tags":[],"argument":[{"type":"string","name":"property","default":"","summary":"The name of the property that changed."}],"deprecation_message":"","locale":"en-us","tags":[],"uid":"blt362aa34a238d8abc","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:30:39.381Z","updated_at":"2018-07-23T23:36:35.906Z","_version":17,"display_title":"Changed","api_dump_signature":"525a6173d5689e56460e93e22dd99085f37125e1_v2","api_event_url":"/api-reference/event/Instance/Changed","type":"RBXScriptSignal","url":"/api-reference/event/Instance/Changed","published_at":"2019-06-14T22:04:19.034Z"},{"title":"Instance.ChildRemoved","summary":"Fires when a child is removed from this `Instance`.","description":"Fires when a child is removed from this `Instance`.\n\nRemoved refers to when an object's parent is changed from this `Instance` to something other than this `Instance`. Note, this event will also fire when a child is destroyed (using `Instance/Destroy`) as the destroy function sets an object's parent to nil.\n\nThis function only works for immediate children of the `Instance`. For a function that captures all descendants, use `Instance/DescendantRemoved`.\n\nSee also `Instance/ChildAdded`.","code_sample":[{"title":"Instance.ChildRemoved","display_title":"Instance.ChildRemoved","code_summary":"This snippet prints the names of objects as they are removed from the Workspace:","code_sample":"\nWorkspace.ChildRemoved:Connect(function(instance)\n    print(instance.Name .. \" removed from the Workspace\")\nend)\nlocal part = Instance.new(\"Part\", Workspace)\nwait(2)\npart:Destroy()","locale":"en-us","tags":[],"url":"/code-sample/Instance-ChildRemoved1","expected_output":"","validated_in_version":"","comments_issues":"","uid":"blt1d28e5ed92b8ff0e","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:02:01.836Z","updated_at":"2018-10-01T08:28:05.464Z","_version":13,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"duration":"","date":null,"sequence_number":null,"summary":"","published_at":"2019-06-15T00:16:13.262Z"}],"wikitext":"{{APIMemberPage\n|TypeArgs.child=Class/Instance\n|Example=\nThis snippet prints the names of objects as they are removed from the Workspace:\n{{Lua|=\nWorkspace.ChildRemoved:connect(function(instance)\n    print(instance.Name .. \" removed from the Workspace\")\nend)\nInstance.new(\"Part\", Workspace)\n--> Part removed from the Workspace\n}}\n|Description=Fires when a child is removed from the object.\n}}","security":"None","roblox_api_tags":[],"argument":[{"type":"Instance","name":"child","default":"","summary":"The `Instance` that has been removed."}],"deprecation_message":"","locale":"en-us","tags":[],"uid":"bltaa7b6719b4d917c1","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt6445dfad3bc18afb","created_at":"2018-06-05T10:24:12.140Z","updated_at":"2018-08-21T02:50:33.286Z","_version":18,"display_title":"ChildRemoved","api_dump_signature":"e81c526766fb81a1ed0a828b12421f895af761f9_v2","api_event_url":"/api-reference/event/Instance/ChildRemoved","type":"RBXScriptSignal","url":"/api-reference/event/Instance/ChildRemoved","fast_flags":[],"published_at":"2019-06-14T21:59:08.453Z"},{"title":"Instance.ChildAdded","summary":"Fires when an object is parented to this `Instance`.","description":"Fires when an object is parented to this `Instance`.\n\nNote, when using this function on a client to detect objects created by the server it is necessary to use `Instance/WaitForChild` when indexing these object's descendants. This is because the object and its descendants are not guaranteed to replicate from the server to the client simultaneously. For example:\n\n```\nworkspace.ChildAdded:Connect(function(child)\n\t-- need to use WaitForChild as descendants may not have replicated yet\n\tlocal head = child:WaitForChild(\"Head\")\nend)\n```\nNote, this function only works for immediate children of the `Instance`. For a function that captures all descendants, use `Instance/DescendantAdded`.\n\nSee also, `Instance/ChildRemoved`.","code_sample":[{"title":"Instance.ChildAdded","display_title":"Instance.ChildAdded","code_summary":"This snippet prints the names of objects as they are added to the Workspace:","code_sample":"\nworkspace.ChildAdded:Connect(function(instance)\n    print(instance.Name .. \" added to the workspace\")\nend)\nInstance.new(\"Part\", workspace)\n--> Part added to the Workspace\n","locale":"en-us","tags":[],"uid":"blt29e25b68cd6d2ba3","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:07:37.093Z","updated_at":"2018-10-01T08:28:02.636Z","url":"/code-sample/Instance-ChildAdded1","_version":12,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"duration":"","date":null,"sequence_number":null,"summary":"","expected_output":"","validated_in_version":"","comments_issues":"","published_at":"2019-06-15T00:16:15.455Z"}],"wikitext":"{{APIMemberPage\n|TypeArgs.child=Class/Instance\n|Example=\nThis snippet prints the names of objects as they are added to the Workspace:\n{{Lua|=\nworkspace.ChildAdded:connect(function(instance)\n    print(instance.Name .. \" added to the workspace\")\nend)\nInstance.new(\"Part\", workspace)\n--> Part added to the Workspace\n}}\n|Description=Fires when a child is added to the object.\n}}","security":"None","roblox_api_tags":[],"argument":[{"type":"Instance","name":"child","default":"","summary":"The `Instance` that has been added."}],"deprecation_message":"","locale":"en-us","tags":[],"uid":"bltc0595985d5257cc1","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt6445dfad3bc18afb","created_at":"2018-06-05T10:24:13.456Z","updated_at":"2018-08-21T02:50:55.968Z","_version":18,"display_title":"ChildAdded","api_dump_signature":"261bc92e1ca72194ef78abf92688bf8beb6cef64_v2","api_event_url":"/api-reference/event/Instance/ChildAdded","type":"RBXScriptSignal","url":"/api-reference/event/Instance/ChildAdded","fast_flags":[],"published_at":"2019-06-14T21:59:06.224Z"},{"title":"Instance.AncestryChanged","summary":"Fires when the `Instance/Parent` property of the object or one of its ancestors is changed.","description":"Fires when the `Instance/Parent` property of the object or one of its ancestors is changed.\n\nThis event includes two parameters, *child* and *parent*. *Child* refers to the `Instance` whose `Instance/Parent` was actually changed. *Parent* refers to this `Instance`'s new `Instance/Parent`.\n\nA common use for this function is detecting when an object has been removed or destroyed (using `Instance/Destroy`). This is done by checking if the parent has been set to nil. For example:\n\n```\nobject.AncestryChanged:Connect(function(_, parent)\n\tif not parent then\n\t\tprint(\"object destroyed!\")\n\tend\nend)\n```","code_sample":[{"title":"Instance.AncestryChanged","display_title":"Instance.AncestryChanged","code_summary":"The below example would print \"Part is now a child of Model\".","code_sample":"\nlocal p = Instance.new(\"Part\")\np.Parent = game.Workspace\np.AncestryChanged:Connect(function(child, parent)\n    print(child.Name..\" is now a child of \"..parent.Name)\nend)\np.Parent = Workspace.Model\n","locale":"en-us","tags":[],"uid":"blte6e11a8248528bc7","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:07:35.697Z","updated_at":"2018-10-01T08:27:59.771Z","url":"/code-sample/Instance-AncestryChanged1","_version":13,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"duration":"","date":null,"sequence_number":null,"summary":"","expected_output":"","validated_in_version":"","comments_issues":"","published_at":"2019-06-15T00:16:17.805Z"}],"wikitext":"{{APIMemberPage\n|MemberType=Event\n|ClassName=Instance\n|TypeArgs.child=Class/Instance\n|TypeArgs.parent=Class/Instance\n|Example=\nThe below example would print \"Part is now a child of Model\".\n{{Lua|=\nlocal p = Instance.new(\"Part\")\np.Parent = game.Workspace\np.AncestryChanged:connect(function(child, parent)\n    print(child.Name..\" is now a child of \"..parent.Name)\nend)\np.Parent = Workspace.Model\n}}\n|Description=Fires when the [[API:Class/Instance/Parent|Parent]] property of the object or one of its ancestors is changed.\n}}","security":"None","roblox_api_tags":[],"argument":[{"type":"Instance","name":"child","default":"","summary":"The `Instance` whose `Instance/Parent` has been changed."},{"type":"Instance","name":"parent","default":"","summary":"The new `Instance/Parent` of the `Instance` whose `Instance/Parent` was changed."}],"deprecation_message":"","locale":"en-us","tags":[],"uid":"blt416fe9eb4a8ea6c9","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt0d2e21c80087f7ec0b18bbac","created_at":"2018-06-05T10:24:08.043Z","updated_at":"2018-08-27T09:56:54.553Z","_version":21,"display_title":"AncestryChanged","api_dump_signature":"23ae43f1979de52c66be9ecea85a2030ae41c673_v2","api_event_url":"/api-reference/event/Instance/AncestryChanged","type":"RBXScriptSignal","url":"/api-reference/event/Instance/AncestryChanged","fast_flags":[],"published_at":"2019-06-14T21:58:34.616Z"},{"title":"Instance.DescendantAdded","summary":"Fires when a descendant is added to the `Instance`","description":"The DescendantAdded even fires when a descendant is added to the `Instance`.\n\nAs DescendantAdded fires for every descendant, parenting an object to the `Instance` will fire the event for this object and all of its descendants individually.\n\nDevelopers only concerned with the immediate children of the `Instance` should use `Instance/ChildAdded` instead.\n\nSee also `Instance/DescendantRemoving`.","code_sample":[{"title":"Instance.DescendantAdded","display_title":"Instance.DescendantAdded","code_summary":"This following example will print the name of any object that is added to the Workspace:","code_sample":"\nWorkspace.DescendantAdded:Connect(function(descendant)\n\tprint(descendant)\nend)\n","locale":"en-us","tags":[],"uid":"blt08f139e1b5b1775a","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:07:38.428Z","updated_at":"2018-10-01T08:28:08.278Z","url":"/code-sample/Instance-DescendantAdded1","_version":12,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"duration":"","date":null,"sequence_number":null,"summary":"","expected_output":"","validated_in_version":"","comments_issues":"","published_at":"2019-06-15T00:16:11.142Z"}],"wikitext":"{{APIMemberPage\n|MemberType=Event\n|ClassName=Instance\n|TypeArgs.descendant=Class/Instance\n|Example=\nThis following example will print the name of any object that is added to the Workspace:\n{{Lua|=\nWorkspace.DescendantAdded:connect(function(descendant)\n\tprint(descendant)\nend)\n}}\n|Description=Fires when a descendant is added to the object.\n}}","security":"None","roblox_api_tags":[],"argument":[{"type":"Instance","name":"descendant","default":"","summary":"The `Instance` that has been added."}],"deprecation_message":"","locale":"en-us","tags":[],"uid":"blt136d0601da86c77d","created_by":"blt056181872171cff69cfbc0c3","updated_by":"bltb3147545f90dee1b","created_at":"2018-06-05T10:24:09.433Z","updated_at":"2018-09-16T15:42:59.005Z","_version":19,"display_title":"DescendantAdded","api_dump_signature":"08533846a850339cbfbfb47e02c1e14f66b3f2e7_v2","api_event_url":"/api-reference/event/Instance/DescendantAdded","type":"RBXScriptSignal","url":"/api-reference/event/Instance/DescendantAdded","fast_flags":[],"published_at":"2019-06-14T21:57:46.673Z"},{"title":"Instance.DescendantRemoving","summary":"Fires immediately before a descendant of the `Instance` is removed.","description":"DescendantRemoving fires **immediately before** the `Instance/Parent|Parent` of a descendant of the `Instance` changes such that the object is no longer a descendant of the Instance. `Instance/Destroy|Destroy` and `Instance/Remove|Remove` change an object's Parent to nil, so calling these on a descendant of an object will therefore cause this event to fire.\n\nSince this event fires before the the descendant's removal, the Parent of the descendant will be unchanged, i.e., it will still be a descendant at the time of this event firing. If the descendant is also a child of the object, It will also fire before ChildRemoved. There is no similar event called \"DescendantRemoved\".\n\nIf a descendant has children, this event fires with the descendant first followed by its descendants.\n\n## Example\nThe example below should help clarify how DescendantRemoving fires when there are several objects involved.\n\n![A cropped screenshot of the Explorer window. A Model contains ModelA and ModelB, which each contain a Part, PartA and PartB respectively. PartA contains a Fire object named FireA.][1]\n\n* Calling `Instance/Remove|Remove` on **PartA** would cause DescendantRemoving to fire on both **ModelA** and **Model**, in that order.\n* Setting the `Instance/Parent|Parent` of **PartA** to **ModelB** would cause DescendantRemoving to fire on **ModelA** but not **Model** (as Model would still be an ancestor of PartA).\n* Calling `Instance/Destroy|Destroy` on **ModelA** would cause DescendantRemoving to fire multiple times on several objects:\n\t1. On **Model** with **ModelA**, **PartA** then **FireA**.\n\t2. On **ModelA**, with **PartA** then **FireA**.\n\t3. On **PartA** with **FireA**.\n\n## Warning\nThis event fires with the descendant object that is being removed. Attempting to set the `Instance/Parent|Parent` of the descendant being removed to something else **will fail** with the following warning: \"Something unexpectedly tried to set the parent of X to Y while trying to set the parent of X. Current parent is Z\", where X is the removing descendant, Y is the ignored parent setting, and Z is the original parent of X. Below is an example that demonstrates this:\n\n```\nworkspace.DescendantRemoving:Connect(function(descendant)\n\t-- Don't manipulate the parent of descendant in this function!\n\t-- This event fires BECAUSE the parent of descendant was manipulated,\n\t-- and the change hasn't happened yet, i.e. this function fires before that happens.\n\t-- Therefore, it is problematic to change the parent like this:\n\tdescendant.Parent = game\nend)\nlocal part = Instance.new(\"Part\")\npart.Parent = workspace\npart.Parent = nil -- This triggers DescendantRemoving on Workspace:\n--&gt; Something unexpectedly tried to set the parent of Part to NULL while trying to set the parent of Part. Current parent is Workspace. \n```\n\nSee also `Instance/DescendantAdded|DescendantAdded`.\n\n  [1]: /assets/5bedf8a8a79094cd2b6a1c41/DescendantRemoving2.png","code_sample":[{"title":"Instance.DescendantRemoving","display_title":"Instance.DescendantRemoving","code_summary":"The following example prints the name of any descendant as it is being removed from the Workspace:","code_sample":"\nworkspace.DescendantRemoving:Connect(function(descendant)\n\tprint(descendant.Name .. \" is currently parented to \" ..  tostring(descendant.Parent))\nend)\nlocal part = Instance.new(\"Part\")\npart.Parent = workspace\npart.Parent = nil\n--> Part is currently parented to Workspace\nprint(part.Parent)\n--> nil\n","locale":"en-us","tags":[],"uid":"bltaa995c87c850ef4a","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:07:39.850Z","updated_at":"2018-10-01T08:28:11.038Z","url":"/code-sample/Instance-DescendantRemoving1","_version":11,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"duration":"","date":null,"sequence_number":null,"summary":"","expected_output":"","validated_in_version":"","comments_issues":"","published_at":"2019-06-15T00:16:06.651Z"}],"wikitext":"{{APIMemberPage\n|MemberType=Event\n|ClassName=Instance\n|TypeArgs.descendant=Class/Instance\n|Example=\nThe following example prints the name of any descendant as it is being removed from the Workspace:\n{{Lua|=\nworkspace.DescendantRemoving:connect(function(descendant)\n\tprint(descendant.Name .. \" is currently parented to \" ..  tostring(descendant.Parent))\nend)\nlocal part = Instance.new(\"Part\")\npart.Parent = workspace\npart.Parent = nil\n--> Part is currently parented to Workspace\nprint(part.Parent)\n--> nil\n}}\n|Description=Fires before a descendant of the object is removed.\n|Notes=\nDo not try to set the descendant's parent to something else when this event fires, or it will fail get the following warning:\n{{Lua|=\nworkspace.DescendantRemoving:connect(function(descendant)\n\tdescendant.Parent = game\nend)\nlocal part = Instance.new(\"Part\")\npart.Parent = workspace\npart.Parent = nil\n--> Something unexpectedly tried to set the parent of Part to NULL while trying to set the parent of Part. Current parent is Workspace.\n}}\n}}","security":"None","roblox_api_tags":[],"argument":[{"type":"Instance","name":"descendant","default":"","summary":"The `Instance` that is being removed."}],"deprecation_message":"Deprecation Message","locale":"en-us","tags":[],"uid":"bltcea9fb0d34791367","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt799ea0ef2eb3638e","created_at":"2018-06-05T10:24:10.797Z","updated_at":"2018-12-05T22:33:32.080Z","_version":34,"type":"RBXScriptSignal","display_title":"DescendantRemoving","api_dump_signature":"8051a8855ae84addc1b950d9dff28d658fcbb8ae_v2","api_event_url":"/api-reference/event/Instance/DescendantRemoving","url":"/api-reference/event/Instance/DescendantRemoving","fast_flags":[],"published_at":"2019-06-14T21:56:04.942Z"}],"callback":[],"locale":"en-us","tags":["abstract"],"uid":"blta2c118d601f489f0","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T12:40:49.881Z","updated_at":"2019-05-08T20:47:10.926Z","_version":23,"class_url":"/api-reference/class/Instance","url":"/api-reference/class/Instance","api_dump_signature":"2c8dca3167d1a945a73fbdd7cde610ca1a98bc88_v2","deprecated_property":[{"title":"Instance.archivable","type":"bool","locale":"en-us","tags":[],"summary":"","description":"","code_sample":[],"serialization":{"can_save":false,"can_load":true},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"This deprecated property is a variant of `/Instance/Archivable` which should be used instead.","api_property_url":"/api-reference/property/Instance/archivable","roblox_api_tags":["Hidden","NotReplicated","Deprecated"],"studio_category":"Behavior","script_editor_context":[],"wiki_text_reference":"#REDIRECT [[API:Class/Instance/Archivable]]\n{{APIMemberPage\n|Description=Deprecated in favor of [[API:Class/Instance/Archivable|Archivable]]. \n}}","uid":"bltfce92d04953c991b","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T12:00:24.179Z","updated_at":"2018-07-26T17:44:03.407Z","_version":14,"display_title":"archivable","api_dump_signature":"0b8764bab775a86a5352e1e5a58d549f8a09a71a_v2","url":"/api-reference/property/Instance/archivable","type_category":"Primitive","published_at":"2019-06-14T22:56:49.088Z"},{"title":"Instance.className","type":"string","locale":"en-us","tags":[],"summary":"","description":"","code_sample":[],"serialization":{"can_save":false,"can_load":false},"security":{"read_security_tag":"None","write_security_tag":"None"},"deprecation_message":"This deprecated property is a variant of `/Instance/ClassName` which should be used instead.","api_property_url":"/api-reference/property/Instance/className","roblox_api_tags":["ReadOnly","NotReplicated","Deprecated"],"studio_category":"Data","script_editor_context":[],"wiki_text_reference":"Error fetching documentation from Wiki","uid":"blt35bfe7f95626e5e8","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T12:00:42.188Z","updated_at":"2018-07-26T17:44:04.600Z","_version":14,"display_title":"className","api_dump_signature":"9823e687ddb6d2515c2d5b187b513217b0a9bd0f_v2","url":"/api-reference/property/Instance/className","type_category":"Primitive","published_at":"2019-06-14T22:56:46.848Z"}],"deprecated_function":[{"title":"Instance:Remove","url":"/api-reference/function/Instance/Remove","locale":"en-us","tags":[],"summary":"Sets the object's Parent to nil, and does the same for all its descendants.","description":"The Remove function sets the object's `Instance/Parent` to nil, and does the same for all its descendants.\n\nIf the object is referenced before being removed it is possible to retrieve the object at a later point.","code_sample":[{"title":"Instance:Remove","display_title":"Instance:Remove","code_summary":"The following code demonstrates how a part can be re-added to the DataModel after being removed:","code_sample":"local part = Instance.new(\"Part\", Workspace)\nprint(part.Parent)\n--> Workspace\n\npart:Remove()\nprint(part.Parent)\n--> nil\n\npart.Parent = Workspace\nprint(part.Parent)\n--> Workspace","locale":"en-us","tags":[],"validated_in_version":"","comments_issues":"","uid":"bltaf95de0b58341e59","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt47935daab13ee531","created_at":"2018-06-05T10:09:54.108Z","updated_at":"2018-06-28T21:53:34.224Z","url":"/code-sample/Instance-Remove1","_version":11,"thumbnail_image":{"uid":"blt97389dca0adba86b","created_at":"2018-06-22T20:48:13.380Z","updated_at":"2018-06-22T20:48:13.380Z","created_by":"blt917003a0d43f32d8","updated_by":"blt917003a0d43f32d8","content_type":"image/png","file_size":"3795","tags":[],"filename":"code-sample-icon.png","url":"https://images.contentstack.io/v3/assets/bltc2ad39afa86662c8/blt97389dca0adba86b/5b2d608d2d96e4e55d623890/code-sample-icon.png","is_dir":false,"parent_uid":null,"_version":1,"title":"code-sample-icon.png","_internal_url":"/assets/blt97389dca0adba86b/code-sample-icon.png"},"tutorial_category":[],"duration":"","date":null,"sequence_number":null,"summary":"","expected_output":"","published_at":"2019-06-15T00:31:55.638Z"}],"roblox_api_tags":["Deprecated"],"returns":[{"return_type":"void","return_category":"Primitive","summary":""}],"argument":[],"deprecation_message":"This item is deprecated in favor of `Instance/Destroy` and `Instance/ClearAllChildren`. If you must remove an object from the game, and wish to use the object later, set its Parent property to nil instead of using this method.","wikitext":"{{APIMemberPage\n|MemberType=Function\n|ClassName=Instance\n|Example=\nThe following code demonstrates how a part can be re-added to the DataModel after being removed:\n{{Lua|=\nlocal part = Instance.new(\"Part\", Workspace)\nprint(part.Parent)\n--> Workspace\n\npart:Remove()\nprint(part.Parent)\n--> nil\n\npart.Parent = Workspace\nprint(part.Parent)\n--> Workspace\n}}\n|Notes=\n*This item is deprecated in favor of [[API:Class/Instance/Destroy|Destroy]] and [[API:Class/Instance/ClearAllChildren|ClearAllChildren]]. If you must remove an object from the game, and wish to use the object later, set its Parent property to nil instead of using this method. \n*If the object is referenced before being removed it is possible to retrieve the object at a later point. \n|Description=Sets the object's [[API:Class/Instance/Parent|Parent]] to nil, and does the same for all its descendants.\n}}","security":"None","uid":"blt279d609812a1bcab","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:36:14.524Z","updated_at":"2018-07-23T23:36:09.147Z","_version":13,"display_title":"Remove","api_dump_signature":"8724094a532967726f26fbc00d625f55d2027750_v2","published_at":"2019-06-14T22:38:45.249Z"},{"title":"Instance:children","url":"/api-reference/function/Instance/children","locale":"en-us","tags":[],"summary":"Returns an array of the object's children.","description":"The children function returns an array of the object's children.","code_sample":[],"roblox_api_tags":["Deprecated"],"returns":[{"return_type":"Objects","return_category":"DataType","summary":"Array of child objects/instances."}],"argument":[],"deprecation_message":"This item has been superseded by `Instance/GetChildren` which should be used in all new work.","wikitext":"#REDIRECT [[API:Class/Instance/GetChildren]]\n\n{{APIMemberPage|Description=Deprecated in favor of [[API:Class/Instance/GetChildren|GetChildren]].}}","security":"None","uid":"blt3411e0d28251a980","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:36:15.875Z","updated_at":"2018-07-23T23:36:14.289Z","_version":13,"display_title":"children","api_dump_signature":"443b2bd78c79516642f08be5a1232f44e6a83168_v2","published_at":"2019-06-14T22:38:43.172Z"},{"title":"Instance:clone","url":"/api-reference/function/Instance/clone","locale":"en-us","tags":[],"summary":"","description":"","code_sample":[],"roblox_api_tags":["Deprecated"],"returns":[{"return_type":"Instance","return_category":"Class","summary":""}],"argument":[],"deprecation_message":"This deprecated function is a variant of `/Instance/Clone` which should be used instead.","wikitext":"Error fetching documentation from Wiki","security":"None","uid":"blt9d87849f44ae2bd1","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:38:21.192Z","updated_at":"2018-07-23T23:36:16.639Z","_version":13,"display_title":"clone","api_dump_signature":"26eeca1ba6459c57cb341b83fbe0d291d7e31242_v2","published_at":"2019-06-14T22:38:41.089Z"},{"title":"Instance:destroy","url":"/api-reference/function/Instance/destroy","locale":"en-us","tags":[],"summary":"","description":"","code_sample":[],"roblox_api_tags":["Deprecated"],"returns":[{"return_type":"void","return_category":"Primitive","summary":""}],"argument":[],"deprecation_message":"This deprecated function is a variant of `/Instance/Destroy` which should be used instead.","wikitext":"Error fetching documentation from Wiki","security":"None","uid":"bltf24b45df28e24143","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:38:08.774Z","updated_at":"2018-07-23T23:36:19.070Z","_version":13,"display_title":"destroy","api_dump_signature":"895f5bf4bee499a1b2853f909510039b54c3d8c3_v2","published_at":"2019-06-14T22:38:38.995Z"},{"title":"Instance:findFirstChild","url":"/api-reference/function/Instance/findFirstChild","locale":"en-us","tags":[],"summary":"","description":"","code_sample":[],"roblox_api_tags":["Deprecated"],"returns":[{"return_type":"Instance","return_category":"Class","summary":""}],"argument":[{"type":"string","category":"Primitive","name":"name","default":""},{"type":"bool","category":"Primitive","name":"recursive","default":"false"}],"deprecation_message":"This deprecated function is a variant of `/Instance/FindFirstChild` which should be used instead.","wikitext":"Error fetching documentation from Wiki","security":"None","uid":"bltb7823d41c04c6e03","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:38:11.174Z","updated_at":"2018-07-23T23:36:21.492Z","_version":13,"display_title":"findFirstChild","api_dump_signature":"a75c8b132329fcd77a97473d4b7ecd4d1b3d9bc2_v2","published_at":"2019-06-14T22:38:36.896Z"},{"title":"Instance:getChildren","url":"/api-reference/function/Instance/getChildren","locale":"en-us","tags":[],"summary":"","description":"","code_sample":[],"roblox_api_tags":["Deprecated"],"returns":[{"return_type":"Objects","return_category":"DataType","summary":""}],"argument":[],"deprecation_message":"This deprecated function is a variant of `/Instance/GetChildren` which should be used instead.","wikitext":"Error fetching documentation from Wiki","security":"None","uid":"blt6df980a9ec1bfe70","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:38:53.282Z","updated_at":"2018-07-23T23:36:23.827Z","_version":13,"display_title":"getChildren","api_dump_signature":"4cca83f3c9b44f1f330f595dc0df83460ef43d47_v2","published_at":"2019-06-14T22:38:34.732Z"},{"title":"Instance:isDescendantOf","url":"/api-reference/function/Instance/isDescendantOf","locale":"en-us","tags":[],"summary":"","description":"","code_sample":[],"roblox_api_tags":["Deprecated"],"returns":[{"return_type":"bool","return_category":"Primitive","summary":""}],"argument":[{"type":"Instance","category":"Class","name":"ancestor","default":""}],"deprecation_message":"This deprecated function is a variant of `/Instance/IsDescendantOf` which should be used instead.","wikitext":"Error fetching documentation from Wiki","security":"None","uid":"blt6291da7ee4b2c9c5","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:38:49.128Z","updated_at":"2018-07-23T23:36:28.698Z","_version":13,"display_title":"isDescendantOf","api_dump_signature":"918af99d9183ebd33e4e845d252c7e2ce33636f0_v2","published_at":"2019-06-14T22:38:32.442Z"},{"title":"Instance:remove","url":"/api-reference/function/Instance/remove","locale":"en-us","tags":[],"summary":"","description":"","code_sample":[],"roblox_api_tags":["Deprecated"],"returns":[{"return_type":"void","return_category":"Primitive","summary":""}],"argument":[],"deprecation_message":"This deprecated function is a variant of `/Instance/Remove` which has also been deprecated. Neither function should be used in new work.","wikitext":"Error fetching documentation from Wiki","security":"None","uid":"blt1afd9c68abb0621b","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:38:45.388Z","updated_at":"2018-07-23T23:36:31.036Z","_version":13,"display_title":"remove","api_dump_signature":"c67701a0435ebc533abff453e023882837bebd9e_v2","published_at":"2019-06-14T22:38:30.294Z"},{"title":"Instance:isA","url":"/api-reference/function/Instance/isA","locale":"en-us","tags":[],"summary":"","description":"","code_sample":[],"roblox_api_tags":["Deprecated","CustomLuaState"],"returns":[{"return_type":"bool","return_category":"Primitive","summary":""}],"argument":[{"type":"string","category":"Primitive","name":"className","default":""}],"deprecation_message":"This deprecated function is a variant of `/Instance/IsA` which should be used instead.","wikitext":"Error fetching documentation from Wiki","security":"None","uid":"blt02c8c085b5232e1c","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:38:18.414Z","updated_at":"2019-05-08T20:47:18.565Z","_version":14,"display_title":"isA","api_dump_signature":"aa08f34c2322abe49327f64bdeedaf6f6ca1680e_v2","published_at":"2019-06-14T22:05:52.705Z"}],"deprecated_event":[{"title":"Instance.childAdded","summary":"","description":"","code_sample":[],"wikitext":"Error fetching documentation from Wiki","security":"None","roblox_api_tags":["Deprecated"],"argument":[{"type":"Instance","name":"child","default":""}],"deprecation_message":"This deprecated event is a variant of `/Instance/ChildAdded` which should be used instead.","locale":"en-us","tags":[],"uid":"blt6284f2285ba0d1a8","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-05T10:25:13.880Z","updated_at":"2018-07-23T23:36:48.117Z","_version":15,"display_title":"childAdded","api_dump_signature":"16fe2a5761ee8fbe4d7f5ae4a123ec6d161adaa8_v2","api_event_url":"/api-reference/event/Instance/childAdded","type":"RBXScriptSignal","url":"/api-reference/event/Instance/childAdded","published_at":"2019-06-14T22:04:16.949Z"}],"deprecated_callback":[],"fast_flags":[],"published_at":"2019-06-14T21:20:31.183Z"}]}}],"tags":[],"locale":"en-us","uid":"blt028c60da59516cd4","created_by":"blt056181872171cff69cfbc0c3","updated_by":"blt917003a0d43f32d8","created_at":"2018-06-07T18:14:06.708Z","updated_at":"2018-07-24T01:14:09.683Z","_version":13,"published_at":"2019-06-15T02:14:01.264Z"},"tutorials":[{"title":"All Content","url":"/learn-roblox/all-tutorials","hero_banner_section":[{"articles":{"article":{"values":["blt94548761bda9614f"],"_content_type_id":"article_landing_page"}}}],"tags":[],"locale":"en-us","uid":"blt04cd3f646d355f63","created_by":"sys_blt5fa5fe1ec7dc76e1","updated_by":"blt61d7b6b13aecbf76","created_at":"2018-06-07T07:36:16.254Z","updated_at":"2018-06-26T04:22:51.504Z","_version":16,"browser_tab_label":"Learn Roblox","published_at":"2019-06-14T23:38:28.072Z"},{"title":"Analytics","url":"/learn-roblox/analytics","browser_tab_label":"Learn Roblox | Analytics","hero_banner_section":[{"articles":{"article":{"values":["blt6b9299c9f742fffb"],"_content_type_id":"article_landing_page"}}}],"tags":[],"locale":"en-us","uid":"blt3211a5813cdd7aa3","created_by":"blt5be30f04f513b567","updated_by":"blt5be30f04f513b567","created_at":"2018-10-26T23:24:33.160Z","updated_at":"2018-10-26T23:35:28.816Z","_version":3,"published_at":"2019-06-14T23:38:17.225Z"},{"title":"Coding and Scripts","url":"/learn-roblox/coding-scripts","hero_banner_section":[{"articles":{"article":{"values":["bltabd194958b0a06da"],"_content_type_id":"article_landing_page"}}}],"tags":[],"locale":"en-us","uid":"blt33d571132faf8b5d","created_by":"sys_blt5fa5fe1ec7dc76e1","updated_by":"blt1135fe0153024444","created_at":"2018-06-07T07:37:29.987Z","updated_at":"2018-12-07T22:31:06.778Z","_version":10,"browser_tab_label":"Learn Roblox | Coding and Scripts","published_at":"2019-06-14T23:38:15.051Z"},{"title":"Creating","url":"/learn-roblox/creating","hero_banner_section":[{"articles":{"article":{"values":["blt46dfef3bb1cb7ac7"],"_content_type_id":"article_landing_page"}}}],"tags":[],"locale":"en-us","uid":"blt694a2194547b70c7","created_by":"blta834a6d505d54b0c","updated_by":"blt1135fe0153024444","created_at":"2018-06-17T22:19:40.794Z","updated_at":"2019-03-01T19:27:57.755Z","_version":5,"browser_tab_label":"Learn Roblox | Creating","published_at":"2019-06-14T23:38:10.669Z"},{"title":"Cross-Platform","url":"/learn-roblox/cross-platform","hero_banner_section":[{"articles":{"article":{"values":["blt4c8eed4a09022c9d"],"_content_type_id":"article_landing_page"}}}],"tags":[],"locale":"en-us","uid":"blt2d221ba9f2166679","created_by":"blta834a6d505d54b0c","updated_by":"blt1135fe0153024444","created_at":"2018-06-17T22:21:30.519Z","updated_at":"2018-12-19T23:01:31.802Z","_version":6,"browser_tab_label":"Learn Roblox | Cross-Platform","published_at":"2019-06-14T23:38:12.909Z"},{"title":"Gameplay","url":"/learn-roblox/gameplay","hero_banner_section":[{"articles":{"article":{"values":["bltfbc35e13e574fda9"],"_content_type_id":"article_landing_page"}}}],"tags":[],"locale":"en-us","uid":"blte436e9d42f4aabb3","created_by":"blt0d2e21c80087f7ec0b18bbac","updated_by":"blt61d7b6b13aecbf76","created_at":"2018-06-15T11:10:16.202Z","updated_at":"2018-06-25T17:37:57.854Z","_version":5,"browser_tab_label":"Learn Roblox | Gameplay","published_at":"2019-06-14T23:38:32.215Z"},{"title":"International","url":"/learn-roblox/international","browser_tab_label":"Learn Roblox | International","hero_banner_section":[{"articles":{"article":{"values":["blt6cd08811dbb96ae5"],"_content_type_id":"article_landing_page"}}}],"tags":[],"locale":"en-us","uid":"blt3f161767fbfa4678","created_by":"blt47935daab13ee531","updated_by":"blt87f9897a39b481d174c64fce","created_at":"2018-08-08T18:36:59.376Z","updated_at":"2018-08-14T10:56:43.777Z","_version":7,"published_at":"2019-06-14T23:38:21.724Z"},{"title":"Marketing","url":"/learn-roblox/marketing","hero_banner_section":[{"articles":{"article":{"values":["bltd8fcb6c8d13025d0"],"_content_type_id":"article_landing_page"}}}],"tags":[],"locale":"en-us","uid":"blt08c8c5914c7da7a3","created_by":"blta834a6d505d54b0c","updated_by":"blt1135fe0153024444","created_at":"2018-06-17T22:20:16.095Z","updated_at":"2018-08-09T02:52:57.932Z","_version":6,"browser_tab_label":"Learn Roblox | Marketing","published_at":"2019-06-14T23:38:23.791Z"},{"title":"Monetization","url":"/learn-roblox/monetization","hero_banner_section":[{"articles":{"article":{"values":["blt63ccc04b981db2b6"],"_content_type_id":"article_landing_page"}}}],"tags":[],"locale":"en-us","uid":"blte47c3b515525a385","created_by":"sys_blt5fa5fe1ec7dc76e1","updated_by":"blta834a6d505d54b0c","created_at":"2018-06-07T07:39:57.565Z","updated_at":"2018-06-23T00:27:35.235Z","_version":7,"browser_tab_label":"Learn Roblox | Monetization","published_at":"2019-06-14T23:38:34.400Z"},{"title":"Optimization","url":"/learn-roblox/optimization","hero_banner_section":[{"articles":{"article":{"values":["blt2164b659621cf1d0"],"_content_type_id":"article_landing_page"}}}],"tags":[],"locale":"en-us","uid":"blte06618818910e324","created_by":"sys_blt5fa5fe1ec7dc76e1","updated_by":"blta834a6d505d54b0c","created_at":"2018-06-07T07:38:26.740Z","updated_at":"2018-06-23T00:27:02.348Z","_version":6,"browser_tab_label":"Learn Roblox | Optimization","published_at":"2019-06-14T23:38:36.557Z"},{"title":"RDC 2018","url":"/learn-roblox/rdc-2018","browser_tab_label":"Learn Roblox | RDC 2018","hero_banner_section":[{"video":{"video":{"values":["bltf5d2cdd91d040ec0"],"_content_type_id":"video_landing_page"}}}],"tags":[],"locale":"en-us","uid":"blte2e3ac7ce79d0b3d","created_by":"blt47935daab13ee531","updated_by":"blt47935daab13ee531","created_at":"2018-07-31T17:52:32.375Z","updated_at":"2018-09-05T20:52:41.386Z","_version":6,"published_at":"2019-06-14T23:38:19.505Z"},{"title":"Sound, Lighting & FX","url":"/learn-roblox/sound-lighting-fx","hero_banner_section":[{"articles":{"article":{"values":["blt330b7f6881174dd9"],"_content_type_id":"article_landing_page"}}}],"tags":[],"locale":"en-us","uid":"bltf7f7c08bc7808858","created_by":"blta834a6d505d54b0c","updated_by":"blt1135fe0153024444","created_at":"2018-06-17T22:18:52.352Z","updated_at":"2019-04-17T18:59:27.520Z","_version":5,"browser_tab_label":"Learn Roblox | Sound, Lighting & FX","published_at":"2019-06-14T23:38:08.550Z"},{"title":"Studio Basics","url":"/learn-roblox/studio-basics","hero_banner_section":[{"articles":{"article":{"values":["blt1bd9f2cc9aa1bc15"],"_content_type_id":"article_landing_page"}}}],"tags":[],"locale":"en-us","uid":"blt41cb34fa5dd7d305","created_by":"blta834a6d505d54b0c","updated_by":"blt61d7b6b13aecbf76","created_at":"2018-06-17T22:23:16.035Z","updated_at":"2018-06-25T19:40:58.832Z","_version":6,"browser_tab_label":"Learn Roblox | Studio Basics","published_at":"2019-06-14T23:38:30.108Z"},{"title":"User Interface","url":"/learn-roblox/user-interface","hero_banner_section":[{"articles":{"article":{"values":["bltfc07e933c0fa40ef"],"_content_type_id":"article_landing_page"}}}],"tags":[],"locale":"en-us","uid":"bltfece94a0528328eb","created_by":"sys_blt5fa5fe1ec7dc76e1","updated_by":"blt61d7b6b13aecbf76","created_at":"2018-06-07T07:39:03.587Z","updated_at":"2018-06-29T22:34:07.652Z","_version":8,"browser_tab_label":"Learn Roblox | User Interface","published_at":"2019-06-14T23:38:25.968Z"}],"mainArray":[{"category":"Adornments","subCategory":[{"title":"ArcHandles","url":"/api-reference/class/ArcHandles"},{"title":"BoxHandleAdornment","url":"/api-reference/class/BoxHandleAdornment"},{"title":"ConeHandleAdornment","url":"/api-reference/class/ConeHandleAdornment"},{"title":"CylinderHandleAdornment","url":"/api-reference/class/CylinderHandleAdornment"},{"title":"Handles","url":"/api-reference/class/Handles"},{"title":"ImageHandleAdornment","url":"/api-reference/class/ImageHandleAdornment"},{"title":"LineHandleAdornment","url":"/api-reference/class/LineHandleAdornment"},{"title":"SelectionBox","url":"/api-reference/class/SelectionBox"},{"title":"SelectionSphere","url":"/api-reference/class/SelectionSphere"},{"title":"SphereHandleAdornment","url":"/api-reference/class/SphereHandleAdornment"},{"title":"SurfaceSelection","url":"/api-reference/class/SurfaceSelection"}]},{"category":"Animations","subCategory":[{"title":"Animation","url":"/api-reference/class/Animation"},{"title":"AnimationController","url":"/api-reference/class/AnimationController"},{"title":"AnimationTrack","url":"/api-reference/class/AnimationTrack"},{"title":"Animator","url":"/api-reference/class/Animator"},{"title":"Keyframe","url":"/api-reference/class/Keyframe"},{"title":"KeyframeSequence","url":"/api-reference/class/KeyframeSequence"},{"title":"KeyframeSequenceProvider","url":"/api-reference/class/KeyframeSequenceProvider"},{"title":"Pose","url":"/api-reference/class/Pose"},{"title":"Tween","url":"/api-reference/class/Tween"},{"title":"TweenService","url":"/api-reference/class/TweenService"}]},{"category":"Avatar","subCategory":[{"title":"Accessory","url":"/api-reference/class/Accessory"},{"title":"Accoutrement","url":"/api-reference/class/Accoutrement"},{"title":"BodyColors","url":"/api-reference/class/BodyColors"},{"title":"CharacterMesh","url":"/api-reference/class/CharacterMesh"},{"title":"ForceField","url":"/api-reference/class/ForceField"},{"title":"Humanoid","url":"/api-reference/class/Humanoid"},{"title":"Pants","url":"/api-reference/class/Pants"},{"title":"Shirt","url":"/api-reference/class/Shirt"},{"title":"ShirtGraphic","url":"/api-reference/class/ShirtGraphic"}]},{"category":"Body Movers","subCategory":[{"title":"BodyAngularVelocity","url":"/api-reference/class/BodyAngularVelocity"},{"title":"BodyForce","url":"/api-reference/class/BodyForce"},{"title":"BodyGyro","url":"/api-reference/class/BodyGyro"},{"title":"BodyPosition","url":"/api-reference/class/BodyPosition"},{"title":"BodyThrust","url":"/api-reference/class/BodyThrust"},{"title":"BodyVelocity","url":"/api-reference/class/BodyVelocity"},{"title":"RocketPropulsion","url":"/api-reference/class/RocketPropulsion"}]},{"category":"Building","subCategory":[{"title":"CornerWedgePart","url":"/api-reference/class/CornerWedgePart"},{"title":"Decal","url":"/api-reference/class/Decal"},{"title":"Model","url":"/api-reference/class/Model"},{"title":"NegateOperation","url":"/api-reference/class/NegateOperation"},{"title":"Part","url":"/api-reference/class/Part"},{"title":"PhysicsService","url":"/api-reference/class/PhysicsService"},{"title":"Terrain","url":"/api-reference/class/Terrain"},{"title":"Texture","url":"/api-reference/class/Texture"},{"title":"TrussPart","url":"/api-reference/class/TrussPart"},{"title":"UnionOperation","url":"/api-reference/class/UnionOperation"},{"title":"WedgePart","url":"/api-reference/class/WedgePart"}]},{"category":"Constraints","subCategory":[{"title":"AlignOrientation","url":"/api-reference/class/AlignOrientation"},{"title":"AlignPosition","url":"/api-reference/class/AlignPosition"},{"title":"Attachment","url":"/api-reference/class/Attachment"},{"title":"BallSocketConstraint","url":"/api-reference/class/BallSocketConstraint"},{"title":"CylindricalConstraint","url":"/api-reference/class/CylindricalConstraint"},{"title":"HingeConstraint","url":"/api-reference/class/HingeConstraint"},{"title":"LineForce","url":"/api-reference/class/LineForce"},{"title":"PrismaticConstraint","url":"/api-reference/class/PrismaticConstraint"},{"title":"RodConstraint","url":"/api-reference/class/RodConstraint"},{"title":"RopeConstraint","url":"/api-reference/class/RopeConstraint"},{"title":"SpringConstraint","url":"/api-reference/class/SpringConstraint"},{"title":"Torque","url":"/api-reference/class/Torque"},{"title":"VectorForce","url":"/api-reference/class/VectorForce"},{"title":"WeldConstraint","url":"/api-reference/class/WeldConstraint"}]},{"category":"Data","subCategory":[{"title":"AssetService","url":"/api-reference/class/AssetService"},{"title":"ContentProvider","url":"/api-reference/class/ContentProvider"},{"title":"DataStorePages","url":"/api-reference/class/DataStorePages"},{"title":"DataStoreService","url":"/api-reference/class/DataStoreService"},{"title":"FriendPages","url":"/api-reference/class/FriendPages"},{"title":"GlobalDataStore","url":"/api-reference/class/GlobalDataStore"},{"title":"HttpService","url":"/api-reference/class/HttpService"},{"title":"InventoryPages","url":"/api-reference/class/InventoryPages"},{"title":"OrderedDataStore","url":"/api-reference/class/OrderedDataStore"},{"title":"StandardPages","url":"/api-reference/class/StandardPages"},{"title":"TerrainRegion","url":"/api-reference/class/TerrainRegion"}]},{"category":"Debugging","subCategory":[{"title":"DebuggerBreakpoint","url":"/api-reference/class/DebuggerBreakpoint"},{"title":"DebuggerManager","url":"/api-reference/class/DebuggerManager"},{"title":"DebuggerWatch","url":"/api-reference/class/DebuggerWatch"},{"title":"LogService","url":"/api-reference/class/LogService"},{"title":"RenderingTest","url":"/api-reference/class/RenderingTest"},{"title":"ScriptDebugger","url":"/api-reference/class/ScriptDebugger"},{"title":"Stats","url":"/api-reference/class/Stats"},{"title":"TestService","url":"/api-reference/class/TestService"}]},{"category":"Effects","subCategory":[{"title":"Beam","url":"/api-reference/class/Beam"},{"title":"Explosion","url":"/api-reference/class/Explosion"},{"title":"Fire","url":"/api-reference/class/Fire"},{"title":"ParticleEmitter","url":"/api-reference/class/ParticleEmitter"},{"title":"Smoke","url":"/api-reference/class/Smoke"},{"title":"Sparkles","url":"/api-reference/class/Sparkles"},{"title":"Trail","url":"/api-reference/class/Trail"}]},{"category":"Gameplay","subCategory":[{"title":"Backpack","url":"/api-reference/class/Backpack"},{"title":"BadgeService","url":"/api-reference/class/BadgeService"},{"title":"Camera","url":"/api-reference/class/Camera"},{"title":"Player","url":"/api-reference/class/Player"},{"title":"Players","url":"/api-reference/class/Players"},{"title":"PointsService","url":"/api-reference/class/PointsService"},{"title":"Seat","url":"/api-reference/class/Seat"},{"title":"SpawnLocation","url":"/api-reference/class/SpawnLocation"},{"title":"StarterPack","url":"/api-reference/class/StarterPack"},{"title":"Team","url":"/api-reference/class/Team"},{"title":"Teams","url":"/api-reference/class/Teams"},{"title":"TeleportService","url":"/api-reference/class/TeleportService"},{"title":"Tool","url":"/api-reference/class/Tool"},{"title":"Workspace","url":"/api-reference/class/Workspace"}]},{"category":"GUI","subCategory":[{"title":"BillboardGui","url":"/api-reference/class/BillboardGui"},{"title":"Frame","url":"/api-reference/class/Frame"},{"title":"Hint","url":"/api-reference/class/Hint"},{"title":"ImageButton","url":"/api-reference/class/ImageButton"},{"title":"ImageLabel","url":"/api-reference/class/ImageLabel"},{"title":"PlayerGui","url":"/api-reference/class/PlayerGui"},{"title":"ScreenGui","url":"/api-reference/class/ScreenGui"},{"title":"ScrollingFrame","url":"/api-reference/class/ScrollingFrame"},{"title":"StarterGui","url":"/api-reference/class/StarterGui"},{"title":"SurfaceGui","url":"/api-reference/class/SurfaceGui"},{"title":"TextBox","url":"/api-reference/class/TextBox"},{"title":"TextButton","url":"/api-reference/class/TextButton"},{"title":"TextLabel","url":"/api-reference/class/TextLabel"},{"title":"UIAspectRatioConstraint","url":"/api-reference/class/UIAspectRatioConstraint"},{"title":"UIGridLayout","url":"/api-reference/class/UIGridLayout"},{"title":"UIListLayout","url":"/api-reference/class/UIListLayout"},{"title":"UIPadding","url":"/api-reference/class/UIPadding"},{"title":"UIPageLayout","url":"/api-reference/class/UIPageLayout"},{"title":"UIScale","url":"/api-reference/class/UIScale"},{"title":"UISizeConstraint","url":"/api-reference/class/UISizeConstraint"},{"title":"UITableLayout","url":"/api-reference/class/UITableLayout"},{"title":"UITextSizeConstraint","url":"/api-reference/class/UITextSizeConstraint"}]},{"category":"Input","subCategory":[{"title":"ClickDetector","url":"/api-reference/class/ClickDetector"},{"title":"ContextActionService","url":"/api-reference/class/ContextActionService"},{"title":"Dragger","url":"/api-reference/class/Dragger"},{"title":"GuiService","url":"/api-reference/class/GuiService"},{"title":"HapticService","url":"/api-reference/class/HapticService"},{"title":"InputObject","url":"/api-reference/class/InputObject"},{"title":"Mouse","url":"/api-reference/class/Mouse"},{"title":"PlayerMouse","url":"/api-reference/class/PlayerMouse"},{"title":"UserInputService","url":"/api-reference/class/UserInputService"},{"title":"VehicleSeat","url":"/api-reference/class/VehicleSeat"},{"title":"VRService","url":"/api-reference/class/VRService"}]},{"category":"Joints","subCategory":[{"title":"Glue","url":"/api-reference/class/Glue"},{"title":"JointsService","url":"/api-reference/class/JointsService"},{"title":"ManualGlue","url":"/api-reference/class/ManualGlue"},{"title":"ManualWeld","url":"/api-reference/class/ManualWeld"},{"title":"Motor","url":"/api-reference/class/Motor"},{"title":"Motor6D","url":"/api-reference/class/Motor6D"},{"title":"Rotate","url":"/api-reference/class/Rotate"},{"title":"RotateP","url":"/api-reference/class/RotateP"},{"title":"RotateV","url":"/api-reference/class/RotateV"},{"title":"Snap","url":"/api-reference/class/Snap"},{"title":"Weld","url":"/api-reference/class/Weld"}]},{"category":"Lighting","subCategory":[{"title":"Lighting","url":"/api-reference/class/Lighting"},{"title":"PointLight","url":"/api-reference/class/PointLight"},{"title":"Sky","url":"/api-reference/class/Sky"},{"title":"SpotLight","url":"/api-reference/class/SpotLight"},{"title":"SurfaceLight","url":"/api-reference/class/SurfaceLight"}]},{"category":"Localization","subCategory":[{"title":"LocalizationService","url":"/api-reference/class/LocalizationService"},{"title":"LocalizationTable","url":"/api-reference/class/LocalizationTable"},{"title":"Translator","url":"/api-reference/class/Translator"}]},{"category":"Meshes","subCategory":[{"title":"BlockMesh","url":"/api-reference/class/BlockMesh"},{"title":"FileMesh","url":"/api-reference/class/FileMesh"},{"title":"MeshPart","url":"/api-reference/class/MeshPart"},{"title":"SpecialMesh","url":"/api-reference/class/SpecialMesh"}]},{"category":"Monetization","subCategory":[{"title":"GamePassService","url":"/api-reference/class/GamePassService"},{"title":"MarketplaceService","url":"/api-reference/class/MarketplaceService"}]},{"category":"Pathfinding","subCategory":[{"title":"Path","url":"/api-reference/class/Path"},{"title":"PathfindingService","url":"/api-reference/class/PathfindingService"}]},{"category":"Plugins","subCategory":[{"title":"Button","url":"/api-reference/class/Button"},{"title":"ChangeHistoryService","url":"/api-reference/class/ChangeHistoryService"},{"title":"CoreGui","url":"/api-reference/class/CoreGui"},{"title":"DockWidgetPluginGui","url":"/api-reference/class/DockWidgetPluginGui"},{"title":"Plugin","url":"/api-reference/class/Plugin"},{"title":"PluginAction","url":"/api-reference/class/PluginAction"},{"title":"PluginGuiService","url":"/api-reference/class/PluginGuiService"},{"title":"PluginManager","url":"/api-reference/class/PluginManager"},{"title":"PluginMouse","url":"/api-reference/class/PluginMouse"},{"title":"QWidgetPluginGui","url":"/api-reference/class/QWidgetPluginGui"},{"title":"Selection","url":"/api-reference/class/Selection"},{"title":"StatsItem","url":"/api-reference/class/StatsItem"},{"title":"StudioTheme","url":"/api-reference/class/StudioTheme"},{"title":"Toolbar","url":"/api-reference/class/Toolbar"}]},{"category":"Post Processing","subCategory":[{"title":"BloomEffect","url":"/api-reference/class/BloomEffect"},{"title":"BlurEffect","url":"/api-reference/class/BlurEffect"},{"title":"ColorCorrectionEffect","url":"/api-reference/class/ColorCorrectionEffect"},{"title":"SunRaysEffect","url":"/api-reference/class/SunRaysEffect"}]},{"category":"Scripting","subCategory":[{"title":"BindableEvent","url":"/api-reference/class/BindableEvent"},{"title":"BindableFunction","url":"/api-reference/class/BindableFunction"},{"title":"CoreScript","url":"/api-reference/class/CoreScript"},{"title":"DataModel","url":"/api-reference/class/DataModel"},{"title":"LocalScript","url":"/api-reference/class/LocalScript"},{"title":"ModuleScript","url":"/api-reference/class/ModuleScript"},{"title":"PackageLink","url":"/api-reference/class/PackageLink"},{"title":"PlayerScripts","url":"/api-reference/class/PlayerScripts"},{"title":"RemoteEvent","url":"/api-reference/class/RemoteEvent"},{"title":"RemoteFunction","url":"/api-reference/class/RemoteFunction"},{"title":"ReplicatedFirst","url":"/api-reference/class/ReplicatedFirst"},{"title":"RunService","url":"/api-reference/class/RunService"},{"title":"Script","url":"/api-reference/class/Script"},{"title":"ServerScriptService","url":"/api-reference/class/ServerScriptService"},{"title":"StarterCharacterScripts","url":"/api-reference/class/StarterCharacterScripts"},{"title":"StarterPlayer","url":"/api-reference/class/StarterPlayer"},{"title":"StarterPlayerScripts","url":"/api-reference/class/StarterPlayerScripts"}]},{"category":"Settings","subCategory":[{"title":"DebugSettings","url":"/api-reference/class/DebugSettings"},{"title":"GameSettings","url":"/api-reference/class/GameSettings"},{"title":"GlobalSettings","url":"/api-reference/class/GlobalSettings"},{"title":"LuaSettings","url":"/api-reference/class/LuaSettings"},{"title":"NetworkSettings","url":"/api-reference/class/NetworkSettings"},{"title":"PhysicsSettings","url":"/api-reference/class/PhysicsSettings"},{"title":"RenderSettings","url":"/api-reference/class/RenderSettings"},{"title":"Studio","url":"/api-reference/class/Studio"},{"title":"TaskScheduler","url":"/api-reference/class/TaskScheduler"},{"title":"UserGameSettings","url":"/api-reference/class/UserGameSettings"},{"title":"UserSettings","url":"/api-reference/class/UserSettings"}]},{"category":"Social","subCategory":[{"title":"Chat","url":"/api-reference/class/Chat"},{"title":"Dialog","url":"/api-reference/class/Dialog"},{"title":"DialogChoice","url":"/api-reference/class/DialogChoice"},{"title":"GroupService","url":"/api-reference/class/GroupService"},{"title":"StarterGear","url":"/api-reference/class/StarterGear"},{"title":"TextFilterResult","url":"/api-reference/class/TextFilterResult"}]},{"category":"Sounds","subCategory":[{"title":"ChorusSoundEffect","url":"/api-reference/class/ChorusSoundEffect"},{"title":"CompressorSoundEffect","url":"/api-reference/class/CompressorSoundEffect"},{"title":"DistortionSoundEffect","url":"/api-reference/class/DistortionSoundEffect"},{"title":"EchoSoundEffect","url":"/api-reference/class/EchoSoundEffect"},{"title":"EqualizerSoundEffect","url":"/api-reference/class/EqualizerSoundEffect"},{"title":"FlangeSoundEffect","url":"/api-reference/class/FlangeSoundEffect"},{"title":"PitchShiftSoundEffect","url":"/api-reference/class/PitchShiftSoundEffect"},{"title":"ReverbSoundEffect","url":"/api-reference/class/ReverbSoundEffect"},{"title":"Sound","url":"/api-reference/class/Sound"},{"title":"SoundGroup","url":"/api-reference/class/SoundGroup"},{"title":"SoundService","url":"/api-reference/class/SoundService"},{"title":"TremoloSoundEffect","url":"/api-reference/class/TremoloSoundEffect"}]},{"category":"Utility","subCategory":[{"title":"CollectionService","url":"/api-reference/class/CollectionService"},{"title":"Configuration","url":"/api-reference/class/Configuration"},{"title":"Debris","url":"/api-reference/class/Debris"},{"title":"Folder","url":"/api-reference/class/Folder"},{"title":"InsertService","url":"/api-reference/class/InsertService"},{"title":"ReplicatedStorage","url":"/api-reference/class/ReplicatedStorage"},{"title":"ServerStorage","url":"/api-reference/class/ServerStorage"},{"title":"TextService","url":"/api-reference/class/TextService"}]},{"category":"Values","subCategory":[{"title":"BoolValue","url":"/api-reference/class/BoolValue"},{"title":"BrickColorValue","url":"/api-reference/class/BrickColorValue"},{"title":"CFrameValue","url":"/api-reference/class/CFrameValue"},{"title":"Color3Value","url":"/api-reference/class/Color3Value"},{"title":"DoubleConstrainedValue","url":"/api-reference/class/DoubleConstrainedValue"},{"title":"IntConstrainedValue","url":"/api-reference/class/IntConstrainedValue"},{"title":"IntValue","url":"/api-reference/class/IntValue"},{"title":"NumberValue","url":"/api-reference/class/NumberValue"},{"title":"ObjectValue","url":"/api-reference/class/ObjectValue"},{"title":"RayValue","url":"/api-reference/class/RayValue"},{"title":"StringValue","url":"/api-reference/class/StringValue"},{"title":"Vector3Value","url":"/api-reference/class/Vector3Value"}]}],"requestProtocol":"http","requestPath":"/api-reference/class/Part.json","requestURL":"http://developer.roblox.com/api-reference/class/Part.json","requestHost":"http://developer.roblox.com","djangoState":{},"studiomode":false,"hub":"developer","apiTag":[{"title":"Deprecated","tags":[],"locale":"en-us","uid":"bltd85f11ea2064e4af","created_by":"sys_bltd33aa865754a34b4","updated_by":"blt5fa5829b5333a817d0726f75","created_at":"2018-06-13T12:24:30.631Z","updated_at":"2018-06-23T13:17:35.151Z","_version":15,"type":"danger","message":"<p>This feature has been deprecated. You should no longer use this&nbsp;feature in new projects.\n</p>","alert_message":"This feature has been deprecated. You should no longer use this feature in new projects.","published_at":"2019-06-14T23:32:17.944Z"},{"title":"RobloxSecurity","type":"danger","message":"<p>This member is intended for CoreScripts created by Roblox and is not usable by players. Attempting to do so will cause an error\n</p>","tags":[],"locale":"en-us","uid":"blta746d2ffc149fdec","created_by":"blt47935daab13ee531","updated_by":"blt0d2e21c80087f7ec0b18bbac","created_at":"2018-06-14T22:01:30.763Z","updated_at":"2018-06-23T13:25:16.857Z","_version":4,"alert_message":"This member is intended for CoreScripts created by Roblox and is not usable by players. Attempting to do so will cause an error","published_at":"2019-06-14T23:32:15.770Z"},{"title":"NoYield","type":"info","message":"<p>This callback cannot have any yields within its set callback function.</p>","tags":[],"locale":"en-us","uid":"blta9c92ef9acd0ef4b","created_by":"sys_bltd33aa865754a34b4","updated_by":"blt0d2e21c80087f7ec0b18bbac","created_at":"2018-06-13T12:53:07.665Z","updated_at":"2018-06-23T13:25:34.894Z","_version":3,"alert_message":"This callback cannot have any yields within its set callback function.","published_at":"2019-06-14T23:32:13.638Z"},{"title":"PlayerReplicated","type":"info","message":"<p>The behavior of this object's replication is dependent upon the player who owns it.</p>","tags":[],"locale":"en-us","uid":"blt3ee650873ad877ca","created_by":"sys_bltd33aa865754a34b4","updated_by":"blt0d2e21c80087f7ec0b18bbac","created_at":"2018-06-13T12:53:41.069Z","updated_at":"2018-06-23T13:25:46.405Z","_version":3,"alert_message":"The behavior of this object's replication is dependent upon the player who owns it.","published_at":"2019-06-14T23:32:11.403Z"},{"title":"NotAccessibleSecurity","type":"danger","message":"<p><span style=\"font-family: Arial; font-size: 10pt; background-color: initial;\">This member cannot be accessed by any Lua code. Any attempts to do so will throw an error. You might be able to change it's value from Roblox Studio's property window.</span></p>","tags":[],"locale":"en-us","uid":"blt4f375cc6c7cb5b48","created_by":"blt47935daab13ee531","updated_by":"blt0d2e21c80087f7ec0b18bbac","created_at":"2018-06-14T22:01:52.943Z","updated_at":"2018-06-23T13:26:07.863Z","_version":3,"alert_message":"This member cannot be accessed by any Lua code. Any attempts to do so will throw an error. You might be able to change it's value from Roblox Studio's property window.","published_at":"2019-06-14T23:32:09.332Z"},{"title":"RobloxScriptSecurity","type":"danger","message":"<p><span style=\"font-family: Arial; font-size: 10pt; background-color: initial;\">This member can only be accessed by CoreScripts. Attempting to access this member outside of a CoreScript will cause an error.</span></p>","tags":[],"locale":"en-us","uid":"blt00fe099d361fe161","created_by":"blt47935daab13ee531","updated_by":"blt0d2e21c80087f7ec0b18bbac","created_at":"2018-06-14T22:01:10.635Z","updated_at":"2018-06-23T13:26:39.519Z","_version":3,"alert_message":"This member can only be accessed by CoreScripts. Attempting to access this member outside of a CoreScript will cause an error.","published_at":"2019-06-14T23:32:07.304Z"},{"title":"WriteOnly","type":"warning","message":"<p>This property can only be written to. Attempting to read from it will cause an error.</p>","tags":[],"locale":"en-us","uid":"blt20903dbfc780a141","created_by":"sys_bltd33aa865754a34b4","updated_by":"blt0d2e21c80087f7ec0b18bbac","created_at":"2018-06-13T12:52:37.512Z","updated_at":"2018-06-23T13:27:03.399Z","_version":2,"alert_message":"This property can only be written to. Attempting to read from it will cause an error.","published_at":"2019-06-14T23:32:05.272Z"},{"title":"Hidden","type":"info","message":"<p>This item is not shown in the object browser. It is likely not intended for widespread use. Expect problems and changes.</p>","tags":[],"locale":"en-us","uid":"bltefadd24bc614c595","created_by":"sys_bltd33aa865754a34b4","updated_by":"blt0d2e21c80087f7ec0b18bbac","created_at":"2018-06-13T12:51:39.088Z","updated_at":"2018-06-23T13:27:25.342Z","_version":2,"alert_message":"This item is not shown in the object browser. It is likely not intended for widespread use. Expect problems and changes.","published_at":"2019-06-14T23:32:03.123Z"},{"title":"Internal","type":"info","message":"<p>This object has been marked as internal. It is intended primarily for internal use, and has no significant benefit to 3rd-party developers.</p>","tags":[],"locale":"en-us","uid":"blt068f468f4f11ab65","created_by":"sys_bltd33aa865754a34b4","updated_by":"blt0d2e21c80087f7ec0b18bbac","created_at":"2018-06-13T12:49:13.828Z","updated_at":"2018-06-23T13:27:57.694Z","_version":2,"alert_message":"This object has been marked as internal. It is intended primarily for internal use, and has no significant benefit to 3rd-party developers.","published_at":"2019-06-14T23:32:01.060Z"},{"title":"Yields","type":"warning","message":"<p>This is a yielding function. When called, it will pause the Lua thread that called the function&nbsp;until a result is ready to be returned, without interrupting other scripts.</p>","tags":[],"locale":"en-us","uid":"blt2b8be0bbbae660fc","created_by":"sys_bltd33aa865754a34b4","updated_by":"blt6445dfad3bc18afb","created_at":"2018-06-13T12:51:05.768Z","updated_at":"2018-07-07T07:16:22.166Z","_version":12,"alert_message":"This is a yielding function. When called, it will pause the Lua thread that called the function until a result is ready to be returned, without interrupting other scripts.","published_at":"2019-06-14T23:31:59.073Z"},{"title":"NotScriptable","type":"danger","message":"<p>This member cannot be accessed by any Lua code. Attempts to do so will result in an error.&nbsp;<br>It may be possible to change its value from Roblox Studio's property window.</p>","tags":[],"locale":"en-us","uid":"blt381cca439dad355a","created_by":"sys_bltd33aa865754a34b4","updated_by":"blt6445dfad3bc18afb","created_at":"2018-06-13T12:50:33.668Z","updated_at":"2018-07-18T22:26:12.221Z","_version":6,"alert_message":"This member cannot be accessed by any Lua code. Attempts to do so will result in an error. \nIt may be possible to change its value from Roblox Studio's property window.","published_at":"2019-06-14T23:31:56.863Z"},{"title":"PluginSecurity","type":"primary","message":"<p><span style=\"font-family: Arial; font-size: 10pt; background-color: initial;\">This member cannot be used in scripts, but is usable in the command bar and plugins.</span></p>","tags":[],"locale":"en-us","uid":"blt69bb7ee44cca66f1","created_by":"blt47935daab13ee531","updated_by":"blt6445dfad3bc18afb","created_at":"2018-06-14T21:59:28.667Z","updated_at":"2018-08-01T20:33:03.495Z","_version":7,"alert_message":"This member cannot be used in scripts, but is usable in the command bar and plugins.","published_at":"2019-06-14T23:31:54.754Z"},{"title":"Service","type":"success","message":"<p>This class is a Service! It is a top-level singleton which can be retrieved using the `ServiceProvider/GetService|GetService` function.<br></p>","tags":[],"locale":"en-us","uid":"blt841d739fe5451d12","created_by":"sys_bltd33aa865754a34b4","updated_by":"blt6445dfad3bc18afb","created_at":"2018-06-13T12:48:07.344Z","updated_at":"2018-08-03T20:22:35.213Z","_version":27,"alert_message":"This class is a Service! It is a top-level singleton which can be retrieved using the `ServiceProvider/GetService|GetService` function.","published_at":"2019-06-14T23:31:52.724Z"},{"title":"NotReplicated","type":"danger","message":"<p>This item is not replicated across Roblox's server/client boundary.&nbsp;</p>","tags":[],"locale":"en-us","uid":"blt2a34109eba16fa2a","created_by":"sys_bltd33aa865754a34b4","updated_by":"blt0d2e21c80087f7ec0b18bbac","created_at":"2018-06-13T12:48:39.968Z","updated_at":"2018-12-21T10:09:26.063Z","_version":18,"alert_message":"This item is not replicated across Roblox's server/client boundary.","published_at":"2019-06-14T23:31:50.510Z"},{"title":"ReadOnly","type":"warning","message":"<p>This property can only be read from. Attempting to write to it will cause an error.</p>","tags":[],"locale":"en-us","uid":"blt8ba463a12a95a966","created_by":"sys_bltd33aa865754a34b4","updated_by":"blt0d2e21c80087f7ec0b18bbac","created_at":"2018-06-13T12:52:09.822Z","updated_at":"2018-12-27T09:12:36.607Z","_version":11,"alert_message":"This property can only be read from. Attempting to write to it will cause an error.","published_at":"2019-06-14T23:31:48.362Z"},{"title":"LocalUserSecurity","type":"warning","message":"<p><span style=\"font-family: Arial; font-size: 10pt; background-color: initial;\">This member cannot be used in scripts, but is usable in the command bar.</span></p>","tags":[],"locale":"en-us","uid":"blt82d587fadcec278d","created_by":"blt47935daab13ee531","updated_by":"blt0d2e21c80087f7ec0b18bbac","created_at":"2018-06-14T22:00:49.997Z","updated_at":"2018-12-27T15:08:41.727Z","_version":6,"alert_message":"This member cannot be used in scripts, but is usable in the command bar.","published_at":"2019-06-14T23:31:46.254Z"},{"title":"NotCreatable","type":"info","message":"<p>This object cannot be created with the&nbsp;Instance.new&nbsp;constructor function.</p>","tags":[],"locale":"en-us","uid":"blte0238f5be19c929f","created_by":"sys_bltd33aa865754a34b4","updated_by":"blt0d2e21c80087f7ec0b18bbac","created_at":"2018-06-13T12:47:18.712Z","updated_at":"2019-01-24T12:52:44.917Z","_version":16,"alert_message":"This object cannot be created with the Instance.new constructor function.","published_at":"2019-06-14T23:31:44.208Z"},{"title":"NotBrowsable","type":"secondary","message":"<p>This item is not shown in Roblox Studio's Object Browser.</p>","tags":[],"locale":"en-us","uid":"blt8d2687b3a4fccdca","created_by":"sys_bltd33aa865754a34b4","updated_by":"blt0d2e21c80087f7ec0b18bbac","created_at":"2018-06-13T12:54:09.460Z","updated_at":"2019-02-15T05:47:50.895Z","_version":34,"alert_message":"This item is not shown in Roblox Studio's Object Browser.","published_at":"2019-06-14T23:31:42.123Z"},{"title":"CanBeAsynchronous","type":"info","message":"<p>This function is sometimes a yielding function. When called, it may pause the Lua thread that called the function&nbsp;until a result is ready to be returned, without interrupting other tasks. Whether or not it actually pauses the Lua thread depends on what the function actually does.</p>","alert_message":"This function is sometimes a yielding function. When called, it may pause the Lua thread that called the function until a result is ready to be returned, without interrupting other tasks. Whether or not it actually pauses the Lua thread depends on what the function actually does.","tags":[],"locale":"en-us","uid":"blt19fe271a4ddea8e0","created_by":"blt6445dfad3bc18afb","updated_by":"blt6445dfad3bc18afb","created_at":"2018-07-07T06:46:19.967Z","updated_at":"2018-07-07T07:16:11.058Z","_version":2,"published_at":"2018-07-07T07:16:15.577Z"},{"title":"Asynchronous","type":"warning","message":"<p>This is a yielding function. When called, it will pause the Lua thread that called the function&nbsp;until a result is ready to be returned, without interrupting other scripts.</p>","alert_message":"This is a yielding function. When called, it will pause the Lua thread that called the function until a result is ready to be returned, without interrupting other scripts.","tags":[],"locale":"en-us","uid":"blt7309707be5b3a585","created_by":"blt6445dfad3bc18afb","updated_by":"blt6445dfad3bc18afb","created_at":"2018-07-07T06:46:36.827Z","updated_at":"2018-07-07T07:15:52.201Z","_version":3,"published_at":"2018-07-07T07:15:55.908Z"}]}